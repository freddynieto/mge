{"version":3,"sources":["AppMenu.js","utils/Utils.jsx","utils/Internationalization.jsx","AppTopbar.js","AppFooter.js","AppRightPanel.js","utils/AxiosInstance.jsx","utils/urls.jsx","service/UsuarioService.jsx","components/usuario/RestorePassword.jsx","components/usuario/Usuarios.jsx","components/usuario/Usuario.jsx","service/OpcionService.jsx","components/opcion/Opciones.jsx","service/PerfilService.jsx","components/perfil/Perfiles.jsx","service/PerfilOpcionService.jsx","components/perfil/Perfil.jsx","pages/AlertWait.jsx","components/dashboard/Dashboard.jsx","service/TrainingService.jsx","components/dashboard/UserInfo.jsx","components/usuario/UsuarioNew.jsx","components/user/User.jsx","components/cuenta/MiCuenta.jsx","components/courses/Courses.jsx","service/PostulantService.jsx","service/CountryTrainingService.jsx","service/CourseService.jsx","components/courses/Course.jsx","components/Applicant/Applicants.jsx","service/AttendanceService.jsx","service/InformService.jsx","components/Applicant/Applicant.jsx","components/workplan/WorkPlan.jsx","service/EvidenceService.jsx","components/finalReport/FinalReport.jsx","components/certificate/Certificate.jsx","components/classes/Classes.jsx","components/training/Training.jsx","components/dashboard/TrainingInfo.jsx","components/dashboard/TrainingApplicant.jsx","service/BeneficiaryService.jsx","service/CertificateService.jsx","components/beneficiary/Beneficiary.jsx","components/beneficiary/Beneficiaries.jsx","components/usuario/RestorePasswordUser.jsx","pages/ResetPasswordUser.jsx","components/cuenta/LanguagePreferences.jsx","pages/Language.jsx","App.js","service/CuentaService.jsx","service/CatalogoService.jsx","pages/Login.jsx","pages/Signup.jsx","pages/RecuperarPassword.jsx","pages/ResetPassword.jsx","AppWrapper.js","index.js"],"names":["AppSubmenu","props","useState","activeIndex","setActiveIndex","onMenuItemClick","event","item","index","disabled","preventDefault","command","originalEvent","items","root","onRootMenuItemClick","menuMode","ink","getInk","currentTarget","removeClass","el","i","children","length","className","indexOf","element","classList","remove","replace","RegExp","split","join","isMobile","window","innerWidth","isHorizontalOrSlim","useCallback","visible","getLink","menuitemIconClassName","classNames","icon","content","label","badge","value","style","height","commonLinkProps","target","onClick","e","onMouseEnter","menuActive","onMenuItemMouseEnter","onKeyDown","key","to","exact","activeClassName","href","url","rel","tabIndex","useEffect","resetActiveIndex","transitionTimeout","enter","exit","map","menuitemClassName","link","tooltip","role","CSSTransition","timeout","in","unmountOnExit","parentMenuItemActive","getItems","AppMenu","sidebarActive","onMenuClick","onMouseOver","sidebarStatic","onSidebarMouseOver","onMouseLeave","setTimeout","onSidebarMouseLeave","padding","alt","src","model","mobileMenuActive","disabledDate","current","dayjs","startOf","toCapitalize","o","toLowerCase","r","substring","toUpperCase","getToken","localStorage","getItem","getDatosUsuario","JSON","parse","opciones","getCatalogos","getOpciones","opcion","filter","idOpcionPadre","idOpcion","etiquetaOpcion","actionOpcion","icono","getOpcionesMenu","informs","w","infTipo","catValor","infEstado","opcionesSubOpciones","undefined","getTypeContent","fileName","getCulture","domainCulture","location","hostname","culture","setCulture","c","setItem","stringify","labels","welcomeBack","loginAccess","emailLogin","passwordLogin","login","enterEmail","enterPassword","emailNotValid","forgotPassword","recoverPassword","email","completeEmail","resourceNotAvailable","resetPassword","view","edit","errorOcurred","trainings","training","refresh","newTraining","onlyInactive","loading","courses","applicants","searchExpression","search","name","country","attendance","workPlan","finalReport","certificate","actions","registrationDate","evidences","download","reviewDate","observation","comments","sureApproveThe","sureRejectThe","yesApprove","yesReject","approve","reject","expires","attendanceSaved","emailSent","emailSendFailed","information","rol","applicant","invitedBy","firstName","lastName","sex","dateBirth","city","countryCode","phoneNumber","idNumber","currentyWorking","additionalEmail","progress","sendInvitationEmail","thenEmail","alreadyExists","successfullyCreated","successfullyAdded","successfullyRemoved","successfullySaved","successfullyDeleted","successfullyUpdated","couldNotSendEmail","emailSentSuccessfully","addCountryCourseApplicant","publishSuccesfully","saveDraft","surePublishTraining","yesPublish","publish","idTraining","completeID","region","selectRegion","language","selectLanguage","selectCountry","trainingName","completeTrainingName","modality","selectModality","startDate","selectStartDate","endDate","selectEndDate","selectCourses","applicantsEmails","pressEnterAddEmail","addApplicants","notPossibleAddApplicant","myAccount","signOut","accountUpdatedSuccessfully","uploadFailed","uploadProfilePicture","selectPhoto","completeFirstName","completeLastName","selectSex","selectDateBirth","uniqueIdentificationCountry","completeCity","selectCountryCode","completePhoneNumber","completeNameInstitution","ifYesCompleteNameInstitution","completeAdditionalEmail","additionalEmailNotValid","state","selectState","pleaseWait","passwordResetSuccessfully","completePassword","password","newPassword","confirmNewPassword","completeNewPassword","resetting","passwordHasMore8Characters","passwordHasSpecialCharacters","passwordHasNumber","passwordHasCapitalLetter","passwordsMatch","uploadYourWorkplan","file","selectFile","uploading","sending","send","uploadSuccessfully","workplanTemplate","languagePreferences","seePreferredLanguage","back","languagePreferencesSaved","ok","reset","save","accept","yes","no","cancel","minimumBeneficiaries","beneficiaryTitle","beneficiariesTitle","deleteBeneficiaryTitle","reConfirmDeleteBeneficiary","sendBeneficiaryListTitle","sendBeneficiaryListConfirm","beneficiarySuccessfullyRemoved","beneficiarySuccessfullyUpdated","certificateSentSuccessfully","certificateSendFailed","certificateGeneratedSuccessfully","newBeneficiary","jobTitle","isWorking","company","instructionLevel","totalPersons","sureDeleteBeneficiary","registryOperation","qualificationOperation","oneApprovedWorkplanRegisterBeneficiaries","sendWorkplan","oneApprovedFinalReportQualifyBeneficiaries","sendFinalReport","completeInstructionLevel","saving","companyID","completeCompanyID","completeCompany","completeJobTitle","totalCollaborators","completeTotalCollaborators","men","women","numberMen","numberWomen","uploadFinalReport","copyEvidenceLink","evidenceSendedSuccessfully","finalReportTemplate","thereMustLeast","registeredBeneficiariesUploadFinalReport","registerBeneficiaries","seeYourCertificateFinalReportBeneficiary","sendListBeneficiaries","users","trainerOfTrainers","trainer","sessionExpired","trainingsNotFound","backHome","notEnrolled","usersManagement","new","userUpdatedSuccessfully","user","userCreatedSuccessfully","createYourPassword","confirmYourPassword","profile","selectProfile","profilesManagement","level","active","inactive","profileSavedSuccessfully","profileDeletedSuccessfully","sureDeleteProfiles","delete","deleting","sureDeleteProfile","option","options","of","resultsFound","filtered","sureDownloadUsersReport","sureDownloadBeneficiariesReport","contents","id","getLabel","l","AppTopbar","history","useHistory","searchPanelDesktop","useRef","searchPanelMobile","searchActive","focus","logo","fontSize","margin","onMenuButtonClick","menu","onMobileMenuActive","onToggleMenu","topbarUserMenuActive","cursor","onTopbarUserMenuClick","paddingRight","paddingTop","textAlign","lineHeight","Text","nombres","apellidos","perfiles","type","perNombre","push","gutter","removeItem","AppFooter","display","AppRightPanel","AxiosInstance","navigate","axiosInstance","axios","create","headers","interceptors","request","use","config","token","toast","error","Promise","response","status","apiURL","getCatalogosPorPadreUrl","downloadUsersReport","updateTraining","downloadInformByName","downloadCertificateByUuid","downloadBeneficiariesReport","UsuarioService","gets","get","getsFiltro","filtros","post","usuario","put","set","patch","upLoadPhoto","datos","getLessPostulants","getUsersListByProfile","getTotalUsersByProfile","Paragraph","Typography","RestorePassword","isReseting","closeResetPassword","setPassword","validForm","setValidForm","sendNotification","setSendNotification","strong","layout","initialValues","onFinish","Item","rules","required","message","Password","onChange","minLength","messages","specialChar","number","capital","isValid","valuePropName","defaultChecked","checked","fieldNames","showSearch","email2","htmlType","usuarioService","Usuarios","load","setLoad","isLoading","setIsLoading","usuarios","setUsuarios","setUser","setError","documento","setDocumento","setEmail","setNombres","estado","setEstado","openResetPassword","setOpenResetPassword","setIsReseting","columnas","title","render","_","imagen","width","dataIndex","direction","responsive","codigotel","celular","record","usuId","values","a","md5","data","success","messageText","fetchData","estadoId","listObject","subTitle","extra","span","justify","Title","xs","sm","md","lg","xl","Group","states","s","catId","catNombre","bordered","showHeader","size","pagination","position","rowKey","columns","dataSource","rowClassName","placement","onClose","open","Option","Select","Usuario","useParams","isSaving","setIsSaving","currentlyWorking","setCurrentlyWorking","setUsuario","photoFile","setPhotoFile","fileList","setFileList","onRemove","newFileList","slice","splice","beforeUpload","URL","createObjectURL","handleUpload","FormData","append","update","trabaja","sexoId","sexo","paisId","pais","usuarioActualizado","newUsuario","fechanac","moment","$d","align","xxl","multiple","generos","optionFilterProp","paises","p","catDescripcion","srcSet","OpcionService","getsPorPadre","opcId","del","opcionService","Opciones","isLoadingOpcion","setIsLoadingOpcion","isDeleting","setIsDeleting","setOpciones","opcionesSeleccionados","setOpcionesSeleccionados","setOpcion","opcionAbierto","setOpcionAbierto","Form","useForm","formOpcion","onChangeOpcion","_opciones","opcNivel","opcNombre","opcHijos","abrirOpcion","cerrarOpcion","getOpcion","guardarOpcion","eliminarOpcion","nodo","parseInt","opcOrden","opcUrl","opcEstado","getNuevoOpcion","okText","cancelText","onConfirm","requests","forEach","all","then","results","catch","msgError","eliminarOpciones","okButtonProps","checkable","treeData","onSelect","selectedKeys","selectedNodes","closable","form","opcIcono","PerfilService","perfil","perId","perfilService","Perfiles","setPerfiles","perfilesSeleccionados","setPerfilesSeleccionados","setPerfil","perfilAbierto","setPerfilAbierto","formPerfil","rowSelection","selectedRowKeys","selectedRows","getCheckboxProps","onChangePerfil","_perfiles","unique","cerrarPerfil","guardarPerfil","eliminarPerfil","perEstado","perNivel","eliminarPerfiles","min","max","sureDeletProfile","PerfilOpcionService","perfilOpcion","perfilOpcionService","Perfil","isLoadingOpciones","setIsLoadingOpciones","text","opcLectura","opcEscritura","operacion","perfilOpcionActualizado","pfoOpcId","getPerfil","getOpcionesPerfil","_opcionesPerfil","idPerfil","op","guardar","perfilActualizado","eliminar","AlertWait","showIcon","tableProps","estilos","background","Dashboard","loadTotals","setLoadTotals","setUsers","isLoadingTotals","setIsLoadingTotals","totals","setTotals","setApellidos","setPaises","estados","setEstados","selectedProfiles","setSelectedProfiles","currentDataSource","setCurrentDataSource","isDownloading","setIsDownloading","filters","n","filterMode","onFilter","setProfile","profiles","u","finally","renderTotalExportar","description","metaData","xhrOverride","XMLHttpRequest","responseType","$","ajax","async","crossDomain","apiURLs","method","Accept","Authorization","xhr","blob","Blob","saveAs","downloadReport","valueStyle","color","fetchDataTotals","totalesCompleto","totales","t","total","reduce","accumulator","currentValue","activos","hoverable","Math","round","precision","prefix","suffix","renderTotal","tip","closeIcon","borderRadius","sorter","TrainingService","getByTraining","getById","pub","trainingService","UserInfo","setTrainings","fetchTrainings","idUsuario","centered","letterSpacing","readOnly","entEstado","entFechaFin","entFechaIni","entId","entNombre","marginBottom","reverse","renderTraining","border","UsuarioNew","passwordConfirm","setPasswordConfirm","insert","fetchProfiles","valueAgain","match","User","formUser","propsUpload","go","submit","MiCuenta","usuarioId","Courses","setState","setCourses","paddingBottom","entModalidad","numPostulantes","cursoList","fontWeight","block","borderColor","borderWidth","renderCourse","PostulantService","postulant","sendEmail","getTraining","validate","CountryTrainingService","countryTraining","CourseService","course","baseTraining","entCultura","postulantService","countryTrainingService","courseService","Course","formPostulante","postulants","setPostulants","setMessage","selectedModality","setSelectedModality","setStartDate","setEndDate","formCourse","removePostulant","newPostulantsList","idRegion","idModalidad","idEstado","trainingStatus","regions","setFieldValue","mode","buttonStyle","modalidades","m","Button","preview","renderModality","format","endOf","cursos","resetFields","posEmail","Applicants","setCourse","setApplicants","postulanteList","posEstado","entRegion","criteria","searchCriteria","ciudad","filteredCourse","asistenciaList","asiValor","informeList","curNombre","substr","idCurso","curId","certificadoList","tc","cerEstado","posId","AttendanceService","InformService","inform","downloadByName","sendEmailLoad","sendEmailRate","attendanceService","informService","panelStyle","backgroundColor","Applicant","setPostulante","attendanceValue","setAttendanceValue","commentWorkplan","setCommentWorkplan","commentFinalReport","setCommentFinalReport","isSavingAttendance","setIsSavingAttendance","isSavingInform","setIsSavingInform","isSending","setIsSending","Panel","header","infId","infFechaReg","infFechaSAprRec","infNombre","infObservacion","infRutaPlan","evidenciaList","downloadInform","column","eviUrl","whiteSpace","TextArea","showCount","maxLength","setInform","reportStatus","danger","renderInform","downloadCertificate","cerUuid","cerNombre","setAttendance","sendRateEmail","informe","idEntrenamiento","posInvitadoPor","defaultValue","formatter","parser","accordion","expandIconPosition","cerFechaCad","cerId","cerFechaReg","cerRuta","renderCertificate","WorkPlan","setPostulant","setUploading","setSending","selectedWorkplan","setSelectedWorkplan","renderWorkplan","sendLoadEmail","reportType","downloadWorkplanTemplate","autoComplete","marginTop","EvidenceService","evidence","evidenceService","FinalReport","selectedFinalReport","setSelectedFinalReport","renderFinalReport","idInforme","informInserted","newInform","downloadFinalReportTemplate","beneficiarioList","entLimBen","f","Certificate","Classes","Training","loadPostulant","setLoadPostulant","isLoadingCountry","setIsLoadingCountry","isLoadingCourse","setIsLoadingCourse","isPublishing","setIsPublishing","isSendingEmail","setIsSendingEmail","setTraining","setCountry","fetchCountries","newCourse","fetchCourses","idInvitadoPor","fetchPostulants","delPostulant","countries","countryTrainingList","paePais","modTraining","envios","promise","fn","resolve","flag","idPais","onDeselect","paeId","idNombreCurso","posEnvio","renderApplicants","TrainingInfo","TrainingApplicant","BeneficiaryService","beneficiary","getByPostulant","val","CertificateService","generate","downloadByUuid","renderPaisValor","Beneficiary","saveBeneficiary","closeBeneficiary","formBeneficiary","editDisabled","educationLevels","beneficiaryService","certificateService","confirm","Modal","Beneficiaries","operation","isOpening","setIsOpening","isLoadingBeneficiaries","setIsLoadingBeneficiaries","beneficiaryC1","setBeneficiaryC1","beneficiaryC2","setBeneficiaryC2","openC1","setOpenC1","openC2","setOpenC2","benId","selectedBeneficiary","setSelectedBeneficiary","openDeleteBeneficiary","setOpenDeleteBeneficiary","isGenerating","setIsGenerating","isSendingCertificate","setIsSendingCertificate","closeBeneficiaryC1","getBeneficiaryC1","idTipo","benTipo","benPais","idSexo","benSexo","idNivelInt","benNivelInt","saveBeneficiaryC1","time","closeBeneficiaryC2","getBeneficiaryC2","saveBeneficiaryC2","confirmDeleteBeneficiary","delBeneficiary","validateBeneficiary","sendCertificate","idPostulante","sendBeneficiaries","onOk","b","benTrabaja","typePersons","catReferencia","benDocumento","benNombres","benCargo","benNomEmpresa","benNumPer","benValidado","typeLoad","Collapse","confirmLoading","onCancel","RestorePasswordUser","passwordNew","setPasswordNew","passwordNewConfirm","setPasswordNewConfirm","oldpassword","console","log","ResetPasswordUser","fetchUser","LanguagePreferences","setValue","renderCulture","Language","App","menuClick","rightPanelClick","configClick","searchClick","topbarUserMenuClick","setResetActiveIndex","staticMenuMobileActive","setStaticMenuMobileActive","setSidebarStatic","setSidebarActive","setMenuActive","configActive","setConfigActive","rightPanelActive","setRightPanelActive","setSearchActive","setTopbarUserMenuActive","copyTooltipRef","useLocation","updateTargetEvents","blockBodyScroll","unblockBodyScroll","document","body","add","isHorizontal","isSlim","hideOverlayMenu","layoutClassName","ref","topbarScheme","onRightPanelButtonClick","prevState","onTopbarSearchToggle","onTopbarSearchClick","prevMenuActive","prevStaticMenuMobileActive","onRightPanelClick","opacity","bottom","right","path","component","CuentaService","autenticar","credenciales","autorizar","validateResetPassword","recoveryPassword","updatePassword","CatalogoService","getPaises","getPorPadre","catalogo","getModalidad","getCursos","getGeneros","getTrainingStatus","getReportType","getReportStatus","getStates","getEducationLevel","getTypePerson","getRegion","getCatalogo","cuentaService","catalogoService","Login","datosUsuario","setDatosUsuario","showPerfiles","setShowPerfiles","authorization","trim","opcionesVisible","mgeCatalogos","statusText","textTransform","renderPerfil","cultura","backgroundImage","renderError","messageCode","Signup","decodeURIComponent","uuid","loadCatalogos","setLoadCatalogos","isUploading","setIsUploading","isRegister","setIsRegister","validPostulant","setValidPostulant","posUuid","validPostulantInfo","invitadopor","fetchCatalogos","registrar","RecuperarPassword","okMsg","setOkMsg","setEmailSent","recuperar","banner","ResetPassword","setValidate","isValidating","setIsValidating","setIsValid","isResetting","setIsResetting","isReset","setIsReset","validateRequest","withRouter","scrollTo","colorScheme","setColorScheme","pathname","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.949bed33.chunk.js","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { classNames } from \"primereact/utils\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { Ripple } from \"primereact/ripple\";\r\nimport { Badge } from \"primereact/badge\";\r\n\r\nconst AppSubmenu = (props) => {\r\n  const [activeIndex, setActiveIndex] = useState(null);\r\n\r\n  const onMenuItemClick = (event, item, index) => {\r\n    if (item.disabled) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n\r\n    //execute command\r\n    if (item.command) {\r\n      item.command({ originalEvent: event, item: item });\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (item.items) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (props.root) {\r\n      props.onRootMenuItemClick({\r\n        originalEvent: event,\r\n      });\r\n    } else {\r\n      if (props.menuMode !== \"sidebar\") {\r\n        const ink = getInk(event.currentTarget);\r\n        if (ink) {\r\n          removeClass(ink, \"p-ink-active\");\r\n        }\r\n      }\r\n    }\r\n\r\n    setActiveIndex(index === activeIndex ? null : index);\r\n\r\n    props.onMenuItemClick({\r\n      originalEvent: event,\r\n      item: item,\r\n    });\r\n  };\r\n\r\n  const onKeyDown = (event, item, index) => {\r\n    if (event.key === \"Enter\") {\r\n      onMenuItemClick(event, item, index);\r\n    }\r\n  };\r\n\r\n  const getInk = (el) => {\r\n    for (let i = 0; i < el.children.length; i++) {\r\n      if (\r\n        typeof el.children[i].className === \"string\" &&\r\n        el.children[i].className.indexOf(\"p-ink\") !== -1\r\n      ) {\r\n        return el.children[i];\r\n      }\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const removeClass = (element, className) => {\r\n    if (element.classList) element.classList.remove(className);\r\n    else\r\n      element.className = element.className.replace(\r\n        new RegExp(\r\n          \"(^|\\\\b)\" + className.split(\" \").join(\"|\") + \"(\\\\b|$)\",\r\n          \"gi\"\r\n        ),\r\n        \" \"\r\n      );\r\n  };\r\n\r\n  const onMenuItemMouseEnter = (index) => {\r\n    if (props.root && props.menuActive && isHorizontalOrSlim() && !isMobile()) {\r\n      setActiveIndex(index);\r\n    }\r\n  };\r\n\r\n  const isMobile = () => {\r\n    return window.innerWidth <= 1025;\r\n  };\r\n\r\n  const isHorizontalOrSlim = useCallback(() => {\r\n    return props.menuMode === \"horizontal\" || props.menuMode === \"slim\";\r\n  }, [props.menuMode]);\r\n\r\n  const visible = (item) => {\r\n    return typeof item.visible === \"function\"\r\n      ? item.visible()\r\n      : item.visible !== false;\r\n  };\r\n\r\n  const getLink = (item, index) => {\r\n    const menuitemIconClassName = classNames(\"layout-menuitem-icon\", item.icon);\r\n    const content = (\r\n      <>\r\n        <i className={menuitemIconClassName}></i>\r\n        <span className=\"layout-menuitem-text\">{item.label}</span>\r\n        {item.items && (\r\n          <i className=\"pi pi-fw pi-chevron-down  layout-submenu-toggler\"></i>\r\n        )}\r\n        {item.badge && <Badge value={item.badge} style={{ height: \"100%\" }} />}\r\n        <Ripple />\r\n      </>\r\n    );\r\n    const commonLinkProps = {\r\n      style: item.style,\r\n      className: classNames(item.className, \"p-ripple\", {\r\n        \"p-disabled\": item.disabled,\r\n      }),\r\n      target: item.target,\r\n      onClick: (e) => onMenuItemClick(e, item, index),\r\n      onMouseEnter: () => onMenuItemMouseEnter(index),\r\n      onKeyDown: (e) => onKeyDown(e, item, index),\r\n    };\r\n\r\n    if (item.to) {\r\n      return (\r\n        <NavLink\r\n          to={item.to}\r\n          exact\r\n          activeClassName=\"active-route\"\r\n          {...commonLinkProps}\r\n        >\r\n          {content}\r\n        </NavLink>\r\n      );\r\n    } else {\r\n      return (\r\n        <a\r\n          href={item.url}\r\n          rel=\"noopener noreferrer\"\r\n          tabIndex={item.url ? \"\" : 0}\r\n          {...commonLinkProps}\r\n        >\r\n          {content}\r\n        </a>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getItems = () => {\r\n    const transitionTimeout =\r\n      isHorizontalOrSlim() && !props.root\r\n        ? { enter: 1000, exit: 450 }\r\n        : isHorizontalOrSlim() && !isMobile()\r\n        ? 0\r\n        : { enter: 1000, exit: 450 };\r\n    return props.items.map((item, i) => {\r\n      if (visible(item)) {\r\n        const menuitemClassName = classNames({\r\n          \"layout-root-menuitem\": props.root,\r\n          \"active-menuitem\": activeIndex === i && !item.disabled,\r\n        });\r\n        const link = getLink(item, i);\r\n        const tooltip = (\r\n          <div className=\"layout-menu-tooltip\">\r\n            <div className=\"layout-menu-tooltip-arrow\"></div>\r\n            <div className=\"layout-menu-tooltip-text\">{item.label}</div>\r\n          </div>\r\n        );\r\n\r\n        return (\r\n          <li\r\n            key={item.label || i}\r\n            className={menuitemClassName}\r\n            role=\"menuitem\"\r\n          >\r\n            {link}\r\n            {tooltip}\r\n            <CSSTransition\r\n              classNames=\"p-toggleable-content\"\r\n              timeout={transitionTimeout}\r\n              in={activeIndex === i}\r\n              unmountOnExit\r\n            >\r\n              <AppSubmenu\r\n                items={visible(item) && item.items}\r\n                menuActive={props.menuActive}\r\n                menuMode={props.menuMode}\r\n                parentMenuItemActive={activeIndex === i}\r\n                onMenuItemClick={props.onMenuItemClick}\r\n              ></AppSubmenu>\r\n            </CSSTransition>\r\n          </li>\r\n        );\r\n      }\r\n\r\n      return null;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.resetActiveIndex && isHorizontalOrSlim()) {\r\n      setActiveIndex(null);\r\n    }\r\n  }, [props.resetActiveIndex, isHorizontalOrSlim]);\r\n\r\n  useEffect(() => {\r\n    if (!props.menuActive && isHorizontalOrSlim()) {\r\n      setActiveIndex(null);\r\n    }\r\n  }, [props.menuActive, isHorizontalOrSlim]);\r\n\r\n  if (!props.items) {\r\n    return null;\r\n  }\r\n\r\n  const items = getItems();\r\n  return (\r\n    <ul className={props.className} role=\"menu\">\r\n      {items}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst AppMenu = (props) => {\r\n  const onSidebarMouseOver = () => {\r\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\r\n      props.onSidebarMouseOver();\r\n    }\r\n  };\r\n\r\n  const onSidebarMouseLeave = () => {\r\n    if (props.menuMode === \"sidebar\" && !props.sidebarStatic) {\r\n      setTimeout(() => {\r\n        props.onSidebarMouseLeave();\r\n      }, 250);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classNames(\"menu-wrapper\", {\r\n        \"layout-sidebar-active\": props.sidebarActive,\r\n      })}\r\n      onClick={props.onMenuClick}\r\n      onMouseOver={onSidebarMouseOver}\r\n      onMouseLeave={onSidebarMouseLeave}\r\n    >\r\n      <div\r\n        style={{\r\n          padding: \"20px\",\r\n        }}\r\n      >\r\n        <img alt=\"MGE\" src=\"./assets/logo.png\" />\r\n      </div>\r\n\r\n      <div className=\"layout-menu-container\">\r\n        <AppSubmenu\r\n          items={props.model}\r\n          className=\"layout-menu\"\r\n          menuActive={props.menuActive}\r\n          onRootMenuItemClick={props.onRootMenuItemClick}\r\n          mobileMenuActive={props.mobileMenuActive}\r\n          onMenuItemClick={props.onMenuItemClick}\r\n          root\r\n          menuMode={props.menuMode}\r\n          parentMenuItemActive\r\n          resetActiveIndex={props.resetActiveIndex}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppMenu;","import { format } from 'date-fns'\r\nimport { es } from 'date-fns/esm/locale'\r\nimport locale from \"antd/es/date-picker/locale/es_ES\"\r\nimport dayjs from 'dayjs'\r\n\r\nexport const disabledDate = (current) => {\r\n    return current && current >= dayjs().startOf('day')\r\n}\r\nexport const getFormatoFecha = () => \"YYYY-MM-DD\"\r\nexport const formatoMoneda = (v) => {\r\n    const formater = new Intl.NumberFormat('es-EC', {\r\n        style: 'currency',\r\n        currency: 'USD'\r\n    })\r\n    return formater.format(v)\r\n}\r\nexport const formatoFechas = f => {\r\n    const formater = new Intl.DateTimeFormat('es-EC', {\r\n        year: 'numeric',\r\n        month: 'long',\r\n        day: '2-digit'\r\n    })\r\n    return formater.format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]))\r\n}\r\nexport const toCapitalize = (o) => o.toLowerCase().split(' ').map(r => `${r.substring(0, 1).toUpperCase()}${r.substring(1, r.length)} `)\r\nexport const formatoFecha = (f) => format(new Date(f.toString().substring(0, 10).split('-')[0], f.toString().substring(0, 10).split('-')[1] - 1, f.toString().substring(0, 10).split('-')[2]), \"dd MMMM yyyy\", { locale: es })\r\nexport const formatoFechaDate = (f) => format(f, \"dd/MM/yyyy\", { locale: es })\r\nexport const getToken = () => localStorage.getItem('mgeToken') || ''\r\nexport const getDatosUsuario = () => localStorage.getItem('mgeDatosUsuario') ? JSON.parse(localStorage.getItem('mgeDatosUsuario')) : { opciones: [] }\r\nexport const getCatalogos = () => localStorage.getItem('mgeCatalogos') ? JSON.parse(localStorage.getItem('mgeCatalogos')) : {}\r\nconst getInforms = () => localStorage.getItem('mgeInformList') ? JSON.parse(localStorage.getItem('mgeInformList')) : []\r\nconst getOpciones = (opciones, opcion) => {\r\n    return opciones\r\n        .filter(o => o.idOpcionPadre === opcion.idOpcion).length > 0 ?\r\n        opciones\r\n            .filter(o => o.idOpcionPadre === opcion.idOpcion)\r\n            .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono }))\r\n        : null\r\n}\r\nexport const getOpcionesMenu = () => {\r\n    const informs = getInforms()\r\n    let opciones = getDatosUsuario().opciones || []\r\n    //  Si existe informes se muestran las opciones de beneficiarios para registro y calificación.\r\n    if (informs.length > 1) {\r\n        // Si existe un WP aprobado y no existe un reporte final aprobado se habilita el registro de beneficiarios.\r\n        if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/registry') >= 0 ? { ...o, visible: true } : { ...o }))\r\n        else if (informs.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n            informs.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0)\r\n            opciones = getDatosUsuario().opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/qualification') >= 0 ? { ...o, visible: true } : { ...o }))\r\n    }\r\n    const opcionesSubOpciones = opciones\r\n        .filter(o => o.idOpcionPadre === undefined && o.visible === true)\r\n        .map(o => ({ ...o, items: getOpciones(opciones, o) }))\r\n        .map(o => ({ label: toCapitalize(o.etiquetaOpcion), to: o.actionOpcion, icon: o.icono, items: o.items }))\r\n    return opcionesSubOpciones ? opcionesSubOpciones : []\r\n}\r\nexport const getLocale = () => locale\r\nexport const getCultures = () => [\r\n    {\r\n        id: 'es_EC',\r\n        value: 'Español'\r\n    },\r\n    {\r\n        id: 'en_US',\r\n        value: 'English'\r\n    }\r\n]\r\nexport const getTypeContent = (fileName) => fileName.indexOf('.doc') > 0 ? 'application/msword'\r\n    : fileName.indexOf('.docx') > 0 ? 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n        : fileName.indexOf('.xls') > 0 ? 'application/vnd.ms-excel'\r\n            : fileName.indexOf('.xlsx') > 0 ? 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n                : fileName.indexOf('.jpeg') > 0 ? 'image/jpeg'\r\n                    : fileName.indexOf('.jpg') > 0 ? 'image/jpeg'\r\n                        : fileName.indexOf('.png') > 0 ? 'image/png'\r\n                            : fileName.indexOf('.pdf') > 0 ? 'application/pdf'\r\n                                : fileName.indexOf('.rar') > 0 ? 'application/x-rar-compressed'\r\n                                    : 'application/octet-stream'","export const getCulture = () => {\r\n    const domainCulture = window.location.hostname.indexOf('minegocioverde') > 0 ? 'en_US' : 'es_EC'\r\n    return (localStorage.getItem('mgeCulture') && JSON.parse(localStorage.getItem('mgeCulture')).culture) || domainCulture\r\n}\r\nexport const setCulture = (c) => localStorage.setItem('mgeCulture', JSON.stringify(c))\r\nexport const labels = {\r\n    welcomeBack: 'welcomeBack',\r\n    loginAccess: 'loginAccess',\r\n    emailLogin: 'emailLogin',\r\n    passwordLogin: 'passwordLogin',\r\n    login: 'login',\r\n    enterEmail: 'enterEmail',\r\n    enterPassword: 'enterPassword',\r\n    emailNotValid: 'emailNotValid',\r\n    forgotPassword: 'forgotPassword',\r\n    recoverPassword: 'recoverPassword',\r\n    email: 'email',\r\n    completeEmail: 'completeEmail',\r\n    resourceNotAvailable: 'resourceNotAvailable',\r\n    resetPassword: 'resetPassword',\r\n    view: 'view',\r\n    edit: 'edit',\r\n    errorOcurred: 'errorOcurred',\r\n    trainings: 'trainings',\r\n    training: 'training',\r\n    refresh: 'refresh',\r\n    newTraining: 'newTraining',\r\n    onlyInactive: 'onlyInactive',\r\n    loading: 'loading',\r\n    courses: 'courses',\r\n    applicants: 'applicants',\r\n    searchExpression: 'searchExpression',\r\n    search: 'search',\r\n    name: 'name',\r\n    country: 'country',\r\n    attendance: 'attendance',\r\n    workPlan: 'workPlan',\r\n    finalReport: 'finalReport',\r\n    certificate: 'certificate',\r\n    actions: 'actions',\r\n    registrationDate: 'registrationDate',\r\n    evidences: 'evidences',\r\n    download: 'download',\r\n    reviewDate: 'reviewDate',\r\n    observation: 'observation',\r\n    comments: 'comments',\r\n    sureApproveThe: 'sureApproveThe',\r\n    sureRejectThe: 'sureRejectThe',\r\n    yesApprove: 'yesApprove',\r\n    yesReject: 'yesReject',\r\n    approve: 'approve',\r\n    reject: 'reject',\r\n    expires: 'expires',\r\n    attendanceSaved: 'attendanceSaved',\r\n    emailSent: 'emailSent',\r\n    emailSendFailed: 'emailSendFailed',\r\n    information: 'information',\r\n    rol: 'rol',\r\n    applicant: 'applicant',\r\n    invitedBy: 'invitedBy',\r\n    firstName: 'firstName',\r\n    lastName: 'lastName',\r\n    sex: 'sex',\r\n    dateBirth: 'dateBirth',\r\n    city: 'city',\r\n    countryCode: 'countryCode',\r\n    phoneNumber: 'phoneNumber',\r\n    idNumber: 'idNumber',\r\n    currentyWorking: 'currentyWorking',\r\n    additionalEmail: 'additionalEmail',\r\n    progress: 'progress',\r\n    sendInvitationEmail: 'sendInvitationEmail',\r\n    thenEmail: 'thenEmail',\r\n    alreadyExists: 'alreadyExists',\r\n    successfullyCreated: 'successfullyCreated',\r\n    successfullyAdded: 'successfullyAdded',\r\n    successfullyRemoved: 'successfullyRemoved',\r\n    successfullySaved: 'successfullySaved',\r\n    successfullyDeleted: 'successfullyDeleted',\r\n    successfullyUpdated: 'successfullyUpdated',\r\n    couldNotSendEmail: 'couldNotSendEmail',\r\n    emailSentSuccessfully: 'emailSentSuccessfully',\r\n    addCountryCourseApplicant: 'addCountryCourseApplicant',\r\n    publishSuccesfully: 'publishSuccesfully',\r\n    saveDraft: 'saveDraft',\r\n    surePublishTraining: 'surePublishTraining',\r\n    yesPublish: 'yesPublish',\r\n    publish: 'publish',\r\n    idTraining: 'idTraining',\r\n    completeID: 'completeID',\r\n    region: 'region',\r\n    selectRegion: 'selectRegion',\r\n    language: 'language',\r\n    selectLanguage: 'selectLanguage',\r\n    selectCountry: 'selectCountry',\r\n    trainingName: 'trainingName',\r\n    completeTrainingName: 'completeTrainingName',\r\n    modality: 'modality',\r\n    selectModality: 'selectModality',\r\n    startDate: 'startDate',\r\n    selectStartDate: 'selectStartDate',\r\n    endDate: 'endDate',\r\n    selectEndDate: 'selectEndDate',\r\n    selectCourses: 'selectCourses',\r\n    applicantsEmails: 'applicantsEmails',\r\n    pressEnterAddEmail: 'pressEnterAddEmail',\r\n    addApplicants: 'addApplicants',\r\n    notPossibleAddApplicant: 'notPossibleAddApplicant',\r\n    myAccount: 'myAccount',\r\n    signOut: 'signOut',\r\n    accountUpdatedSuccessfully: 'accountUpdatedSuccessfully',\r\n    uploadFailed: 'uploadFailed',\r\n    uploadProfilePicture: 'uploadProfilePicture',\r\n    selectPhoto: 'selectPhoto',\r\n    completeFirstName: 'completeFirstName',\r\n    completeLastName: 'completeLastName',\r\n    selectSex: 'selectSex',\r\n    selectDateBirth: 'selectDateBirth',\r\n    uniqueIdentificationCountry: 'uniqueIdentificationCountry',\r\n    completeCity: 'completeCity',\r\n    selectCountryCode: 'selectCountryCode',\r\n    completePhoneNumber: 'completePhoneNumber',\r\n    completeNameInstitution: 'completeNameInstitution',\r\n    ifYesCompleteNameInstitution: 'ifYesCompleteNameInstitution',\r\n    completeAdditionalEmail: 'completeAdditionalEmail',\r\n    additionalEmailNotValid: 'additionalEmailNotValid',\r\n    state: 'state',\r\n    selectState: 'selectState',\r\n    pleaseWait: 'pleaseWait',\r\n    passwordResetSuccessfully: 'passwordResetSuccessfully',\r\n    completePassword: 'completePassword',\r\n    password: 'password',\r\n    newPassword: 'newPassword',\r\n    confirmNewPassword: 'confirmNewPassword',\r\n    completeNewPassword: 'completeNewPassword',\r\n    resetting: 'resetting',\r\n    passwordHasMore8Characters: 'passwordHasMore8Characters',\r\n    passwordHasSpecialCharacters: 'passwordHasSpecialCharacters',\r\n    passwordHasNumber: 'passwordHasNumber',\r\n    passwordHasCapitalLetter: 'passwordHasCapitalLetter',\r\n    passwordsMatch: 'passwordsMatch',\r\n    uploadYourWorkplan: 'uploadYourWorkplan',\r\n    file: 'file',\r\n    selectFile: 'selectFile',\r\n    uploading: 'uploading',\r\n    sending: 'sending',\r\n    send: 'send',\r\n    uploadSuccessfully: 'uploadSuccessfully',\r\n    workplanTemplate: 'workplanTemplate',\r\n    languagePreferences: 'languagePreferences',\r\n    seePreferredLanguage: 'seePreferredLanguage',\r\n    back: 'back',\r\n    languagePreferencesSaved: 'languagePreferencesSaved',\r\n    ok: 'ok',\r\n    reset: 'reset',\r\n    save: 'save',\r\n    accept: 'accept',\r\n    yes: 'yes',\r\n    no: 'no',\r\n    cancel: 'cancel',\r\n    minimumBeneficiaries: 'minimumBeneficiaries',\r\n    beneficiaryTitle: 'beneficiaryTitle',\r\n    beneficiariesTitle: 'beneficiariesTitle',\r\n    deleteBeneficiaryTitle: 'deleteBeneficiaryTitle',\r\n    reConfirmDeleteBeneficiary: 'reConfirmDeleteBeneficiary',\r\n    sendBeneficiaryListTitle: 'sendBeneficiaryListTitle',\r\n    sendBeneficiaryListConfirm: 'sendBeneficiaryListConfirm',\r\n    beneficiarySuccessfullyRemoved: 'beneficiarySuccessfullyRemoved',\r\n    beneficiarySuccessfullyUpdated: 'beneficiarySuccessfullyUpdated',\r\n    certificateSentSuccessfully: 'certificateSentSuccessfully',\r\n    certificateSendFailed: 'certificateSendFailed',\r\n    certificateGeneratedSuccessfully: 'certificateGeneratedSuccessfully',\r\n    newBeneficiary: 'newBeneficiary',\r\n    jobTitle: 'jobTitle',\r\n    isWorking: 'isWorking',\r\n    company: 'company',\r\n    instructionLevel: 'instructionLevel',\r\n    totalPersons: 'totalPersons',\r\n    sureDeleteBeneficiary: 'sureDeleteBeneficiary',\r\n    registryOperation: 'registryOperation',\r\n    qualificationOperation: 'qualificationOperation',\r\n    oneApprovedWorkplanRegisterBeneficiaries: 'oneApprovedWorkplanRegisterBeneficiaries',\r\n    sendWorkplan: 'sendWorkplan',\r\n    oneApprovedFinalReportQualifyBeneficiaries: 'oneApprovedFinalReportQualifyBeneficiaries',\r\n    sendFinalReport: 'sendFinalReport',\r\n    completeInstructionLevel: 'completeInstructionLevel',\r\n    saving: 'saving',\r\n    companyID: 'companyID',\r\n    completeCompanyID: 'completeCompanyID',\r\n    completeCompany: 'completeCompany',\r\n    completeJobTitle: 'completeJobTitle',\r\n    totalCollaborators: 'totalCollaborators',\r\n    completeTotalCollaborators: 'completeTotalCollaborators',\r\n    men: 'men',\r\n    women: 'women',\r\n    numberMen: 'numberMen',\r\n    numberWomen: 'numberWomen',\r\n    uploadFinalReport: 'uploadFinalReport',\r\n    copyEvidenceLink: 'copyEvidenceLink',\r\n    url: 'url',\r\n    evidenceSendedSuccessfully: 'evidenceSendedSuccessfully',\r\n    finalReportTemplate: 'finalReportTemplate',\r\n    thereMustLeast: 'thereMustLeast',\r\n    registeredBeneficiariesUploadFinalReport: 'registeredBeneficiariesUploadFinalReport',\r\n    registerBeneficiaries: 'registerBeneficiaries',\r\n    seeYourCertificateFinalReportBeneficiary: 'seeYourCertificateFinalReportBeneficiary',\r\n    sendListBeneficiaries: 'sendListBeneficiaries',\r\n    users: 'users',\r\n    trainerOfTrainers: 'trainerOfTrainers',\r\n    trainer: 'trainer',\r\n    sessionExpired: 'sessionExpired',\r\n    trainingsNotFound: 'trainingsNotFound',\r\n    backHome: 'backHome',\r\n    notEnrolled: 'notEnrolled',\r\n    usersManagement: 'usersManagement',\r\n    new: 'new',\r\n    userUpdatedSuccessfully: 'userUpdatedSuccessfully',\r\n    user: 'user',\r\n    userCreatedSuccessfully: 'userCreatedSuccessfully',\r\n    createYourPassword: 'createYourPassword',\r\n    confirmYourPassword: 'confirmYourPassword',\r\n    profile: 'profile',\r\n    selectProfile: 'selectProfile',\r\n    profilesManagement: 'profilesManagement',\r\n    level: 'level',\r\n    active: 'active',\r\n    inactive: 'inactive',\r\n    profileSavedSuccessfully: 'profileSavedSuccessfully',\r\n    profileDeletedSuccessfully: 'profileDeletedSuccessfully',\r\n    sureDeleteProfiles: 'sureDeleteProfiles',\r\n    delete: 'delete',\r\n    deleting: 'deleting',\r\n    sureDeleteProfile: 'sureDeleteProfile',\r\n    option: 'option',\r\n    options: 'options',\r\n    of: 'of',\r\n    resultsFound: 'resultsFound',\r\n    filtered: 'filtered',\r\n    sureDownloadUsersReport: 'sureDownloadUsersReport',\r\n    sureDownloadBeneficiariesReport: 'sureDownloadBeneficiariesReport',\r\n}\r\nconst contents = [\r\n    { id: 'welcomeBack', labels: [{ culture: 'en_US', label: 'Welcome back' }, { culture: 'es_EC', label: 'Bienvenido' }] },\r\n    { id: 'loginAccess', labels: [{ culture: 'en_US', label: 'Log in to access your account' }, { culture: 'es_EC', label: 'Ingresa para acceder a tu cuenta' }] },\r\n    { id: 'emailLogin', labels: [{ culture: 'en_US', label: 'Log in with your email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'passwordLogin', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Contraseña' }] },\r\n    { id: 'login', labels: [{ culture: 'en_US', label: 'Log in' }, { culture: 'es_EC', label: 'Ingresar' }] },\r\n    { id: 'enterEmail', labels: [{ culture: 'en_US', label: 'Enter you email' }, { culture: 'es_EC', label: 'Ingresa el correo' }] },\r\n    { id: 'enterPassword', labels: [{ culture: 'en_US', label: 'Enter your password' }, { culture: 'es_EC', label: 'Ingresa la contraseña' }] },\r\n    { id: 'emailNotValid', labels: [{ culture: 'en_US', label: 'Email is not valid' }, { culture: 'es_EC', label: 'Correo no válido' }] },\r\n    { id: 'forgotPassword', labels: [{ culture: 'en_US', label: 'Forgot your password?' }, { culture: 'es_EC', label: '¿Olvidaste tu contraseña?' }] },\r\n    { id: 'recoverPassword', labels: [{ culture: 'en_US', label: 'Recover password' }, { culture: 'es_EC', label: 'Recuperar Contraseña' }] },\r\n    { id: 'email', labels: [{ culture: 'en_US', label: 'Email' }, { culture: 'es_EC', label: 'Correo' }] },\r\n    { id: 'completeEmail', labels: [{ culture: 'en_US', label: 'Complete your email' }, { culture: 'es_EC', label: 'Completa el correo' }] },\r\n    { id: 'resourceNotAvailable', labels: [{ culture: 'en_US', label: 'The requested resource is not available or cannot be found.' }, { culture: 'es_EC', label: 'El recurso solicitado no está disponible o no existe.' }] },\r\n    { id: 'resetPassword', labels: [{ culture: 'en_US', label: 'Reset password' }, { culture: 'es_EC', label: 'Restablecer contraseña' }] },\r\n    { id: 'view', labels: [{ culture: 'en_US', label: 'View' }, { culture: 'es_EC', label: 'Ver' }] },\r\n    { id: 'edit', labels: [{ culture: 'en_US', label: 'Edit' }, { culture: 'es_EC', label: 'Editar' }] },\r\n    { id: 'errorOcurred', labels: [{ culture: 'en_US', label: 'An error ocurred' }, { culture: 'es_EC', label: 'Ocurrió un error' }] },\r\n    { id: 'trainings', labels: [{ culture: 'en_US', label: 'Trainings' }, { culture: 'es_EC', label: 'Formaciones' }] },\r\n    { id: 'training', labels: [{ culture: 'en_US', label: 'Training' }, { culture: 'es_EC', label: 'Formación' }] },\r\n    { id: 'refresh', labels: [{ culture: 'en_US', label: 'Refresh' }, { culture: 'es_EC', label: 'Actualizar' }] },\r\n    { id: 'newTraining', labels: [{ culture: 'en_US', label: 'New Training' }, { culture: 'es_EC', label: 'Nueva Formación' }] },\r\n    { id: 'onlyInactive', labels: [{ culture: 'en_US', label: 'Inactive only' }, { culture: 'es_EC', label: 'Solo inactivos' }] },\r\n    { id: 'loading', labels: [{ culture: 'en_US', label: 'Loading' }, { culture: 'es_EC', label: 'Cargando' }] },\r\n    { id: 'courses', labels: [{ culture: 'en_US', label: 'Courses' }, { culture: 'es_EC', label: 'Cursos' }] },\r\n    { id: 'applicants', labels: [{ culture: 'en_US', label: 'Applicants' }, { culture: 'es_EC', label: 'Postulantes' }] },\r\n    { id: 'searchExpression', labels: [{ culture: 'en_US', label: 'Search expression' }, { culture: 'es_EC', label: 'Criterio de Búsqueda' }] },\r\n    { id: 'search', labels: [{ culture: 'en_US', label: 'Search' }, { culture: 'es_EC', label: 'Buscar' }] },\r\n    { id: 'name', labels: [{ culture: 'en_US', label: 'Name' }, { culture: 'es_EC', label: 'Nombre' }] },\r\n    { id: 'country', labels: [{ culture: 'en_US', label: 'Country' }, { culture: 'es_EC', label: 'País' }] },\r\n    { id: 'attendance', labels: [{ culture: 'en_US', label: 'Attendance' }, { culture: 'es_EC', label: 'Asistencia' }] },\r\n    { id: 'workPlan', labels: [{ culture: 'en_US', label: 'Work Plan' }, { culture: 'es_EC', label: 'Plan de Trabajo' }] },\r\n    { id: 'finalReport', labels: [{ culture: 'en_US', label: 'Final Report' }, { culture: 'es_EC', label: 'Informe Final' }] },\r\n    { id: 'certificate', labels: [{ culture: 'en_US', label: 'Certificate' }, { culture: 'es_EC', label: 'Certificado' }] },\r\n    { id: 'actions', labels: [{ culture: 'en_US', label: 'Actions' }, { culture: 'es_EC', label: 'Acciones' }] },\r\n    { id: 'registrationDate', labels: [{ culture: 'en_US', label: 'Registration Date' }, { culture: 'es_EC', label: 'Fecha de Registro' }] },\r\n    { id: 'evidences', labels: [{ culture: 'en_US', label: 'Evidences' }, { culture: 'es_EC', label: 'Evidencias' }] },\r\n    { id: 'download', labels: [{ culture: 'en_US', label: 'Download' }, { culture: 'es_EC', label: 'Descargar' }] },\r\n    { id: 'reviewDate', labels: [{ culture: 'en_US', label: 'Review Date' }, { culture: 'es_EC', label: 'Fecha de Revisión' }] },\r\n    { id: 'observation', labels: [{ culture: 'en_US', label: 'Observation' }, { culture: 'es_EC', label: 'Observación' }] },\r\n    { id: 'comments', labels: [{ culture: 'en_US', label: 'Comments' }, { culture: 'es_EC', label: 'Comentarios' }] },\r\n    { id: 'sureApproveThe', labels: [{ culture: 'en_US', label: 'Are you sure to approve the' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas aprobar el' }] },\r\n    { id: 'sureRejectThe', labels: [{ culture: 'en_US', label: 'Are you sure to reject the' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas rechazar el' }] },\r\n    { id: 'yesApprove', labels: [{ culture: 'en_US', label: 'Yes, approve' }, { culture: 'es_EC', label: 'Sí, aprobar' }] },\r\n    { id: 'yesReject', labels: [{ culture: 'en_US', label: 'Yes, reject' }, { culture: 'es_EC', label: 'Sí, rechazar' }] },\r\n    { id: 'approve', labels: [{ culture: 'en_US', label: 'Approve' }, { culture: 'es_EC', label: 'Aprobar' }] },\r\n    { id: 'reject', labels: [{ culture: 'en_US', label: 'Reject' }, { culture: 'es_EC', label: 'Rechazar' }] },\r\n    { id: 'expires', labels: [{ culture: 'en_US', label: 'Expires' }, { culture: 'es_EC', label: 'Vence' }] },\r\n    { id: 'attendanceSaved', labels: [{ culture: 'en_US', label: 'Attendance Successfully Saved' }, { culture: 'es_EC', label: 'Asistencia guardada exitosamente' }] },\r\n    { id: 'emailSent', labels: [{ culture: 'en_US', label: 'Email Sent Successfully' }, { culture: 'es_EC', label: 'Email enviado existosamente' }] },\r\n    { id: 'information', labels: [{ culture: 'en_US', label: 'Information' }, { culture: 'es_EC', label: 'Información' }] },\r\n    { id: 'rol', labels: [{ culture: 'en_US', label: 'Rol' }, { culture: 'es_EC', label: 'Rol' }] },\r\n    { id: 'applicant', labels: [{ culture: 'en_US', label: 'Applicant' }, { culture: 'es_EC', label: 'Postulante' }] },\r\n    { id: 'invitedBy', labels: [{ culture: 'en_US', label: 'Invited by' }, { culture: 'es_EC', label: 'Invitado por' }] },\r\n    { id: 'firstName', labels: [{ culture: 'en_US', label: 'First Name' }, { culture: 'es_EC', label: 'Nombres' }] },\r\n    { id: 'lastName', labels: [{ culture: 'en_US', label: 'Last Name' }, { culture: 'es_EC', label: 'Apellidos' }] },\r\n    { id: 'sex', labels: [{ culture: 'en_US', label: 'Sex' }, { culture: 'es_EC', label: 'Sexo' }] },\r\n    { id: 'dateBirth', labels: [{ culture: 'en_US', label: 'Date Birth' }, { culture: 'es_EC', label: 'Fecha de Nacimiento' }] },\r\n    { id: 'city', labels: [{ culture: 'en_US', label: 'City' }, { culture: 'es_EC', label: 'Ciudad' }] },\r\n    { id: 'countryCode', labels: [{ culture: 'en_US', label: 'Country Code' }, { culture: 'es_EC', label: 'Código de País' }] },\r\n    { id: 'phoneNumber', labels: [{ culture: 'en_US', label: 'Phone Number' }, { culture: 'es_EC', label: 'Número de Teléfono' }] },\r\n    { id: 'idNumber', labels: [{ culture: 'en_US', label: 'ID Number' }, { culture: 'es_EC', label: 'Número de Identificación' }] },\r\n    { id: 'currentyWorking', labels: [{ culture: 'en_US', label: 'Currenty Working' }, { culture: 'es_EC', label: 'Esta trabajando actualmente' }] },\r\n    { id: 'additionalEmail', labels: [{ culture: 'en_US', label: 'Additional Email' }, { culture: 'es_EC', label: 'Correo Adicional' }] },\r\n    { id: 'progress', labels: [{ culture: 'en_US', label: 'Progress' }, { culture: 'es_EC', label: 'Progreso' }] },\r\n    { id: 'sendInvitationEmail', labels: [{ culture: 'en_US', label: 'Send invitation email' }, { culture: 'es_EC', label: 'Enviar el correo electrónico de invitación' }] },\r\n    { id: 'thenEmail', labels: [{ culture: 'en_US', label: 'Then email' }, { culture: 'es_EC', label: 'El correo' }] },\r\n    { id: 'alreadyExists', labels: [{ culture: 'en_US', label: 'already exists' }, { culture: 'es_EC', label: 'ya se encuentra registrado' }] },\r\n    { id: 'successfullyCreated', labels: [{ culture: 'en_US', label: 'succesfully created' }, { culture: 'es_EC', label: 'creado exitosamente' }] },\r\n    { id: 'successfullyAdded', labels: [{ culture: 'en_US', label: 'successfully added' }, { culture: 'es_EC', label: 'agregado exitosamente' }] },\r\n    { id: 'successfullyRemoved', labels: [{ culture: 'en_US', label: 'successfully removed' }, { culture: 'es_EC', label: 'eliminado exitosamente' }] },\r\n    { id: 'successfullySaved', labels: [{ culture: 'en_US', label: 'successfully saved' }, { culture: 'es_EC', label: 'guardado exitosamente' }] },\r\n    { id: 'successfullyDeleted', labels: [{ culture: 'en_US', label: 'successfully deleted' }, { culture: 'es_EC', label: 'eliminado exitosamente' }] },\r\n    { id: 'successfullyUpdated', labels: [{ culture: 'en_US', label: 'successfully updated' }, { culture: 'es_EC', label: 'actualizado exitosamente' }] },\r\n    { id: 'couldNotSendEmail', labels: [{ culture: 'en_US', label: 'Could not send email' }, { culture: 'es_EC', label: 'No se puedo enviar el correo electrónico' }] },\r\n    { id: 'emailSentSuccessfully', labels: [{ culture: 'en_US', label: 'Email sent successfully' }, { culture: 'es_EC', label: 'Correo electrónico enviado existosamente' }] },\r\n    { id: 'addCountryCourseApplicant', labels: [{ culture: 'en_US', label: 'Add at least one country, one course and one applicant' }, { culture: 'es_EC', label: 'Agregue al menos un país, un curso y un postulante' }] },\r\n    { id: 'publishSuccesfully', labels: [{ culture: 'en_US', label: 'publish succesfully' }, { culture: 'es_EC', label: 'publicado exitosamente' }] },\r\n    { id: 'saveDraft', labels: [{ culture: 'en_US', label: 'Save Draft' }, { culture: 'es_EC', label: 'Guardar borrador' }] },\r\n    { id: 'surePublishTraining', labels: [{ culture: 'en_US', label: 'Are you sure to publish the training?' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas publicar la formación?' }] },\r\n    { id: 'yesPublish', labels: [{ culture: 'en_US', label: 'Yes, publish' }, { culture: 'es_EC', label: 'Sí, publicar' }] },\r\n    { id: 'publish', labels: [{ culture: 'en_US', label: 'Publish' }, { culture: 'es_EC', label: 'Publicar' }] },\r\n    { id: 'idTraining', labels: [{ culture: 'en_US', label: 'Id Training' }, { culture: 'es_EC', label: 'ID de Formación' }] },\r\n    { id: 'completeID', labels: [{ culture: 'en_US', label: 'Complete ID' }, { culture: 'es_EC', label: 'Complete el ID' }] },\r\n    { id: 'region', labels: [{ culture: 'en_US', label: 'Region' }, { culture: 'es_EC', label: 'Región' }] },\r\n    { id: 'selectRegion', labels: [{ culture: 'en_US', label: 'Select region' }, { culture: 'es_EC', label: 'Seleccione la región' }] },\r\n    { id: 'language', labels: [{ culture: 'en_US', label: 'Language' }, { culture: 'es_EC', label: 'Idioma' }] },\r\n    { id: 'selectLanguage', labels: [{ culture: 'en_US', label: 'Select language' }, { culture: 'es_EC', label: 'Seleccione el idioma' }] },\r\n    { id: 'selectCountry', labels: [{ culture: 'en_US', label: 'Select country' }, { culture: 'es_EC', label: 'Seleccione el país' }] },\r\n    { id: 'trainingName', labels: [{ culture: 'en_US', label: 'Training name' }, { culture: 'es_EC', label: 'Nombre de la formación' }] },\r\n    { id: 'completeTrainingName', labels: [{ culture: 'en_US', label: 'Complete training name' }, { culture: 'es_EC', label: 'Complete el nombre la formación' }] },\r\n    { id: 'modality', labels: [{ culture: 'en_US', label: 'Modality' }, { culture: 'es_EC', label: 'Modalidad' }] },\r\n    { id: 'selectModality', labels: [{ culture: 'en_US', label: 'Select modality' }, { culture: 'es_EC', label: 'Seleccione la modalidad' }] },\r\n    { id: 'startDate', labels: [{ culture: 'en_US', label: 'Start Date' }, { culture: 'es_EC', label: 'Fecha de Inicio' }] },\r\n    { id: 'selectStartDate', labels: [{ culture: 'en_US', label: 'Select start date' }, { culture: 'es_EC', label: 'Seleccione la fecha de inicio' }] },\r\n    { id: 'endDate', labels: [{ culture: 'en_US', label: 'End Date' }, { culture: 'es_EC', label: 'Fecha Final' }] },\r\n    { id: 'selectEndDate', labels: [{ culture: 'en_US', label: 'Select end date' }, { culture: 'es_EC', label: 'Seleccione la fecha final' }] },\r\n    { id: 'selectCourses', labels: [{ culture: 'en_US', label: 'Select courses' }, { culture: 'es_EC', label: 'Seleccione los cursos' }] },\r\n    { id: 'applicantsEmails', labels: [{ culture: 'en_US', label: 'Applicants emails' }, { culture: 'es_EC', label: 'Correos electrónicos de los postulantes' }] },\r\n    { id: 'pressEnterAddEmail', labels: [{ culture: 'en_US', label: 'Press enter to add email' }, { culture: 'es_EC', label: 'Presione enter para agregar el correo electrónico' }] },\r\n    { id: 'addApplicants', labels: [{ culture: 'en_US', label: 'Add applicants' }, { culture: 'es_EC', label: 'Agregue al menos un postulante' }] },\r\n    { id: 'notPossibleAddApplicant', labels: [{ culture: 'en_US', label: 'It was not possible to add the applicant' }, { culture: 'es_EC', label: 'No fue posible agregar el postulante' }] },\r\n    { id: 'myAccount', labels: [{ culture: 'en_US', label: 'My Account' }, { culture: 'es_EC', label: 'Mi Cuenta' }] },\r\n    { id: 'signOut', labels: [{ culture: 'en_US', label: 'Sign out' }, { culture: 'es_EC', label: 'Cerrar sesión' }] },\r\n    { id: 'accountUpdatedSuccessfully', labels: [{ culture: 'en_US', label: 'Account updated successfully' }, { culture: 'es_EC', label: 'Cuenta actualizada exitosamente' }] },\r\n    { id: 'uploadFailed', labels: [{ culture: 'en_US', label: 'Upload failed' }, { culture: 'es_EC', label: 'Carga fallida' }] },\r\n    { id: 'uploadProfilePicture', labels: [{ culture: 'en_US', label: 'Upload your profile picture' }, { culture: 'es_EC', label: 'Sube tu foto de perfil' }] },\r\n    { id: 'selectPhoto', labels: [{ culture: 'en_US', label: 'Select a Photo' }, { culture: 'es_EC', label: 'Seleccione una foto' }] },\r\n    { id: 'completeFirstName', labels: [{ culture: 'en_US', label: 'Complete First Name' }, { culture: 'es_EC', label: 'Complete los nombres' }] },\r\n    { id: 'completeLastName', labels: [{ culture: 'en_US', label: 'Complete Last Name' }, { culture: 'es_EC', label: 'Complete los apellidos' }] },\r\n    { id: 'selectSex', labels: [{ culture: 'en_US', label: 'Select sex' }, { culture: 'es_EC', label: 'Selecciona el sexo' }] },\r\n    { id: 'selectDateBirth', labels: [{ culture: 'en_US', label: 'Select date of birth' }, { culture: 'es_EC', label: 'Selecciona la fecha de nacimiento' }] },\r\n    { id: 'uniqueIdentificationCountry', labels: [{ culture: 'en_US', label: 'This is the unique identification number issued by the country of residence' }, { culture: 'es_EC', label: 'Este es el número de identificación único emitido por el país de residencia' }] },\r\n    { id: 'completeCity', labels: [{ culture: 'en_US', label: 'Complete city' }, { culture: 'es_EC', label: 'Complete la ciudad' }] },\r\n    { id: 'selectCountryCode', labels: [{ culture: 'en_US', label: 'Select country code' }, { culture: 'es_EC', label: 'Seleccione el código de país' }] },\r\n    { id: 'completePhoneNumber', labels: [{ culture: 'en_US', label: 'Complete the phone number' }, { culture: 'es_EC', label: 'Complete el número de teléfono' }] },\r\n    { id: 'completeNameInstitution', labels: [{ culture: 'en_US', label: 'Please write the complete name of the institution' }, { culture: 'es_EC', label: 'Por favor escriba el nombre completo de la institución' }] },\r\n    { id: 'ifYesCompleteNameInstitution', labels: [{ culture: 'en_US', label: 'If yes, please write the complete name of the institution' }, { culture: 'es_EC', label: 'En caso afirmativo, escriba el nombre completo de la institución' }] },\r\n    { id: 'completeAdditionalEmail', labels: [{ culture: 'en_US', label: 'Complete the additional email' }, { culture: 'es_EC', label: 'Complete el correo electrónico adicional' }] },\r\n    { id: 'additionalEmailNotValid', labels: [{ culture: 'en_US', label: 'Additional email is not valid' }, { culture: 'es_EC', label: 'El correo electrónico adicional no es válido' }] },\r\n    { id: 'state', labels: [{ culture: 'en_US', label: 'State' }, { culture: 'es_EC', label: 'Estado' }] },\r\n    { id: 'selectState', labels: [{ culture: 'en_US', label: 'Select state' }, { culture: 'es_EC', label: 'Seleccione el estado' }] },\r\n    { id: 'pleaseWait', labels: [{ culture: 'en_US', label: 'Please Wait' }, { culture: 'es_EC', label: 'Espere por favor' }] },\r\n    { id: 'passwordResetSuccessfully', labels: [{ culture: 'en_US', label: 'Password reset successfully' }, { culture: 'es_EC', label: 'Restablecimiento de contraseña exitoso' }] },\r\n    { id: 'completePassword', labels: [{ culture: 'en_US', label: 'Complete the password' }, { culture: 'es_EC', label: 'Complete la contraseña' }] },\r\n    { id: 'password', labels: [{ culture: 'en_US', label: 'Password' }, { culture: 'es_EC', label: 'Contraseña' }] },\r\n    { id: 'newPassword', labels: [{ culture: 'en_US', label: 'New password' }, { culture: 'es_EC', label: 'Nueva contraseña' }] },\r\n    { id: 'confirmNewPassword', labels: [{ culture: 'en_US', label: 'Confirm new password' }, { culture: 'es_EC', label: 'Confirme la nueva contraseña' }] },\r\n    { id: 'completeNewPassword', labels: [{ culture: 'en_US', label: 'Complete then new password' }, { culture: 'es_EC', label: 'Complete la nueva contraseña' }] },\r\n    { id: 'resetting', labels: [{ culture: 'en_US', label: 'Resetting' }, { culture: 'es_EC', label: 'Reestableciendo' }] },\r\n    { id: 'passwordHasMore8Characters', labels: [{ culture: 'en_US', label: 'Password has more than 8 characters' }, { culture: 'es_EC', label: 'La contraseña tiene más de 8 caracteres' }] },\r\n    { id: 'passwordHasSpecialCharacters', labels: [{ culture: 'en_US', label: 'Password has special characters' }, { culture: 'es_EC', label: 'La contraseña tiene caracteres especiales' }] },\r\n    { id: 'passwordHasNumber', labels: [{ culture: 'en_US', label: 'Password has a number' }, { culture: 'es_EC', label: 'La contraseña tiene un número' }] },\r\n    { id: 'passwordHasCapitalLetter', labels: [{ culture: 'en_US', label: 'Password has a capital letter' }, { culture: 'es_EC', label: 'La contraseña tiene una letra mayúscula' }] },\r\n    { id: 'passwordsMatch', labels: [{ culture: 'en_US', label: 'Passwords match' }, { culture: 'es_EC', label: 'Las contraseñas coinciden' }] },\r\n    { id: 'uploadYourWorkplan', labels: [{ culture: 'en_US', label: 'Upload your workplan' }, { culture: 'es_EC', label: 'Sube tu plan de trabajo' }] },\r\n    { id: 'file', labels: [{ culture: 'en_US', label: 'File' }, { culture: 'es_EC', label: 'Archivo' }] },\r\n    { id: 'selectFile', labels: [{ culture: 'en_US', label: 'Select File' }, { culture: 'es_EC', label: 'Seleccionar archivo' }] },\r\n    { id: 'uploading', labels: [{ culture: 'en_US', label: 'Uploading' }, { culture: 'es_EC', label: 'Subiendo' }] },\r\n    { id: 'sending', labels: [{ culture: 'en_US', label: 'Sending' }, { culture: 'es_EC', label: 'Enviando' }] },\r\n    { id: 'send', labels: [{ culture: 'en_US', label: 'Send' }, { culture: 'es_EC', label: 'Enviar' }] },\r\n    { id: 'uploadSuccessfully', labels: [{ culture: 'en_US', label: 'Upload successfully' }, { culture: 'es_EC', label: 'Carga realizada exitosamente' }] },\r\n    { id: 'workplanTemplate', labels: [{ culture: 'en_US', label: 'Workplan Template' }, { culture: 'es_EC', label: 'Plantilla de plan de trabajo' }] },\r\n    { id: 'languagePreferences', labels: [{ culture: 'en_US', label: 'Language preferences' }, { culture: 'es_EC', label: 'Preferencias de idioma' }] },\r\n    { id: 'seePreferredLanguage', labels: [{ culture: 'en_US', label: 'See buttons, titles, and other texts on webapp in your preferred language' }, { culture: 'es_EC', label: 'Vea botones, títulos y otros textos en la aplicación web en su idioma preferido' }] },\r\n    { id: 'back', labels: [{ culture: 'en_US', label: 'Back' }, { culture: 'es_EC', label: 'Regresar' }] },\r\n    { id: 'languagePreferencesSaved', labels: [{ culture: 'en_US', label: 'Language preferences saved successfully' }, { culture: 'es_EC', label: 'Las preferencias de idioma se guardaron correctamente' }] },\r\n    { id: 'ok', labels: [{ culture: 'en_US', label: 'OK' }, { culture: 'es_EC', label: 'OK' }] },\r\n    { id: 'reset', labels: [{ culture: 'en_US', label: 'Reset' }, { culture: 'es_EC', label: 'Limpiar' }] },\r\n    { id: 'save', labels: [{ culture: 'en_US', label: 'Save' }, { culture: 'es_EC', label: 'Guardar' }] },\r\n    { id: 'accept', labels: [{ culture: 'en_US', label: 'Accept' }, { culture: 'es_EC', label: 'Aceptar' }] },\r\n    { id: 'yes', labels: [{ culture: 'en_US', label: 'Yes' }, { culture: 'es_EC', label: 'Si' }] },\r\n    { id: 'no', labels: [{ culture: 'en_US', label: 'No' }, { culture: 'es_EC', label: 'No' }] },\r\n    { id: 'cancel', labels: [{ culture: 'en_US', label: 'Cancel' }, { culture: 'es_EC', label: 'Cancelar' }] },\r\n    { id: 'minimumBeneficiaries', labels: [{ culture: 'en_US', label: 'Minimum Beneficiaries' }, { culture: 'es_EC', label: 'Mínimo de Beneficiarios' }] },\r\n    { id: 'beneficiaryTitle', labels: [{ culture: 'en_US', label: 'Beneficiary' }, { culture: 'es_EC', label: 'Beneficiario' }] },\r\n    { id: 'beneficiariesTitle', labels: [{ culture: 'en_US', label: 'Beneficiaries' }, { culture: 'es_EC', label: 'Beneficiarios' }] },\r\n    { id: 'deleteBeneficiaryTitle', labels: [{ culture: 'en_US', label: 'Delete Beneficiary' }, { culture: 'es_EC', label: 'Eliminar Beneficiario' }] },\r\n    { id: 'reConfirmDeleteBeneficiary', labels: [{ culture: 'en_US', label: 'If you do not meet the minimum number of registered beneficiaries, your final report will be disabled. Continue anyway?' }, { culture: 'es_EC', label: 'Si no cumple con el mínimo de beneficiarios registrados se deshabilitara su informe final. ¿Continuar de todos modos?' }] },\r\n    { id: 'sendBeneficiaryListTitle', labels: [{ culture: 'en_US', label: 'Send Beneciary List' }, { culture: 'es_EC', label: 'Enviar Lista de Beneciarios' }] },\r\n    { id: 'sendBeneficiaryListConfirm', labels: [{ culture: 'en_US', label: 'Check beneficiary qualification/participation. Once sent, further editing will not be allowed and the certificate will be generated. Are you sure you want to send the list of beneficiaries?' }, { culture: 'es_EC', label: 'Verifique la calificación/participación de los beneficiarios. Una vez enviado, no se permitirán más ediciones y se generará el certificado. ¿Estás seguro de que quieres enviar la lista de beneficiarios?' }] },\r\n    { id: 'beneficiarySuccessfullyRemoved', labels: [{ culture: 'en_US', label: 'Beneficiary successfully removed' }, { culture: 'es_EC', label: 'Beneficiario eliminado con éxito' }] },\r\n    { id: 'beneficiarySuccessfullyUpdated', labels: [{ culture: 'en_US', label: 'Beneficiary successfully updated' }, { culture: 'es_EC', label: 'Beneficiario actualizado exitosamente' }] },\r\n    { id: 'certificateSentSuccessfully', labels: [{ culture: 'en_US', label: 'Certificate sent successfully' }, { culture: 'es_EC', label: 'Certificado enviado exitosamente' }] },\r\n    { id: 'certificateSendFailed', labels: [{ culture: 'en_US', label: 'Certificate send failed' }, { culture: 'es_EC', label: 'Error al enviar el certificado' }] },\r\n    { id: 'certificateGeneratedSuccessfully', labels: [{ culture: 'en_US', label: 'Certificate generated successfully' }, { culture: 'es_EC', label: 'Certificado generado exitosamente' }] },\r\n    { id: 'newBeneficiary', labels: [{ culture: 'en_US', label: 'New Beneficiary' }, { culture: 'es_EC', label: 'Nuevo beneficiario' }] },\r\n    { id: 'jobTitle', labels: [{ culture: 'en_US', label: 'Position' }, { culture: 'es_EC', label: 'Cargo' }] },\r\n    { id: 'isWorking', labels: [{ culture: 'en_US', label: 'Is Working' }, { culture: 'es_EC', label: 'Está trabajando' }] },\r\n    { id: 'company', labels: [{ culture: 'en_US', label: 'Enterprise Name' }, { culture: 'es_EC', label: 'Empresa' }] },\r\n    { id: 'instructionLevel', labels: [{ culture: 'en_US', label: 'Instruction Level' }, { culture: 'es_EC', label: 'Nivel de instrucción' }] },\r\n    { id: 'totalPersons', labels: [{ culture: 'en_US', label: 'Nro. of Employees' }, { culture: 'es_EC', label: 'Nro. de Empleados' }] },\r\n    { id: 'actions', labels: [{ culture: 'en_US', label: 'Actions' }, { culture: 'es_EC', label: 'Acciones' }] },\r\n    { id: 'sureDeleteBeneficiary', labels: [{ culture: 'en_US', label: 'Are you sure you want to delete the beneficiary?' }, { culture: 'es_EC', label: '¿Estás seguro de que deseas eliminar al beneficiario?' }] },\r\n    { id: 'registryOperation', labels: [{ culture: 'en_US', label: 'Beneficiary Registry' }, { culture: 'es_EC', label: 'Registro de Beneficiarios' }] },\r\n    { id: 'qualificationOperation', labels: [{ culture: 'en_US', label: 'Beneficiary Qualification' }, { culture: 'es_EC', label: 'Calificación de Beneficiarios' }] },\r\n    { id: 'oneApprovedWorkplanRegisterBeneficiaries', labels: [{ culture: 'en_US', label: 'There must be at least one approved workplan to register beneficiaries' }, { culture: 'es_EC', label: 'Debe haber al menos un plan de trabajo aprobado para registrar beneficiarios' }] },\r\n    { id: 'sendWorkplan', labels: [{ culture: 'en_US', label: 'Send Workplan' }, { culture: 'es_EC', label: 'Enviar plan de trabajo' }] },\r\n    { id: 'oneApprovedFinalReportQualifyBeneficiaries', labels: [{ culture: 'en_US', label: 'There must be at least one approved final report to qualify beneficiaries' }, { culture: 'es_EC', label: 'Debe haber al menos un informe final aprobado para calificar a los beneficiarios' }] },\r\n    { id: 'sendFinalReport', labels: [{ culture: 'en_US', label: 'Send Final Report' }, { culture: 'es_EC', label: 'Enviar informe final' }] },\r\n    { id: 'completeInstructionLevel', labels: [{ culture: 'en_US', label: 'Complete the Instruction Level' }, { culture: 'es_EC', label: 'Completa el nivel de instrucción' }] },\r\n    { id: 'saving', labels: [{ culture: 'en_US', label: 'Saving' }, { culture: 'es_EC', label: 'Guardando' }] },\r\n    { id: 'companyID', labels: [{ culture: 'en_US', label: 'Enterprise ID' }, { culture: 'es_EC', label: 'ID de Empresa' }] },\r\n    { id: 'completeCompanyID', labels: [{ culture: 'en_US', label: 'Complete the Enterprise ID' }, { culture: 'es_EC', label: 'Complete el ID de Empresa' }] },\r\n    { id: 'completeCompany', labels: [{ culture: 'en_US', label: 'Complete the Enterprise Name' }, { culture: 'es_EC', label: 'Complete la Empresa' }] },\r\n    { id: 'completeJobTitle', labels: [{ culture: 'en_US', label: 'Complete the position' }, { culture: 'es_EC', label: 'Complete el cargo' }] },\r\n    { id: 'totalCollaborators', labels: [{ culture: 'en_US', label: 'Nro. of Employees' }, { culture: 'es_EC', label: 'Nro. de Empleados' }] },\r\n    { id: 'completeTotalCollaborators', labels: [{ culture: 'en_US', label: 'Complete Nro. of Employees' }, { culture: 'es_EC', label: 'Completa el Nro. de Empleados' }] },\r\n    { id: 'men', labels: [{ culture: 'en_US', label: 'Men' }, { culture: 'es_EC', label: 'Hombres' }] },\r\n    { id: 'women', labels: [{ culture: 'en_US', label: 'Women' }, { culture: 'es_EC', label: 'Mujeres' }] },\r\n    { id: 'numberMen', labels: [{ culture: 'en_US', label: 'Number of men' }, { culture: 'es_EC', label: 'Número de hombres' }] },\r\n    { id: 'numberWomen', labels: [{ culture: 'en_US', label: 'Number of women' }, { culture: 'es_EC', label: 'Número de mujeres' }] },\r\n    { id: 'uploadFinalReport', labels: [{ culture: 'en_US', label: 'Upload your final report' }, { culture: 'es_EC', label: 'Sube tu informe final' }] },\r\n    { id: 'copyEvidenceLink', labels: [{ culture: 'en_US', label: 'Copy evidence link' }, { culture: 'es_EC', label: 'Copiar enlace de evidencia' }] },\r\n    { id: 'url', labels: [{ culture: 'en_US', label: 'URL' }, { culture: 'es_EC', label: 'URL' }] },\r\n    { id: 'evidenceSendedSuccessfully', labels: [{ culture: 'en_US', label: 'Evidence sended successfully' }, { culture: 'es_EC', label: 'Evidencia enviada exitosamente' }] },\r\n    { id: 'finalReportTemplate', labels: [{ culture: 'en_US', label: 'Final Report Template' }, { culture: 'es_EC', label: 'Plantilla de informe final' }] },\r\n    { id: 'thereMustLeast', labels: [{ culture: 'en_US', label: 'There must be at least' }, { culture: 'es_EC', label: 'Debe haber al menos' }] },\r\n    { id: 'registeredBeneficiariesUploadFinalReport', labels: [{ culture: 'en_US', label: 'registered beneficiaries to upload your final report' }, { culture: 'es_EC', label: 'beneficiarios registrados para cargar su informe final' }] },\r\n    { id: 'registerBeneficiaries', labels: [{ culture: 'en_US', label: 'Register Beneficiaries' }, { culture: 'es_EC', label: 'Registrar beneficiarios' }] },\r\n    { id: 'seeYourCertificateFinalReportBeneficiary', labels: [{ culture: 'en_US', label: 'You will see your certificate once your final report is approved and you submit your beneficiary list' }, { culture: 'es_EC', label: 'Verá su certificado una vez que se apruebe su informe final y envíe su lista de beneficiarios.' }] },\r\n    { id: 'sendListBeneficiaries', labels: [{ culture: 'en_US', label: 'Send list of beneficiaries' }, { culture: 'es_EC', label: 'Enviar lista de beneficiarios' }] },\r\n    { id: 'users', labels: [{ culture: 'en_US', label: 'Users' }, { culture: 'es_EC', label: 'Usuarios' }] },\r\n    { id: 'trainerOfTrainers', labels: [{ culture: 'en_US', label: 'Trainer of trainers' }, { culture: 'es_EC', label: 'Formador de formadores' }] },\r\n    { id: 'trainer', labels: [{ culture: 'en_US', label: 'Trainer' }, { culture: 'es_EC', label: 'Formador' }] },\r\n    { id: 'sessionExpired', labels: [{ culture: 'en_US', label: 'The session has expired. Please log in again.' }, { culture: 'es_EC', label: 'La sesión ha expirado. Por favor inicia sesión nuevamente.' }] },\r\n    { id: 'trainingsNotFound', labels: [{ culture: 'en_US', label: 'Trainings not found' }, { culture: 'es_EC', label: 'Formaciones no encontradas' }] },\r\n    { id: 'backHome', labels: [{ culture: 'en_US', label: 'Back to home' }, { culture: 'es_EC', label: 'Volver al inicio' }] },\r\n    { id: 'notEnrolled', labels: [{ culture: 'en_US', label: 'Not enrolled' }, { culture: 'es_EC', label: 'No enrolado' }] },\r\n    { id: 'usersManagement', labels: [{ culture: 'en_US', label: 'Users Management' }, { culture: 'es_EC', label: 'Gestión de Usuarios' }] },\r\n    { id: 'new', labels: [{ culture: 'en_US', label: 'New' }, { culture: 'es_EC', label: 'Nuevo' }] },\r\n    { id: 'userUpdatedSuccessfully', labels: [{ culture: 'en_US', label: 'User updated successfully' }, { culture: 'es_EC', label: 'Usuario actualizado exitosamente' }] },\r\n    { id: 'user', labels: [{ culture: 'en_US', label: 'User' }, { culture: 'es_EC', label: 'Usuario' }] },\r\n    { id: 'userCreatedSuccessfully', labels: [{ culture: 'en_US', label: 'User created successfully' }, { culture: 'es_EC', label: 'Usuario creado exitosamente' }] },\r\n    { id: 'createYourPassword', labels: [{ culture: 'en_US', label: 'Create password' }, { culture: 'es_EC', label: 'Cree la contraseña' }] },\r\n    { id: 'confirmYourPassword', labels: [{ culture: 'en_US', label: 'Confirm password' }, { culture: 'es_EC', label: 'Confirme la contraseña' }] },\r\n    { id: 'profile', labels: [{ culture: 'en_US', label: 'Profile' }, { culture: 'es_EC', label: 'Perfil' }] },\r\n    { id: 'selectProfile', labels: [{ culture: 'en_US', label: 'Select profile' }, { culture: 'es_EC', label: 'Seleccionar el perfil' }] },\r\n    { id: 'profilesManagement', labels: [{ culture: 'en_US', label: 'Profiles Management' }, { culture: 'es_EC', label: 'Gestión de Perfiles' }] },\r\n    { id: 'level', labels: [{ culture: 'en_US', label: 'Level' }, { culture: 'es_EC', label: 'Nivel' }] },\r\n    { id: 'active', labels: [{ culture: 'en_US', label: 'Active' }, { culture: 'es_EC', label: 'Activo' }] },\r\n    { id: 'inactive', labels: [{ culture: 'en_US', label: 'Inactivo' }, { culture: 'es_EC', label: 'Inactivo' }] },\r\n    { id: 'profileSavedSuccessfully', labels: [{ culture: 'en_US', label: 'Profile saved successfully' }, { culture: 'es_EC', label: 'Perfil guardado exitosamente' }] },\r\n    { id: 'profileDeletedSuccessfully', labels: [{ culture: 'en_US', label: 'Profile deleted successfully' }, { culture: 'es_EC', label: 'Perfil eliminado exitosamente' }] },\r\n    { id: 'sureDeleteProfiles', labels: [{ culture: 'en_US', label: 'Are you sure you want to delete the selected profiles?' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas eliminar los perfiles seleccionados?' }] },\r\n    { id: 'delete', labels: [{ culture: 'en_US', label: 'Delete' }, { culture: 'es_EC', label: 'Eliminar' }] },\r\n    { id: 'deleting', labels: [{ culture: 'en_US', label: 'Deleting' }, { culture: 'es_EC', label: 'Eliminando' }] },\r\n    { id: 'sureDeleteProfile', labels: [{ culture: 'en_US', label: 'Are you sure you want to delete the profile?' }, { culture: 'es_EC', label: '¿Seguro(a) que deseas eliminar el perfil?' }] },\r\n    { id: 'option', labels: [{ culture: 'en_US', label: 'Option' }, { culture: 'es_EC', label: 'Opción' }] },\r\n    { id: 'options', labels: [{ culture: 'en_US', label: 'Options' }, { culture: 'es_EC', label: 'Opciones' }] },\r\n    { id: 'of', labels: [{ culture: 'en_US', label: 'of' }, { culture: 'es_EC', label: 'de' }] },\r\n    { id: 'resultsFound', labels: [{ culture: 'en_US', label: 'results found' }, { culture: 'es_EC', label: 'resultados encontrados' }] },\r\n    { id: 'filtered', labels: [{ culture: 'en_US', label: 'Filtered' }, { culture: 'es_EC', label: 'Filtrados' }] },\r\n    { id: 'sureDownloadUsersReport', labels: [{ culture: 'en_US', label: 'Do you want to download the report of all Users?' }, { culture: 'es_EC', label: '¿Desea descargar el reporte de todos los Usuarios?' }] },\r\n    { id: 'sureDownloadBeneficiariesReport', labels: [{ culture: 'en_US', label: 'Do you want to download the report of all Beneficiaries?' }, { culture: 'es_EC', label: '¿Desea descargar el reporte de todos los Beneficiaros?' }] },\r\n]\r\nexport const getLabel = (id) => contents.filter(c => c.id === id)[0].labels.filter(l => l.culture === getCulture())[0].label || 'Label undefined'\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport { classNames } from \"primereact/utils\";\r\nimport AppMenu from \"./AppMenu\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Row, Col, Typography } from \"antd\";\r\nimport { getDatosUsuario } from \"./utils/Utils\";\r\nimport { getLabel, labels } from \"./utils/Internationalization\";\r\n\r\nconst AppTopbar = (props) => {\r\n  const history = useHistory();\r\n  const searchPanelDesktop = useRef(null);\r\n  const searchPanelMobile = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.searchActive) {\r\n      if (window.innerWidth >= 576) searchPanelDesktop.current.focus();\r\n      else searchPanelMobile.current.focus();\r\n    }\r\n  }, [props.searchActive]);\r\n\r\n  const datosUsuario = (e) => {\r\n    history.push(\"/myaccount\");\r\n  };\r\n\r\n  const goResetPassword = () => history.push(\"/resetPassword\");\r\n\r\n  const goLanguagePreferences = () => history.push('/language');\r\n\r\n  const cerrarSesion = (e) => {\r\n    localStorage.removeItem(\"mgeToken\");\r\n    localStorage.removeItem(\"mgeDatosUsuario\");\r\n    localStorage.removeItem(\"mgeInformList\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const logo = {\r\n    fontSize: \"1.5em\",\r\n    padding: 0,\r\n    margin: 0,\r\n  };\r\n\r\n  return (\r\n    <div className=\"layout-topbar\">\r\n      <div className=\"layout-topbar-wrapper\">\r\n        <div className=\"layout-topbar-left\">\r\n          <button\r\n            tabIndex=\"0\"\r\n            className=\"menu-button p-link\"\r\n            onClick={props.onMenuButtonClick}\r\n          >\r\n            <i className=\"pi pi-bars\"></i>\r\n          </button>\r\n          <div id=\"logo-link\" className=\"layout-topbar-logo\">\r\n            <span className=\"mge mge-bold mge-lightGreen\" style={logo}>\r\n              MG\r\n            </span>\r\n            <span className=\"mge mge-bold mge-green\" style={logo}>\r\n              E\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <AppMenu\r\n          menuMode={props.menuMode}\r\n          sidebarActive={props.sidebarActive}\r\n          sidebarStatic={props.sidebarStatic}\r\n          model={props.menu}\r\n          menuActive={props.menuActive}\r\n          onRootMenuItemClick={props.onRootMenuItemClick}\r\n          onMobileMenuActive={props.onMobileMenuActive}\r\n          onMenuItemClick={props.onMenuItemClick}\r\n          onSidebarMouseOver={props.onSidebarMouseOver}\r\n          onSidebarMouseLeave={props.onSidebarMouseLeave}\r\n          onToggleMenu={props.onToggleMenu}\r\n          resetActiveIndex={props.resetActiveIndex}\r\n          onMenuClick={props.onMenuClick}\r\n        />\r\n\r\n        <div className=\"layout-topbar-right\">\r\n          <ul className=\"layout-topbar-actions\">\r\n            <li\r\n              className={classNames(\"topbar-item user-profile\", {\r\n                \"active-topmenuitem fadeInDown\": props.topbarUserMenuActive,\r\n              })}\r\n            >\r\n              <button\r\n                className=\"p-link\"\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={props.onTopbarUserMenuClick}\r\n              >\r\n                {getDatosUsuario() && (\r\n                  <Row>\r\n                    <Col\r\n                      style={{\r\n                        paddingRight: \"15px\",\r\n                        paddingTop: \"5px\",\r\n                        textAlign: \"right\",\r\n                        lineHeight: \"1em\",\r\n                      }}\r\n                    >\r\n                      <Typography.Text style={{ fontSize: \"1.2em\" }}>\r\n                        {`${getDatosUsuario().nombres || \"\"} ${getDatosUsuario().apellidos || \"\"\r\n                          }`}\r\n                        {getDatosUsuario() && getDatosUsuario().perfiles && (\r\n                          <>\r\n                            <br />\r\n                            <Typography.Text\r\n                              type=\"secondary\"\r\n                              style={{ fontSize: \"0.6em\", lineHeight: \"1em\" }}\r\n                            >\r\n                              {`${getDatosUsuario().perfiles[0].perNombre}`}\r\n                            </Typography.Text>\r\n                          </>\r\n                        )}\r\n                      </Typography.Text>\r\n                    </Col>\r\n                    <Col>\r\n                      <img alt=\"Profile\" src=\"./assets/account.png\" />\r\n                    </Col>\r\n                  </Row>\r\n                )}\r\n              </button>\r\n              <ul className=\"fadeInDown\">\r\n                <li onClick={datosUsuario}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-user-gear\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.myAccount)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n                <li onClick={goResetPassword}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-key\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.resetPassword)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n                <li onClick={goLanguagePreferences}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-language\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.languagePreferences)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n                <li onClick={cerrarSesion}>\r\n                  <Row gutter={[10, 0]}>\r\n                    <Col>\r\n                      <i\r\n                        className=\"fa-solid fa-right-from-bracket\"\r\n                        style={{ fontSize: \"1.5em\" }}\r\n                      ></i>\r\n                    </Col>\r\n                    <Col>\r\n                      <button className=\"p-link\">\r\n                        <span>{getLabel(labels.signOut)}</span>\r\n                      </button>\r\n                    </Col>\r\n                  </Row>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppTopbar;\r\n","import React from \"react\";\r\nconst AppFooter = () => {\r\n  return (\r\n    <div className=\"layout-footer\" style={{ display: \"none\" }}>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"footer-bottom\">\r\n            <h4>\r\n              <div className=\"mge mge-bold\">\r\n                <span className=\"mge-lightGreen\">\r\n                  My\r\n                  <br />\r\n                  Green\r\n                </span>\r\n                <br />\r\n                <span className=\"mge-green\">Enterprise</span>\r\n              </div>\r\n            </h4>\r\n            {/* <h6>Copyright Ⓒ {\r\n              new Date().getFullYear()\r\n            }</h6> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppFooter;\r\n","import React from \"react\";\r\n\r\nconst AppRightPanel = (props) => {\r\n  return <></>;\r\n//   return (\r\n//     <div className=\"layout-rightpanel\" onClick={props.onRightPanelClick}>\r\n//       <div className=\"rightpanel-wrapper\">\r\n//         <div className=\"rightpanel-section weather-section\">\r\n//           <div className=\"section-header\">\r\n//             <h6>Today</h6>\r\n//           </div>\r\n//           <div className=\"weather\">\r\n//             <img\r\n//               src=\"assets/demo/images/rightpanel/icon-sun.svg\"\r\n//               alt=\"freya-layout\"\r\n//             />\r\n//             <div className=\"weather-info\">\r\n//               <h6>Ankara, 22 May</h6>\r\n//               <h1>24º</h1>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n};\r\n\r\nexport default AppRightPanel;\r\n","import axios from 'axios'\r\nimport { getToken } from './Utils'\r\nimport { getCulture, getLabel, labels } from './Internationalization'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst AxiosInstance = (navigate) => {\r\n\r\n    const axiosInstance = axios.create({\r\n        headers: {\r\n            \"Accept-Language\": getCulture()\r\n        }\r\n    })\r\n\r\n    axiosInstance.interceptors.request.use(\r\n        (config) => {\r\n            const token = getToken()\r\n            if (token === undefined || token === null || token === \"\") {\r\n                toast.error(getLabel(labels.sessionExpired))\r\n                navigate.push('/login')\r\n            }\r\n            config.headers['Authorization'] = `Bearer ${token}`\r\n            return config\r\n        },\r\n        (error) => {\r\n            return Promise.reject(error)\r\n        }\r\n    );\r\n\r\n    axiosInstance.interceptors.response.use(\r\n        (response) => {\r\n            if (response.status === 401 || response.status === 403) {\r\n                localStorage.removeItem('mgeToken')\r\n                localStorage.removeItem('mgeDatosUsuario')\r\n                localStorage.removeItem('mgeInformList')\r\n                toast.error(getLabel(labels.sessionExpired))\r\n                navigate.push('/login')\r\n            }\r\n            return response\r\n        },\r\n        (error) => {\r\n            if (error && error.response) {\r\n                const { response } = error\r\n                if (response.status === 401 || response.status === 403) {\r\n                    localStorage.removeItem('mgeToken')\r\n                    localStorage.removeItem('mgeDatosUsuario')\r\n                    localStorage.removeItem('mgeInformList')\r\n                    toast.error(getLabel(labels.sessionExpired))\r\n                    navigate.push('/login')\r\n                }\r\n            }\r\n            return Promise.reject(error)\r\n        }\r\n    )\r\n    return axiosInstance\r\n}\r\n\r\nexport default AxiosInstance","// SOLO PARA DESARROLLO Y PRUEBAS SE DEBE AGREGAR EL SIGUIENTE PROXY EN ARCHIVO package.json\r\n// QA\r\n// \"proxy\": \"http://20.65.110.204:44613\",\r\n// SET NODE_OPTIONS=--openssl-legacy-provider && \r\n// PRODUCCION\r\n// \"proxy\": \"http://20.65.110.204:8080\",\r\n// \"proxy\": \"https://20.65.110.204:8081\",\r\n\r\nconst apiURL = '/uprime-mge-web/uprime/api'\r\n\r\n//SERVICIOS MGE\r\n\r\nexport const getInsertarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/insertCatalog`\r\nexport const getCatalogosFilterUrl = () => `${apiURL}/CatalogServiceRest/getCatalogByFilter`\r\nexport const getActualizarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/updateCatalog`\r\nexport const getEliminarCatalogoUrl = () => `${apiURL}/CatalogServiceRest/deleteCatalog`\r\nexport const getCatalogosPorIdUrl = () => `${apiURL}/CatalogServiceRest/getCatalogById`\r\nexport const getCatalogosPorPadreUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsListByFather`\r\nexport const getCatalogosUrl = () => `${apiURL}/CatalogServiceRest/getCatalogsList`\r\n\r\nexport const getInsertarOpcionUrl = () => `${apiURL}/OptionServiceRest/insertOption`\r\nexport const getEliminarOpcionUrl = () => `${apiURL}/OptionServiceRest/deleteOption`\r\nexport const getActualizarOpcionUrl = () => `${apiURL}/OptionServiceRest/updateOption`\r\nexport const getOpcionesPorPadreUrl = () => `${apiURL}/OptionServiceRest/getOptionsListByFather`\r\nexport const getOpcionesUrl = () => `${apiURL}/OptionServiceRest/getOptionsList`\r\nexport const getOpcionPorIdUrl = () => `${apiURL}/OptionServiceRest/getOptionById`\r\n\r\nexport const getInsertarPerfilUrl = () => `${apiURL}/ProfileServiceRest/insertProfile`\r\nexport const getActualizarPerfilUrl = () => `${apiURL}/ProfileServiceRest/updateProfile`\r\nexport const getEliminarPerfilUrl = () => `${apiURL}/ProfileServiceRest/deleteProfile`\r\nexport const getPerfilesUrl = () => `${apiURL}/ProfileServiceRest/getProfilesList`\r\nexport const getPerfilPorIdUrl = () => `${apiURL}/ProfileServiceRest/getProfileById`\r\n\r\nexport const getOpcionesPorPerfilUrl = () => `${apiURL}/ProfileOptionServiceRest/getOptionsByProfileList`\r\nexport const getInsertarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/insertProfileOption`\r\nexport const getActualizarPerfilOpcionUrl = () => `${apiURL}/PerfilOptionServiceRest/updateProfileOption`\r\nexport const getEliminarPerfilOpcionUrl = () => `${apiURL}/ProfileOptionServiceRest/deleteProfileOption`\r\n\r\nexport const getUsuariosFilterUrl = () => `${apiURL}/UserServiceRest/getUsersListByFilter`\r\nexport const getUsuarioPorIdUrl = () => `${apiURL}/UserServiceRest/getUserById`\r\nexport const getUsersLessPostulants = () => `${apiURL}/UserServiceRest/getUsersLessPostulants`\r\nexport const getUsersListByProfile = () => `${apiURL}/UserServiceRest/getUsersListByProfile`\r\nexport const getAutenticarUrl = () => `${apiURL}/UserServiceRest/authenticateUser`\r\nexport const getAutorizarUrl = () => `${apiURL}/UserServiceRest/authorizeUser`\r\nexport const updatePassword = () => `${apiURL}/UserServiceRest/updatePassword`\r\nexport const resetPassword = () => `${apiURL}/UserServiceRest/resetPassword`\r\nexport const recoveryPassword = () => `${apiURL}/UserServiceRest/recoveryPassword`\r\nexport const validateUserUuid = () => `${apiURL}/UserServiceRest/validateUserUuid`\r\nexport const addProfileUser = () => `${apiURL}/UserServiceRest/addProfileUser`\r\nexport const insertUsuario = () => `${apiURL}/UserServiceRest/insertUser`\r\nexport const getActualizarUsuarioUrl = () => `${apiURL}/UserServiceRest/updateUser`\r\nexport const enrollUsuario = () => `${apiURL}/UserServiceRest/enrollPostulant`\r\nexport const deletePerfilUsuario = () => `${apiURL}/UserServiceRest/deletePerfilUsuario`\r\nexport const getUsuariosUrl = () => `${apiURL}/UserServiceRest/getUsersList`\r\nexport const uploadPhotoUser = () => `${apiURL}/UserServiceRest/uploadPhotoUser`\r\nexport const getTotalUsersByProfile = () => `${apiURL}/UserServiceRest/getTotalUsersByProfile`\r\nexport const downloadUsersReport = () => `${apiURL}/UserServiceRest/downloadUsersReport`\r\n\r\nexport const insertTraining = () => `${apiURL}/TrainingServiceRest/insertTraining`\r\nexport const updateTraining = () => `${apiURL}/TrainingServiceRest/updateTraining`\r\nexport const getTrainingById = () => `${apiURL}/TrainingServiceRest/getTrainingById`\r\nexport const getsTrainingByTrainer = () => `${apiURL}/TrainingServiceRest/getTrainingByTrainer`\r\nexport const getsTrainingList = () => `${apiURL}/TrainingServiceRest/getTrainingList`\r\n\r\nexport const insertPostulant = () => `${apiURL}/PostulantServiceRest/insertPostulant`\r\nexport const sendEmailRegister = () => `${apiURL}/PostulantServiceRest/sendEmailRegistry`\r\nexport const sendEmailEnroll = () => `${apiURL}/PostulantServiceRest/sendEmailEnroll`\r\nexport const getPostulantByTraining = () => `${apiURL}/PostulantServiceRest/getPostulantByTraining`\r\nexport const getTrainingByPostulant = () => `${apiURL}/PostulantServiceRest/getTrainingByPostulant`\r\nexport const deletePostulant = () => `${apiURL}/PostulantServiceRest/deletePostulant`\r\nexport const validatePostulant = () => `${apiURL}/PostulantServiceRest/validatePostulant`\r\n\r\nexport const insertCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/insertCountryTraining`\r\nexport const getCountryTrainingByTraining = () => `${apiURL}/CountryTrainingServiceRest/getCountryTrainingByTraining`\r\nexport const deleteCountryTraining = () => `${apiURL}/CountryTrainingServiceRest/deleteCountryTraining`\r\n\r\nexport const insertCourse = () => `${apiURL}/CourseServiceRest/insertCourse`\r\nexport const getCourseByTraining = () => `${apiURL}/CourseServiceRest/getCoursesByTraining`\r\nexport const deleteCourse = () => `${apiURL}/CourseServiceRest/deleteCourse`\r\n\r\nexport const insertAttendance = () => `${apiURL}/AssistanceServiceRest/insertAssistance`\r\nexport const getAttendanceById = () => `${apiURL}/AssistanceServiceRest/getAssistanceById`\r\nexport const updateAttendance = () => `${apiURL}/AssistanceServiceRest/updateAssistance`\r\n\r\nexport const insertInform = () => `${apiURL}/ReportServiceRest/insertReport`\r\nexport const updateInform = () => `${apiURL}/ReportServiceRest/updateReport`\r\nexport const getInformById = () => `${apiURL}/ReportServiceRest/getReportById`\r\nexport const downloadInformByName = () => `${apiURL}/ReportServiceRest/downloadReportByName`\r\nexport const downloadWorkplan = () => `${apiURL}/ReportServiceRest/downloadWorkPlan`\r\nexport const downloadFinalReport = () => `${apiURL}/ReportServiceRest/downloadFinalReport`\r\nexport const sendEmailLoadInform = () => `${apiURL}/ReportServiceRest/sendEmailLoadReport`\r\nexport const sendEmailRateInform = () => `${apiURL}/ReportServiceRest/sendEmailRateReport`\r\n\r\nexport const insertEvidence = () => `${apiURL}/EvidenceServiceRest/insertEvidence`\r\n\r\nexport const generateCertificate = () => `${apiURL}/CertificateServiceRest/generateCertificate`\r\nexport const sendEmailCertificate = () => `${apiURL}/CertificateServiceRest/sendEmailCertificate`\r\nexport const downloadCertificateByName = () => `${apiURL}/CertificateServiceRest/downloadCertificateByName`\r\nexport const downloadCertificateByUuid = () => `${apiURL}/CertificateServiceRest/downloadCertificateByUuid`\r\n\r\nexport const insertBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/insertBeneficiary`\r\nexport const updateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/updateBeneficiary`\r\nexport const getBeneficiaryById = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiaryById`\r\nexport const getBeneficiariesByPostulant = () => `${apiURL}/BeneficiaryServiceRest/getBeneficiariesByPostulant`\r\nexport const deleteBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/deleteBeneficiary`\r\nexport const validateBeneficiary = () => `${apiURL}/BeneficiaryServiceRest/validateBeneficiary`\r\nexport const downloadBeneficiariesReport = () => `${apiURL}/BeneficiaryServiceRest/downloadBeneficiariesReport`","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { enrollUsuario, getActualizarUsuarioUrl, getUsersLessPostulants, getUsuarioPorIdUrl, getUsuariosFilterUrl, getUsuariosUrl, insertUsuario, resetPassword, uploadPhotoUser, getTotalUsersByProfile, getUsersListByProfile, downloadUsersReport } from \"./../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport default class UsuarioService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsuariosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getUsuariosFilterUrl(), { ...filtros })\r\n    }\r\n    get = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).post(getUsuarioPorIdUrl(), usuario)\r\n    }\r\n    new = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).put(insertUsuario(), usuario)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(getActualizarUsuarioUrl(), usuario)\r\n    }\r\n    put = (props) => {\r\n        const { usuario } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.put(enrollUsuario(), usuario)\r\n    }\r\n    upLoadPhoto = (props) => {\r\n        const { datos } = props\r\n        return axios.put(uploadPhotoUser(), datos, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    getLessPostulants = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getUsersLessPostulants())\r\n    }\r\n    getUsersListByProfile = (props) => {\r\n        const { navigate, profile } = props\r\n        return AxiosInstance(navigate).post(getUsersListByProfile(), profile)\r\n    }\r\n    getTotalUsersByProfile = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getTotalUsersByProfile())\r\n    }\r\n    resetPassword = (props) => {\r\n        const { navigate, usuario } = props\r\n        return AxiosInstance(navigate).patch(resetPassword(), usuario)\r\n    }\r\n    downloadUsersReport = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(downloadUsersReport())\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Button, Checkbox, Form, Input, Select, Space, Typography } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst RestorePassword = ({ user, resetPassword, isReseting, closeResetPassword }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [sendNotification, setSendNotification] = useState(false)\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                <Paragraph>\r\n                    <Text strong>\r\n                        {user.nombres} {user.apellidos}\r\n                    </Text>\r\n                    <Text type='secondary'>\r\n                        <br />{user.email}\r\n                    </Text>\r\n                </Paragraph>\r\n            </Typography>\r\n            <Form\r\n                layout={'vertical'}\r\n                initialValues={\r\n                    { ...user, sendNotification }\r\n                }\r\n                onFinish={resetPassword}\r\n                disabled={isReseting}\r\n            >\r\n                <Form.Item\r\n                    style={{ display: 'none' }}\r\n                    name='usuId'\r\n                    label='Usuario'\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='password'\r\n                    label='Password'\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Complete password'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                </Form.Item>\r\n                <PasswordChecklist\r\n                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\"]}\r\n                    minLength={8}\r\n                    value={password}\r\n                    messages={{\r\n                        minLength: \"Password has more than 8 characters.\",\r\n                        specialChar: \"Password has special characters.\",\r\n                        number: \"Password has a number.\",\r\n                        capital: \"Password has a capital letter.\",\r\n                    }}\r\n                    onChange={(isValid) => { setValidForm(isValid) }}\r\n                    style={{\r\n                        padding: '0 0 20px 0',\r\n                        display: validForm ? 'none' : 'block'\r\n                    }}\r\n                />\r\n                <Form.Item\r\n                    name='sendNotification'\r\n                    valuePropName='checked'\r\n                >\r\n                    <Checkbox defaultChecked={false} onChange={e => setSendNotification(e.target.checked)}>Send notification</Checkbox>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='email'\r\n                    label='Email'\r\n                    rules={[\r\n                        {\r\n                            required: sendNotification,\r\n                            message: 'Select email'\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Select\r\n                        fieldNames={{\r\n                            label: 'value',\r\n                            value: 'id'\r\n                        }}\r\n                        showSearch\r\n                        options={[\r\n                            {\r\n                                id: user.email,\r\n                                value: user.email\r\n                            },\r\n                            {\r\n                                id: user.email2,\r\n                                value: user.email2\r\n                            }\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n                <Space>\r\n                    <Button onClick={closeResetPassword}\r\n                        disabled={isReseting}\r\n                    >Cancel</Button>\r\n                    <Button type=\"primary\"\r\n                        htmlType='submit'\r\n                        disabled={isReseting}\r\n                        loading={isReseting}>\r\n                        {\r\n                            isReseting ? 'Reseting' : 'Reset Password'\r\n                        }\r\n                    </Button>\r\n                </Space>\r\n            </Form >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestorePassword","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Table, Row, Col, Divider, Input, Radio, Form, Space, Tooltip, Drawer } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport RestorePassword from './RestorePassword'\r\nimport md5 from 'md5'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst Usuarios = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [usuarios, setUsuarios] = useState([])\r\n  const [user, setUser] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [documento, setDocumento] = useState(null)\r\n  const [email, setEmail] = useState(null)\r\n  const [nombres, setNombres] = useState(null)\r\n  const [estado, setEstado] = useState(null)\r\n\r\n  const [openResetPassword, setOpenResetPassword] = useState(false)\r\n  const [isReseting, setIsReseting] = useState(false)\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'bottomRight']\r\n    }\r\n  }\r\n\r\n  const columnas = [\r\n    {\r\n      title: '',\r\n      render: (_, r) => (r.imagen && <img alt='' src={`/images/${r.imagen.split('/')[r.imagen.split('/').length - 1]}`} width={32} height={32} />) || <img alt='' src='./assets/user.png' width={32} height={32} />\r\n    },\r\n    {\r\n      title: getLabel(labels.firstName),\r\n      dataIndex: 'nombres',\r\n      render: (_, r) =>\r\n        <Space direction='horizontal'>\r\n          <span>{r.nombres} {r.apellidos}</span>\r\n          <span className=' mgeKey'>\r\n            {\r\n              (\r\n                isReseting && <anticons.LoadingOutlined />\r\n              ) ||\r\n              <Tooltip\r\n                title={getLabel(labels.resetPassword)}\r\n                onClick={\r\n                  () => {\r\n                    setIsReseting(true)\r\n                    setUser(null)\r\n                    setTimeout(() => {\r\n                      setIsReseting(false)\r\n                      setUser(r)\r\n                      setOpenResetPassword(true)\r\n                    }, 250)\r\n                  }\r\n                }\r\n              >\r\n                <i\r\n                  style={{ cursor: 'pointer' }}\r\n                  className=\"fa-solid fa-key\"></i>\r\n              </Tooltip>\r\n            }\r\n          </span>\r\n        </Space>\r\n    },\r\n    {\r\n      title: getLabel(labels.idNumber),\r\n      dataIndex: 'documento',\r\n      responsive: ['md', 'lg', 'xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.email),\r\n      dataIndex: 'email',\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.phoneNumber),\r\n      dataIndex: 'celular',\r\n      render: (_, r) => `${r.codigotel} ${r.celular}`,\r\n      responsive: ['xl', 'xxl']\r\n    },\r\n    {\r\n      title: getLabel(labels.actions),\r\n      render: (_, record) => <Button type='primary' href={`/#/users/${record.usuId}`}>{getLabel(labels.view)}</Button>\r\n    }\r\n  ]\r\n\r\n  const resetPassword = async (values) => {\r\n    setIsReseting(true)\r\n    const usuario = {\r\n      usuId: values.usuId,\r\n      password: md5(values.password),\r\n      ...(values.sendNotification && { email: values.email })\r\n    }\r\n    try {\r\n      const { data } = await usuarioService.resetPassword({ navigate, usuario })\r\n      if (data)\r\n        toast.success(getLabel(labels.passwordResetSuccessfully))\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsReseting(false)\r\n      closeResetPassword()\r\n    }\r\n  }\r\n\r\n  const closeResetPassword = () => {\r\n    setOpenResetPassword(false)\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setError(null)\r\n    setIsLoading(true)\r\n    setUsuarios([])\r\n    try {\r\n      let filtros = {\r\n      }\r\n      if (documento) {\r\n        filtros = { ...filtros, documento }\r\n      }\r\n      if (email) {\r\n        filtros = { ...filtros, email }\r\n      }\r\n      if (nombres) {\r\n        filtros = { ...filtros, nombres }\r\n      }\r\n      if (estado !== null) {\r\n        filtros = { ...filtros, estadoId: estado }\r\n      }\r\n      const { data } = await usuarioService.getsFiltro({ navigate, filtros })\r\n      if (data) {\r\n        const usuarios = data.listObject\r\n        setUsuarios(usuarios)\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) fetchData()\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {getLabel(labels.usersManagement)}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Form\r\n        layout={'vertical'}\r\n      >\r\n        <Row gutter={10}>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.idNumber)}>\r\n              <Input type='text' value={documento} onChange={(e) => setDocumento(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.firstName)}>\r\n              <Input type='text' value={nombres} onChange={(e) => setNombres(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.email)}>\r\n              <Input type='text' value={email} onChange={(e) => setEmail(e.target.value)} />\r\n            </Form.Item>\r\n          </Col>\r\n          <Col xs={24} sm={12} md={12} lg={6} xl={6}>\r\n            <Form.Item label={getLabel(labels.state)}>\r\n              <Radio.Group onChange={(e) => setEstado(e.target.value)} value={estado}>\r\n                {\r\n                  getCatalogos().states.map(s => <Radio key={s.catId} value={s.catId}>{s.catNombre}</Radio>)\r\n                }\r\n              </Radio.Group>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row justify='end'>\r\n          <Col>\r\n            <Form.Item>\r\n              <Space direction='horizontal'>\r\n                <Button type='default' onClick={() => { navigate.push('/usernew') }} loading={isLoading} disabled={isLoading}>{getLabel(labels.new)}</Button>\r\n                <Button type='primary' onClick={() => fetchData()} loading={isLoading} disabled={isLoading}>{getLabel(labels.search)}</Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='usuId'\r\n        columns={columnas}\r\n        dataSource={usuarios}\r\n        loading={isLoading}\r\n        rowClassName='mgeChangePassword'\r\n      />\r\n      <Drawer title={getLabel(labels.resetPassword)} placement=\"right\" onClose={closeResetPassword} open={openResetPassword}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={closeResetPassword}\r\n              disabled={isLoading}\r\n            >{getLabel(labels.cancel)}</Button>\r\n          </Space>\r\n        }\r\n      >\r\n        {\r\n          user && <RestorePassword user={user} resetPassword={resetPassword} isReseting={isReseting} closeResetPassword={closeResetPassword} />\r\n        }\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuarios","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst Usuario = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [error, setError] = useState(null)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const props = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n      }\r\n    } catch (_) {\r\n      toast.error('Upload failed')\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setError(null)\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success(getLabel(labels.userUpdatedSuccessfully))\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    setError(null)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/users'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            {getLabel(labels.user)}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>{getLabel(labels.loading)}...</Typography.Text>\r\n          </div> :\r\n          <>\r\n            {\r\n              usuario &&\r\n              <Form\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={getLabel(labels.uploadProfilePicture)}\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...props}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >{getLabel(labels.selectPhoto)}</Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label={getLabel(labels.idNumber)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeID),\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label={getLabel(labels.firstName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeFirstName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label={getLabel(labels.lastName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeLastName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label={getLabel(labels.sex)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectSex),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label={getLabel(labels.dateBirth)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectDateBirth),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.idNumber)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>{getLabel(labels.uniqueIdentificationCountry)}</>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeID),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label={getLabel(labels.country)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountry),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label=\"City\"\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: 'Complete city',\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.countryCode)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountryCode),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.phoneNumber)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completePhoneNumber),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.currentyWorking)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>{getLabel(labels.completeNameInstitution)}</>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={usuario.trabaja}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: usuario.trabaja,\r\n                          message: getLabel(labels.ifYesCompleteNameInstitution),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input name='lugartrabajo' disabled={!usuario.trabaja} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label={getLabel(labels.email)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.emailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label={getLabel(labels.additionalEmail)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeAdditionalEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.additionalEmailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label={getLabel(labels.state)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectState),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24} style={{ textAlign: 'center' }}>\r\n                    <Form.Item>\r\n                      <Space direction='horizontal'>\r\n                        <Button type='default'\r\n                          disabled={isSaving}\r\n                          onClick={() => {\r\n                            navigate.push('/users')\r\n                          }}\r\n                        >{getLabel(labels.back)}</Button>\r\n                        <Button type='primary' htmlType='submit'\r\n                          loading={isSaving}\r\n                          disabled={isSaving}>{getLabel(labels.save)}</Button>\r\n                      </Space>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            }\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Usuario","import AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getOpcionesUrl, getOpcionesPorPadreUrl, getOpcionPorIdUrl, getInsertarOpcionUrl, getActualizarOpcionUrl, getEliminarOpcionUrl } from \"./../utils/urls\"\r\nexport default class OpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesUrl())\r\n    }\r\n    getsPorPadre = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionesPorPadreUrl(), opcion)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getOpcionPorIdUrl(), opcion)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, opcion } = props\r\n        if (opcion.opcId !== undefined && opcion.opcId !== null && opcion.opcId !== '') {\r\n            return AxiosInstance(navigate).patch(getActualizarOpcionUrl(), opcion)\r\n        } else {\r\n            return AxiosInstance(navigate).put(getInsertarOpcionUrl(), opcion)\r\n        }\r\n    }\r\n    del = (props) => {\r\n        const { navigate, opcion } = props\r\n        return AxiosInstance(navigate).post(getEliminarOpcionUrl(), opcion)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, Tree } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport OpcionService from './../../service/OpcionService'\r\nconst opcionService = new OpcionService()\r\n\r\nconst Opciones = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isLoadingOpcion, setIsLoadingOpcion] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [opciones, setOpciones] = useState([])\r\n  const [opcionesSeleccionados, setOpcionesSeleccionados] = useState([])\r\n  const [opcion, setOpcion] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [opcionAbierto, setOpcionAbierto] = useState(false);\r\n  const [formOpcion] = Form.useForm();\r\n\r\n  const onChangeOpcion = (e) => {\r\n    setOpcion({ ...opcion, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onSelect = (selectedKeys, e) => {\r\n    const opciones = e.selectedNodes\r\n    setOpcionesSeleccionados(opciones)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1).map(o => (\r\n              {\r\n                title: o.opcNombre,\r\n                key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`,\r\n                children: o.opcHijos ? o.opcHijos.map(o => (\r\n                  {\r\n                    title: o.opcNombre,\r\n                    key: `${o.opcId}_${o.opcNombre}_${o.opcNivel}`\r\n                  }\r\n                )) : []\r\n              }))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(getLabel(labels.errorOcurred))\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchOpciones = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoOpcion = () => {\r\n    const nodo = opcionesSeleccionados && opcionesSeleccionados.length > 0 ? { ...opcionesSeleccionados[0] } : {}\r\n    const opcNivel = nodo.key ? parseInt(nodo.key.split('_')[2]) + 1 : 1\r\n    setIsLoadingOpcion(false)\r\n    return (\r\n      {\r\n        opcNivel,\r\n        opcNombre: \"\",\r\n        opcOrden: \"\",\r\n        opcUrl: \"/\",\r\n        opcEstado: true,\r\n      }\r\n    )\r\n  }\r\n\r\n  const abrirOpcion = (c) => {\r\n    setOpcion({\r\n      ...c\r\n    })\r\n    setOpcionAbierto(true);\r\n  }\r\n\r\n  const cerrarOpcion = () => {\r\n    setOpcionAbierto(false);\r\n  };\r\n\r\n  const getOpcion = async () => {\r\n    setIsLoadingOpcion(true)\r\n    const idOpcion = opcionesSeleccionados[0].key.split('_')[0]\r\n    try {\r\n      const { data } = await opcionService.get({ navigate, opcion: { opcId: idOpcion } })\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        setError(null)\r\n        setIsLoadingOpcion(false)\r\n      } else {\r\n        setIsLoadingOpcion(false)\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      setIsLoadingOpcion(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const guardarOpcion = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await opcionService.set({ navigate, opcion })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setOpcion(data.listObject[0])\r\n        message.success('Opción guardada correctamente')\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const eliminarOpciones = (e) => {\r\n    const requests = []\r\n    opcionesSeleccionados.forEach(o => {\r\n      requests.push(opcionService.del({ navigate, opcion: { opcId: o.key.split('_')[0], opcNombre: o.title } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setOpcionesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      }).catch(error => {\r\n        setIsDeleting(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(`No fue posible eliminar la opción: ${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarOpcion = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await opcionService.del({ navigate, opcion })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success('Opción eliminada correctamente')\r\n        cerrarOpcion()\r\n        setIsLoading(true)\r\n      } else {\r\n        message.error('No fue posible eliminar la opción')\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>Regresar al inicio</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              Gestión de Opciones\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirOpcion(getNuevoOpcion())} icon={<anticons.PlusOutlined />}>\r\n                Nuevo\r\n              </Button>\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length === 1 &&\r\n                <Button type='default' onClick={(e) => abrirOpcion(getOpcion())}\r\n                  icon={<anticons.EditFilled />}\r\n                >\r\n                  Editar\r\n                </Button>\r\n              }\r\n              {\r\n                opcionesSeleccionados && opcionesSeleccionados.length > 0 &&\r\n                <Popconfirm title=\"¿Seguro(a) que desea eliminar las opciones seleccionados?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpciones()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isDeleting || isLoading}\r\n                    loading={isDeleting}\r\n                    icon={<anticons.DeleteFilled />}\r\n                  >\r\n                    {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchOpciones} loading={isLoading}\r\n                icon={<anticons.SearchOutlined />}\r\n              >Consultar</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Tree\r\n        checkable={false}\r\n        treeData={opciones}\r\n        onSelect={onSelect}\r\n      />\r\n      <Drawer\r\n        title={<>Opción</>}\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarOpcion}\r\n        open={opcionAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formOpcion}\r\n          initialValues={{}}\r\n        >\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Nombre\">\r\n                <Input id=\"opcNombre\" name=\"opcNombre\" label='Nombre' type='text' value={opcion.opcNombre} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"URL\">\r\n                <Input id=\"opcUrl\" name=\"opcUrl\" label='URL' type='text' value={opcion.opcUrl} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Orden\">\r\n                <Input id=\"opcOrden\" name=\"opcOrden\" label='Orden' type='text' value={opcion.opcOrden} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row gutter={10}>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Icono\">\r\n                <Input id=\"opcIcono\" name=\"opcIcono\" label='Icono' type='text' value={opcion.opcIcono} onChange={onChangeOpcion} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label=\"Estado\">\r\n                <Checkbox id='opcEstado' name='opcEstado' onChange={onChangeOpcion} checked={opcion.opcEstado}>\r\n                  {\r\n                    opcion.opcEstado ? 'Habilitado' : 'Deshabilitado'\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarOpcion(e)}\r\n                    disabled={isLoadingOpcion || isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                    icon={<anticons.SaveFilled />}\r\n                  >\r\n                    {isSaving ? 'Guardando' : 'Guardar'}\r\n                  </Button>\r\n                  {\r\n                    opcion && opcion.opcId &&\r\n                    <Popconfirm title=\"¿Seguro(a) que desea eliminar la opción?\" okText=\"Si, eliminar\" cancelText=\"No\" onConfirm={() => eliminarOpcion()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoadingOpcion || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                        icon={<anticons.DeleteFilled />}\r\n                      >\r\n                        {isDeleting ? 'Eliminando' : 'Eliminar'}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Opciones","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getPerfilesUrl, getActualizarPerfilUrl, getInsertarPerfilUrl, getEliminarPerfilUrl, getPerfilPorIdUrl } from './../utils/urls'\r\nexport default class PerfilService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getPerfilesUrl())\r\n    }\r\n    get = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getPerfilPorIdUrl(), perfil)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(perfil.perId !== undefined && perfil.perId !== null && perfil.perId !== '' ? getActualizarPerfilUrl() : getInsertarPerfilUrl(), perfil)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, perfil } = props\r\n        return AxiosInstance(navigate).post(getEliminarPerfilUrl(), perfil)\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Typography, Button, Result, Space, Table, Row, Col, Divider, Drawer, Form, message, Input, Popconfirm, Checkbox, InputNumber } from 'antd'\r\nimport PerfilService from '../../service/PerfilService'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst perfilService = new PerfilService()\r\n\r\nconst Perfiles = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false)\r\n  const [perfiles, setPerfiles] = useState([])\r\n  const [perfilesSeleccionados, setPerfilesSeleccionados] = useState([])\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [perfilAbierto, setPerfilAbierto] = useState(false);\r\n  const [formPerfil] = Form.useForm();\r\n\r\n  const tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    rowSelection: {},\r\n    size: 'medium',\r\n    pagination: {\r\n      position: ['none', 'none']\r\n    }\r\n  };\r\n\r\n  const columnas = [\r\n    {\r\n      title: getLabel(labels.name),\r\n      dataIndex: 'unique',\r\n      render: (e) => <Link to={`/perfil/${e.key}/${e.label}`}>{e.label}</Link>\r\n    },\r\n    {\r\n      title: getLabel(labels.level),\r\n      dataIndex: 'perNivel',\r\n      responsive: ['xl']\r\n    },\r\n    {\r\n      title: getLabel(labels.state),\r\n      dataIndex: 'perEstado',\r\n      render: (e) => <> {e ? getLabel(labels.active) : getLabel(labels.inactive)} </>\r\n    }\r\n  ]\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setPerfilesSeleccionados(selectedRows)\r\n    },\r\n    getCheckboxProps: (record) => ({\r\n      disabled: record.name === 'Disabled User',\r\n      name: record.name,\r\n    }),\r\n  };\r\n\r\n  const onChangePerfil = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isLoading) {\r\n      const fetchData = async () => {\r\n        try {\r\n          const { data } = await perfilService.gets({ navigate })\r\n          if (data) {\r\n            const _perfiles = data.listObject.map(c => ({ ...c, unique: { key: c.perId, label: c.perNombre } }))\r\n            setPerfiles(_perfiles)\r\n            setError(null)\r\n            setIsLoading(false)\r\n          } else {\r\n            setIsLoading(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n          }\r\n        } catch (error) {\r\n          setIsLoading(false)\r\n          setError(getLabel(labels.errorOcurred))\r\n        }\r\n      }\r\n      fetchData()\r\n    }\r\n  }, [isLoading, navigate])\r\n\r\n  const fetchPerfiles = () => {\r\n    setIsLoading(true)\r\n  }\r\n\r\n  const getNuevoPerfil = () => ({\r\n    perEstado: true,\r\n    perNivel: \"\",\r\n    perNombre: \"\"\r\n  })\r\n\r\n  const abrirPerfil = (c) => {\r\n    setPerfil({\r\n      ...c\r\n    })\r\n    setPerfilAbierto(true);\r\n  }\r\n\r\n  const cerrarPerfil = () => {\r\n    setPerfilAbierto(false);\r\n  };\r\n\r\n  const guardarPerfil = async () => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        message.success(getLabel(labels.profileSavedSuccessfully))\r\n        setIsLoading(true)\r\n      }\r\n    } catch (error) {\r\n      setIsSaving(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const eliminarPerfiles = (e) => {\r\n    const requests = []\r\n    perfilesSeleccionados.forEach(c => {\r\n      requests.push(perfilService.del({ navigate, perfil: { ...c } }))\r\n    })\r\n    setIsDeleting(true)\r\n    Promise.all(requests)\r\n      .then((results) => {\r\n        setPerfilesSeleccionados([])\r\n        setIsDeleting(false)\r\n        setIsLoading(true)\r\n      })\r\n      .catch(error => {\r\n        setIsSaving(false)\r\n        const { response } = error\r\n        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n        message.error(getLabel(labels.errorOcurred), `${msgError}`)\r\n      })\r\n  }\r\n\r\n  const eliminarPerfil = async () => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        setIsLoading(true)\r\n        message.success(getLabel(labels.profileDeletedSuccessfully))\r\n        cerrarPerfil()\r\n      } else {\r\n        message.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[10, 10]}>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='start'>\r\n            <Typography.Title\r\n              level={4}\r\n              style={{\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {getLabel(labels.profilesManagement)}\r\n            </Typography.Title>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={12} lg={12} xl={12}>\r\n          <Row justify='end'>\r\n            <Space>\r\n              <Button type='default' onClick={(e) => abrirPerfil(getNuevoPerfil())}>\r\n                {getLabel(labels.new)}\r\n              </Button>\r\n              {\r\n                perfilesSeleccionados && perfilesSeleccionados.length > 0 &&\r\n                <Popconfirm title={getLabel(labels.sureDeleteProfiles)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.no)} onConfirm={() => eliminarPerfiles()}\r\n                  okButtonProps={{\r\n                    loading: isDeleting,\r\n                  }}\r\n                >\r\n                  <Button type=\"danger\"\r\n                    disabled={isLoading || isDeleting}\r\n                    loading={isDeleting}\r\n                  >\r\n                    {isDeleting ? getLabel(labels.deleting) : getLabel(labels.delete)}\r\n                  </Button>\r\n                </Popconfirm>\r\n              }\r\n              <Button type=\"primary\" onClick={fetchPerfiles} loading={isLoading}>{getLabel(labels.refresh)}</Button>\r\n            </Space>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      <Table\r\n        {...tableProps}\r\n        rowKey='perId'\r\n        rowSelection={{\r\n          type: 'checkbox',\r\n          ...rowSelection,\r\n        }}\r\n        columns={columnas}\r\n        dataSource={perfiles}\r\n        loading={isLoading}\r\n      />\r\n\r\n      <Drawer\r\n        title=\"Profile\"\r\n        placement=\"right\"\r\n        closable={true}\r\n        onClose={cerrarPerfil}\r\n        open={perfilAbierto}\r\n      >\r\n        <Form\r\n          layout={'vertical'}\r\n          form={formPerfil}\r\n          initialValues={{\r\n            layout: 'vertical',\r\n          }}\r\n        >\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label={getLabel(labels.name)}>\r\n                <Input id=\"perNombre\" name=\"perNombre\" type='text' value={perfil.perNombre} onChange={onChangePerfil} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label={getLabel(labels.level)}>\r\n                <InputNumber id=\"perNivel\" name=\"perNivel\" min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n              <Form.Item label={getLabel(labels.state)}>\r\n                <Checkbox id='perEstado' name='State' onChange={onChangePerfil} checked={perfil.perEstado}>\r\n                  {\r\n                    perfil.perEstado ? getLabel(labels.active) : getLabel(labels.inactive)\r\n                  }\r\n                </Checkbox>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Form.Item>\r\n                <Space>\r\n                  <Button type=\"primary\" onClick={(e) => guardarPerfil(e)}\r\n                    disabled={isSaving || isDeleting}\r\n                    loading={isSaving}\r\n                  >\r\n                    {isSaving ? getLabel(labels.saving) : getLabel(labels.save)}\r\n                  </Button>\r\n                  {\r\n                    perfil && perfil.perId &&\r\n                    <Popconfirm title={getLabel(labels.sureDeletProfile)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.no)} onConfirm={() => eliminarPerfil()}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isLoading || isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? getLabel(labels.deleting) : getLabel(labels.delete)}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  }\r\n                </Space>\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfiles","import AxiosInstance from './../utils/AxiosInstance'\r\nimport { getOpcionesPorPerfilUrl, getActualizarPerfilOpcionUrl } from './../utils/urls'\r\nexport default class PerfilOpcionService {\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getOpcionesPorPerfilUrl())\r\n    }\r\n    set = (props) => {\r\n        const { navigate, perfilOpcion } = props\r\n        return AxiosInstance(navigate).post(getActualizarPerfilOpcionUrl(), perfilOpcion)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Checkbox, Spin, Typography, Divider, message, Popconfirm, Space, InputNumber, Table, Switch } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport PerfilService from '../../service/PerfilService'\r\nimport OpcionService from '../../service/OpcionService'\r\nimport PerfilOpcionService from '../../service/PerfilOpcionService'\r\n\r\nconst perfilService = new PerfilService()\r\nconst opcionService = new OpcionService()\r\nconst perfilOpcionService = new PerfilOpcionService()\r\n\r\nconst Perfil = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isLoadingOpciones, setIsLoadingOpciones] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [isDeleting, setIsDeleting] = useState(false);\r\n  const [perfil, setPerfil] = useState({})\r\n  const [error, setError] = useState(null)\r\n  const [form] = Form.useForm();\r\n\r\n  const [opciones, setOpciones] = useState([])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Option',\r\n      dataIndex: 'opcNombre',\r\n      key: 'idOpcion',\r\n    },\r\n    {\r\n      title: 'Read',\r\n      dataIndex: 'opcLectura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcLectura')} defaultChecked={record.opcLectura} />\r\n      )\r\n    }\r\n    ,\r\n    {\r\n      title: 'Write',\r\n      dataIndex: 'opcEscritura',\r\n      render: (text, record, index) => (\r\n        <Switch onChange={() => onChangePerfil(text, record, 'opcEscritura')} defaultChecked={record.opcEscritura} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  const onChangePerfil = async (text, record, operacion) => {\r\n    if (operacion === 'opcLectura') {\r\n      record.opcLectura = !record.opcLectura\r\n    } else if (operacion === 'opcEscritura') {\r\n      record.opcEscritura = !record.opcEscritura\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.set({ navigate, perfilOpcion: record })\r\n      setIsSaving(false)\r\n      const perfilOpcionActualizado = data.listObject[0]\r\n      message.success(`${getLabel(labels.option)} ${perfilOpcionActualizado.pfoOpcId.opcNombre} ${getLabel(labels.successfullyUpdated)}`)\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    setPerfil({ ...perfil, [e.target.name]: e.target.type === 'checkbox' ? e.target.checked : e.target.value })\r\n  }\r\n\r\n  const onChangePerfilNivel = (e) => {\r\n    setPerfil({ ...perfil, perNivel: e })\r\n  }\r\n\r\n  const getPerfil = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await perfilService.get({ navigate, perfil: { perId: id } })\r\n      if (data) {\r\n        setPerfil(data.listObject[0])\r\n        setError(null)\r\n        getOpcionesPerfil()\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const getOpcionesPerfil = async () => {\r\n    setIsLoadingOpciones(true)\r\n    try {\r\n      const { data } = await perfilOpcionService.gets({ navigate })\r\n      if (data) {\r\n        var _opcionesPerfil = data.listObject[0].filter(o => o.idPerfil === parseInt(id))\r\n        setError(null)\r\n\r\n        try {\r\n          const { data } = await opcionService.gets({ navigate })\r\n          if (data) {\r\n            const _opciones = data.listObject.filter(o => o.opcNivel === 1)\r\n              .map(o => (\r\n                {\r\n                  key: `${o.opcId}`,\r\n                  opcNombre: o.opcNombre,\r\n                  ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n                }\r\n              ))\r\n            // .map(o => (\r\n            //   {\r\n            //     key: `${o.opcId}`,\r\n            //     opcNombre: o.opcNombre,\r\n            //     ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0],\r\n            //     children: o.opcHijos.map(o => ({\r\n            //       key: `${o.opcId}`,\r\n            //       opcNombre: o.opcNombre,\r\n            //       ..._opcionesPerfil.filter(op => op.idOpcion === o.opcId)[0]\r\n            //     }))\r\n            //   }\r\n            // ))\r\n            setOpciones(_opciones)\r\n            setError(null)\r\n            setIsLoadingOpciones(false)\r\n          } else {\r\n            setIsLoadingOpciones(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n          }\r\n        } catch (error) {\r\n          setIsLoadingOpciones(false)\r\n          setError(getLabel(labels.errorOcurred))\r\n        }\r\n\r\n      } else {\r\n        setError(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoadingOpciones(false)\r\n    }\r\n  }\r\n\r\n  const guardar = async (e) => {\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await perfilService.set({ navigate, perfil })\r\n      setIsSaving(false)\r\n      const perfilActualizado = data.listObject[0]\r\n      setPerfil(perfilActualizado)\r\n      message.success(getLabel(labels.profileSavedSuccessfully))\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      setError(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const eliminar = async (e) => {\r\n    setIsDeleting(true)\r\n    try {\r\n      const { data } = await perfilService.del({ navigate, perfil })\r\n      setIsDeleting(false)\r\n      if (data === true) {\r\n        message.success(getLabel(labels.profileDeletedSuccessfully))\r\n        navigate.push('/perfiles')\r\n      } else {\r\n        message.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      setIsDeleting(false)\r\n      const { response } = error\r\n      setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      getPerfil()\r\n    }\r\n  })\r\n\r\n  if (error) {\r\n    return (\r\n      <Result\r\n        status=\"warning\"\r\n        title={''}\r\n        subTitle={''}\r\n        extra={\r\n          <>\r\n            <h5>{error}</h5>\r\n            <Link to={'/perfiles'}>{getLabel(labels.backHome)}</Link>\r\n          </>\r\n        }\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row align='middle' gutter={10}>\r\n        <Col>\r\n          <Link to={'/perfiles'}><anticons.ArrowLeftOutlined /></Link>\r\n        </Col>\r\n        <Col>\r\n          <Typography.Title\r\n            level={4}\r\n            style={{\r\n              margin: 0,\r\n            }}\r\n          >\r\n            {getLabel(labels.profile)} {perfil && perfil.perNombre}\r\n          </Typography.Title>\r\n        </Col>\r\n      </Row>\r\n      <Divider></Divider>\r\n      {\r\n        isLoading ?\r\n          <div className=\"p-10 text-center\">\r\n            <Spin size=\"large\" /><br />\r\n            <Typography.Text>{getLabel(labels.loading)}...</Typography.Text>\r\n          </div> :\r\n          <Form\r\n            layout={'vertical'}\r\n            form={form}\r\n            initialValues={{\r\n              layout: 'vertical',\r\n            }}\r\n          >\r\n            <Row gutter={10}>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label={getLabel(labels.name)}>\r\n                  <Input id=\"perNombre\" name=\"perNombre\" type='text' value={perfil.perNombre} onChange={onChange} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label={getLabel(labels.level)}>\r\n                  <InputNumber id=\"perNivel\" name=\"perNivel\" min={1} max={50} value={perfil.perNivel} onChange={onChangePerfilNivel} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                <Form.Item label={getLabel(labels.state)}>\r\n                  <Checkbox id='perEstado' name='perEstado' onChange={onChange} checked={perfil.perEstado}>\r\n                    {\r\n                      perfil.perEstado ? getLabel(labels.active) : getLabel(labels.inactive)\r\n                    }\r\n                  </Checkbox>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Divider>{getLabel(labels.options)}</Divider>\r\n            <Row>\r\n              <Col>\r\n                <Table\r\n                  columns={columns}\r\n                  dataSource={opciones}\r\n                  loading={isLoadingOpciones || isSaving}\r\n                />\r\n              </Col>\r\n            </Row>\r\n            <Row justify='end'>\r\n              <Col>\r\n                <Form.Item>\r\n                  <Space>\r\n\r\n                    <Button type=\"primary\" onClick={(e) => guardar(e)}\r\n                      disabled={isSaving || isDeleting}\r\n                      loading={isSaving}\r\n                    >\r\n                      {isSaving ? getLabel(labels.saving) : getLabel(labels.save)}\r\n                    </Button>\r\n                    <Popconfirm title={getLabel(labels.sureDeleteProfile)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.no)} onConfirm={(e) => eliminar(e)}\r\n                      okButtonProps={{\r\n                        loading: isDeleting,\r\n                      }}\r\n                    >\r\n                      <Button type=\"danger\"\r\n                        disabled={isDeleting || isSaving}\r\n                        loading={isDeleting}\r\n                      >\r\n                        {isDeleting ? getLabel(labels.deleting) : getLabel(labels.delete)}\r\n                      </Button>\r\n                    </Popconfirm>\r\n                  </Space>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Perfil","import React from 'react'\r\nimport { Row, Col, Space, Alert, Spin, Typography } from 'antd'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AlertWait = (props) => {\r\n    const { error, isLoading, message } = props\r\n    return (\r\n        <Row justify='center'>\r\n            <Col>\r\n                <Space direction='vertical'\r\n                    style={{\r\n                        display: 'flex',\r\n                    }}\r\n                    size='large'\r\n                >\r\n                    {\r\n                        error &&\r\n                        <Alert message={error} type='warning' showIcon />\r\n                    }\r\n                    {\r\n                        isLoading &&\r\n                        <Row justify='center'>\r\n                            <Col style={{ textAlign: 'center' }}>\r\n                                <Spin size='large'></Spin>\r\n                                {\r\n                                    message && <Typography.Paragraph>\r\n                                        {message}\r\n                                    </Typography.Paragraph>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    }\r\n                </Space>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nAlertWait.propTypes = {\r\n    error: PropTypes.any,\r\n    message: PropTypes.any,\r\n    isLoading: PropTypes.bool.isRequired\r\n}\r\n\r\nexport default AlertWait","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Card, Statistic, Table, Form, Spin, Tooltip, Tag, Popconfirm } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\n\r\nconst estilos = [\r\n    { background: '#54873C' },\r\n    { background: '#70B450' },\r\n    { background: '#385A28' },\r\n    { background: '#636466' },\r\n    { background: '#70B450' },\r\n    { background: '#54873C' },\r\n    { background: '#385A28' },\r\n]\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst Dashboard = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadTotals, setLoadTotals] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [users, setUsers] = useState([])\r\n    const [isLoadingTotals, setIsLoadingTotals] = useState(false)\r\n    const [totals, setTotals] = useState(null)\r\n    const [nombres, setNombres] = useState([])\r\n    const [apellidos, setApellidos] = useState([])\r\n    const [paises, setPaises] = useState([])\r\n    const [estados, setEstados] = useState([])\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [selectedProfiles, setSelectedProfiles] = useState([])\r\n    const [currentDataSource, setCurrentDataSource] = useState(null)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const columnas = [\r\n        {\r\n            title: '',\r\n            render: (_, r) => (r.imagen && <img alt='' src={`/images/${r.imagen.split('/')[r.imagen.split('/').length - 1]}`} width={32} height={32} />) || <img alt='' src='./assets/user.png' width={32} height={32} />\r\n        },\r\n        {\r\n            title: getLabel(labels.firstName),\r\n            dataIndex: 'nombres',\r\n            filters: nombres.map(n => ({\r\n                value: n,\r\n                text: n\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { nombres }) => nombres === value,\r\n            render: (_, r) => `${r.nombres}`\r\n        },\r\n        {\r\n            title: getLabel(labels.lastName),\r\n            dataIndex: 'apellidos',\r\n            filters: apellidos.map(a => ({\r\n                value: a,\r\n                text: a\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { apellidos }) => apellidos === value,\r\n            render: (_, r) => `${r.apellidos}`\r\n        },\r\n        {\r\n            title: getLabel(labels.country),\r\n            dataIndex: 'pais',\r\n            filters: paises.map(p => ({\r\n                value: p.catId,\r\n                text: <><img\r\n                    src={`https://flagcdn.com/32x24/${p.catDescripcion.toLowerCase()}.png`}\r\n                    srcSet={`https://flagcdn.com/32x24/${p.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${p.catDescripcion.toLowerCase()}.png 3x`}\r\n                    width=\"32\"\r\n                    height=\"24\"\r\n                    alt={p.catDescripcion} />&nbsp;{p.catNombre}</>\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { pais }) => pais.catId === value,\r\n            render: (_, { pais }) => <div style={{ textAlign: 'center' }}>\r\n                <Tooltip title={pais.catDescripcion}>\r\n                    <img\r\n                        src={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png`}\r\n                        srcSet={`https://flagcdn.com/32x24/${pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                        width=\"32\"\r\n                        height=\"24\"\r\n                        alt={pais.catDescripcion}></img>\r\n                </Tooltip>\r\n            </div>,\r\n            responsive: ['md', 'lg', 'xl', 'xxl']\r\n        },\r\n        {\r\n            title: <div style={{ textAlign: 'center' }}>\r\n                {getLabel(labels.state)}\r\n            </div>,\r\n            dataIndex: 'estado',\r\n            filters: estados.map(p => ({\r\n                value: p.catId,\r\n                text: p.catNombre\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { estado }) => estado.catId === value,\r\n            render: (_, { estado }) => <div style={{ textAlign: 'center' }\r\n            }>\r\n                {estado.catNombre}\r\n            </div >,\r\n            responsive: ['md', 'lg', 'xl', 'xxl']\r\n        },\r\n        {\r\n            title: <div style={{ textAlign: 'center' }}>\r\n                {getLabel(labels.profile)}\r\n            </div>,\r\n            dataIndex: 'role',\r\n            filters: perfiles.map(p => ({\r\n                value: p.perId,\r\n                text: p.perNombre\r\n            })),\r\n            filterMode: 'tree',\r\n            onFilter: (value, { perfiles }) => perfiles[0].perId === value,\r\n            render: (_, { perfiles }) => <div style={{ textAlign: 'center' }\r\n            }>\r\n                {perfiles[0].perNombre}\r\n            </div >,\r\n            responsive: ['md', 'lg', 'xl', 'xxl']\r\n        },\r\n        {\r\n            title: getLabel(labels.actions),\r\n            render: (_, record) => <Button type='primary' href={`/#/user/${record.usuId}`}>\r\n                {getLabel(labels.view)}\r\n            </Button>\r\n        }\r\n    ]\r\n\r\n    const setProfile = (profile) => {\r\n        let profiles = []\r\n        if (selectedProfiles.filter(p => p.perId === profile.perId).length < 1)\r\n            profiles = [...selectedProfiles, profile]\r\n        else\r\n            profiles = selectedProfiles.filter(p => p.perId !== profile.perId)\r\n        setSelectedProfiles(profiles)\r\n        const requests = []\r\n        profiles.forEach(profile => {\r\n            requests.push(usuarioService.getUsersListByProfile({ navigate, profile }))\r\n        })\r\n        if (requests.length > 0) {\r\n            setIsLoading(true)\r\n            setCurrentDataSource(null)\r\n            setUsers([])\r\n            setPerfiles([])\r\n            Promise.all(requests)\r\n                .then((results) => {\r\n                    setIsLoading(false)\r\n                    if (results.length > 0) {\r\n                        let n = []\r\n                        let a = []\r\n                        let c = []\r\n                        let s = []\r\n                        let p = []\r\n                        let u = []\r\n                        results.forEach(r => {\r\n                            const { config } = r\r\n                            const profile = JSON.parse(config.data)\r\n                            const perfiles = [profile]\r\n                            const usuarios = r.data.listObject.map(u => ({ ...u, perfiles }))\r\n                            usuarios.forEach(u => {\r\n                                if (n.filter(p => p === u.nombres).length < 1)\r\n                                    n = [...n, u.nombres]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (a.filter(p => p === u.apellidos).length < 1)\r\n                                    a = [...a, u.apellidos]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (c.filter(p => p.catId === u.pais.catId).length < 1)\r\n                                    c = [...c, u.pais]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (s.filter(s => s.catId === u.estado.catId).length < 1)\r\n                                    s = [...s, u.estado]\r\n                            })\r\n                            usuarios.forEach(u => {\r\n                                if (p.filter(p => p.perId === u.perfiles[0].perId).length < 1)\r\n                                    p = [...p, u.perfiles[0]]\r\n                            })\r\n                            usuarios.forEach(usuario => {\r\n                                if (u.filter(u => u.usuId === usuario.usuId).length < 1)\r\n                                    u = [...u, usuario]\r\n                            })\r\n                        })\r\n                        setNombres(n)\r\n                        setApellidos(a)\r\n                        setPaises(c)\r\n                        setEstados(s)\r\n                        setPerfiles(p)\r\n                        setUsers(u)\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    const { response } = error\r\n                    const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                    toast.error(msgError)\r\n                })\r\n                .finally(() => {\r\n                    setIsLoading(false)\r\n                })\r\n        } else {\r\n            fetchData()\r\n        }\r\n    }\r\n\r\n    const renderTotal = ({ id, name, total, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={8} md={8} lg={8} xl={8} xxl={8}\r\n        >\r\n            <Card\r\n                {...props}\r\n                onClick={\r\n                    () => setProfile({ perId: id, perNombre: name, total })\r\n                }\r\n            >\r\n                <Statistic\r\n                    {...data}\r\n                    valueStyle={{\r\n                        color: '#ffffff',\r\n                    }}\r\n                />\r\n                {description}\r\n            </Card>\r\n        </Col>\r\n\r\n    const downloadReport = ({ id, name }) => {\r\n        const fileName = `${name}.xlsx`\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: id === 0 ? apiURLs.downloadBeneficiariesReport() : apiURLs.downloadUsersReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const renderTotalExportar = ({ id, name, props, data, description }) =>\r\n        <Col\r\n            key={id}\r\n            xs={12} sm={8} md={8} lg={8} xl={8} xxl={8}\r\n        >\r\n            <Popconfirm\r\n                title={id === 0 ? getLabel(labels.sureDownloadBeneficiariesReport) : getLabel(labels.sureDownloadUsersReport)}\r\n                okText={getLabel(labels.yes)}\r\n                cancelText={getLabel(labels.no)}\r\n                onConfirm={\r\n                    () =>\r\n                        downloadReport({ id, name })\r\n                }\r\n                okButtonProps={{\r\n                    loading: isDownloading\r\n                }}\r\n            >\r\n                <Card\r\n                    {...props}\r\n                >\r\n                    <Statistic\r\n                        {...data}\r\n                        valueStyle={{\r\n                            color: '#ffffff',\r\n                        }}\r\n                    />\r\n                    {description}\r\n                </Card>\r\n            </Popconfirm>\r\n        </Col>\r\n\r\n    const fetchDataTotals = async () => {\r\n        setLoadTotals(false)\r\n        setIsLoadingTotals(true)\r\n        try {\r\n            const { data } = await usuarioService.getTotalUsersByProfile({ navigate })\r\n            if (data) {\r\n                const totalesCompleto = data.listObject\r\n                const totales = totalesCompleto.filter(t => t.perNombre.indexOf('ADMIN') < 0 && t.perNombre.indexOf('BENEFI') < 0)\r\n                let profiles = []\r\n                totales.forEach(t => {\r\n                    if (profiles.filter(p => p.perId === t.perId).length < 1) {\r\n                        const initialValue = 0;\r\n                        const initialValueActives = 0;\r\n                        profiles = [...profiles,\r\n                        {\r\n                            perId: t.perId,\r\n                            perNombre: t.perNombre,\r\n                            total: totalesCompleto.filter(a => a.perId === t.perId).reduce(\r\n                                (accumulator, currentValue) => accumulator + currentValue.total,\r\n                                initialValue,\r\n                            ),\r\n                            activos: totalesCompleto.filter(a => a.perId === t.perId && a.estado === getCatalogos().states.filter(s => s.catValor === 'ACTIVO' || s.catValor === 'ACTIVE')[0].catId).reduce(\r\n                                (accumulator, currentValue) => accumulator + currentValue.total,\r\n                                initialValueActives,\r\n                            ) || 0\r\n                        }\r\n                        ]\r\n                    }\r\n                })\r\n                const initialValue = 0;\r\n                setTotals(\r\n                    [...profiles,\r\n                    totalesCompleto.filter(t => t.perNombre.indexOf('BENEFI') >= 0)[0],\r\n                    {\r\n                        \"perId\": 999,\r\n                        \"perNombre\": getLabel(labels.users).toUpperCase(),\r\n                        \"total\": totalesCompleto.filter(t => t.perNombre.indexOf('BENEFI') < 0).reduce(\r\n                            (accumulator, currentValue) => accumulator + currentValue.total,\r\n                            initialValue,\r\n                        ) || 0 || 0\r\n                    }]\r\n                )\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingTotals(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setSelectedProfiles([])\r\n        setCurrentDataSource(null)\r\n        setPerfiles([])\r\n        setUsers([])\r\n        try {\r\n            const { data } = await usuarioService.getLessPostulants({ navigate })\r\n            if (data) {\r\n                const usuarios = data.listObject\r\n                let n = []\r\n                let a = []\r\n                let c = []\r\n                let s = []\r\n                let p = []\r\n                usuarios.forEach(u => {\r\n                    if (n.filter(p => p.nombres === u.nombres).length < 1)\r\n                        n = [...n, u.nombres]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (a.filter(p => p.apellidos === u.apellidos).length < 1)\r\n                        a = [...a, u.apellidos]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (c.filter(p => p.catId === u.pais.catId).length < 1)\r\n                        c = [...c, u.pais]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (s.filter(s => s.catId === u.estado.catId).length < 1)\r\n                        s = [...s, u.estado]\r\n                })\r\n                usuarios.forEach(u => {\r\n                    if (p.filter(p => p.perId === u.perfiles[0].perId).length < 1)\r\n                        p = [...p, u.perfiles[0]]\r\n                })\r\n                setNombres(n)\r\n                setApellidos(a)\r\n                setPaises(c)\r\n                setEstados(s)\r\n                setPerfiles(p)\r\n                setUsers(usuarios)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n        if (loadTotals) fetchDataTotals()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoadingTotals ?\r\n                    <AlertWait isLoading={isLoadingTotals} message={getLabel(labels.loading)} />\r\n                    :\r\n                    totals && <Row gutter={[15, 15]}>\r\n                        {\r\n                            totals && totals.filter(t => t.perId !== 0 && t.perId !== 999).map((t, index) => (\r\n                                {\r\n                                    id: t.perId,\r\n                                    name: t.perNombre,\r\n                                    total: t.total,\r\n                                    props: {\r\n                                        bordered: true,\r\n                                        hoverable: true,\r\n                                        style: {\r\n                                            height: '100%'\r\n                                            , color: '#f0f0f0'\r\n                                            , ...estilos[index]\r\n                                        }\r\n                                    },\r\n                                    data: {\r\n                                        title: <Typography.Text style={{ color: '#ffffff' }}>{t.perNombre}</Typography.Text>,\r\n                                        value: t.perId !== 0 && t.perId !== 999 ? Math.round(t.activos * 100.00 / t.total, 1) : t.total,\r\n                                        precision: 0,\r\n                                        prefix: <anticons.UserOutlined />,\r\n                                        suffix: t.perId !== 0 && t.perId !== 999 && '%'\r\n                                    },\r\n                                    description: t.perId !== 0 && t.perId !== 999 && <>{t.activos} {getLabel(labels.of)} {t.total} {getLabel(labels.users)}</>\r\n                                }\r\n                            )).map(s => renderTotal(s))\r\n                        }\r\n                        {\r\n                            totals && totals.filter(t => t.perId === 0 || t.perId === 999).map((t, index) => (\r\n                                {\r\n                                    id: t.perId,\r\n                                    name: t.perNombre,\r\n                                    total: t.total,\r\n                                    props: {\r\n                                        bordered: true,\r\n                                        hoverable: true,\r\n                                        style: {\r\n                                            height: '100%'\r\n                                            , color: '#f0f0f0'\r\n                                            , ...estilos[index]\r\n                                        }\r\n                                    },\r\n                                    data: {\r\n                                        title: <Typography.Text style={{ color: '#ffffff' }}>{t.perNombre}</Typography.Text>,\r\n                                        value: t.perId !== 0 && t.perId !== 999 ? Math.round(t.activos * 100.00 / t.total, 1) : t.total,\r\n                                        precision: 0,\r\n                                        prefix: <anticons.UserOutlined />,\r\n                                        suffix: t.perId !== 0 && t.perId !== 999 && '%'\r\n                                    },\r\n                                    description: t.perId !== 0 && t.perId !== 999 && <>{t.activos} {getLabel(labels.of)} {t.total} {getLabel(labels.users)}</>\r\n                                }\r\n                            )).map(s => renderTotalExportar(s))\r\n                        }\r\n                    </Row>\r\n            }\r\n            <Row justify='end'>\r\n                <Col style={{ padding: '15px 0' }}>\r\n                    <Form\r\n                        layout='inline'\r\n                    >\r\n                        <Form.Item>\r\n                            <Button type='default'\r\n                                onClick={() => fetchData()}\r\n                                loading={isLoading || isDownloading}\r\n                            >\r\n                                {getLabel(labels.refresh)}\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row >\r\n                    :\r\n                    <Row>\r\n                        {\r\n                            selectedProfiles &&\r\n                            <Col span={24}>\r\n                                <Row gutter={[15, 15]}>\r\n                                    {\r\n                                        selectedProfiles.map(p =>\r\n                                            <Col\r\n                                                key={p.perId}\r\n                                            >\r\n                                                <Tag\r\n                                                    onClose={(_) => setProfile(p)}\r\n                                                    closeIcon={<i className=\"fa-solid fa-circle-xmark\"></i>}\r\n                                                    closable\r\n                                                    style={{\r\n                                                        padding: '5px 15px',\r\n                                                        borderRadius: '15px',\r\n                                                        fontSize: '1em'\r\n                                                    }}\r\n                                                >\r\n                                                    {`${p.perNombre} (${p.total})`}\r\n                                                </Tag>\r\n                                            </Col>\r\n                                        )\r\n                                    }\r\n                                </Row>\r\n                            </Col>\r\n                        }\r\n                        <Col span={24} style={{ textAlign: 'end' }}>\r\n                            <Typography>\r\n                                <Paragraph>\r\n                                    <Text type='secondary'>\r\n                                        {`${getLabel(labels.filtered)} ${currentDataSource || users.length} ${getLabel(labels.of)} ${users.length} ${getLabel(labels.users)}`}\r\n                                    </Text>\r\n                                </Paragraph>\r\n                            </Typography>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            {\r\n                                perfiles && <Table\r\n                                    {...tableProps}\r\n                                    rowKey='usuId'\r\n                                    columns={columnas}\r\n                                    dataSource={users}\r\n                                    onChange={(pagination, filters, sorter, extra) => {\r\n                                        const { currentDataSource } = extra\r\n                                        setCurrentDataSource(currentDataSource.length)\r\n                                    }}\r\n                                >\r\n                                </Table>\r\n                            }\r\n                        </Col>\r\n                    </Row >\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { getsTrainingByTrainer, getTrainingById, insertTraining, updateTraining } from \"../utils/urls\";\r\n\r\nexport default class TrainingService {\r\n    getByTraining = (props) => {\r\n        const { navigate, trainer } = props\r\n        return AxiosInstance(navigate).post(getsTrainingByTrainer(), trainer)\r\n    }\r\n    getById = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getTrainingById(), training)\r\n    }\r\n    put = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).put(insertTraining(), training)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n    pub = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).patch(updateTraining(), training)\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Spin, Typography, Image, Space, Tabs, Badge, Card, Alert } from 'antd'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst usuarioService = new UsuarioService()\r\nconst trainingService = new TrainingService()\r\n\r\nconst UserInfo = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [usuario, setUsuario] = useState(null)\r\n    const [trainings, setTrainings] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderTraining = ({ entEstado, entFechaFin, entFechaIni, entId, entNombre }) =>\r\n        <Card\r\n            key={entId}\r\n            bordered={false}\r\n            style={{ marginBottom: '10px' }}\r\n\r\n        >\r\n            <Row>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entNombre}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center', paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        <Badge color={entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'} text={entEstado.catNombre} />\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ paddingTop: '4px' }}>\r\n                    <Typography.Text strong>\r\n                        {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                    </Typography.Text>\r\n                </Col>\r\n                <Col xs={12} sm={6} md={6} lg={6} xl={6} xxl={6} style={{ textAlign: 'center' }}>\r\n                    <Button type='primary'\r\n                        onClick={() => {\r\n                            navigate.push(`/traininginfo/${entId}`)\r\n                        }}\r\n                    >\r\n                        {getLabel(labels.view)}\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n\r\n    const fetchTrainings = async () => {\r\n        const trainer = { idUsuario: id }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setTrainings(data.listObject)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setError(null)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            if (data) {\r\n                const usuario = data.listObject[0]\r\n                const newUsuario = { ...usuario, fechanac: usuario.fechanac.substring(0, 10) }\r\n                setUsuario(newUsuario)\r\n                fetchTrainings()\r\n            } else {\r\n                setIsLoading(false)\r\n                setError(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            setIsLoading(false)\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/dashboard'}>{getLabel(labels.backHome)}</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    usuario && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push(`/dashboard`)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${usuario.nombres || 'Postulante'} ${usuario.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.information)}</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        usuario.imagen ?\r\n                                                            <Image src={\r\n                                                                `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            {getLabel(labels.profile)}:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            usuario.perfiles && usuario.perfiles[0].perNombre\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={usuario}\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='nombres'\r\n                                                            label={getLabel(labels.firstName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label={getLabel(labels.lastName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label={getLabel(labels.sex)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label={getLabel(labels.dateBirth)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label={getLabel(labels.country)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label={getLabel(labels.city)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={getLabel(labels.countryCode)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={getLabel(labels.phoneNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={getLabel(labels.idNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={getLabel(labels.currentyWorking)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label={getLabel(labels.email)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label={getLabel(labels.additionalEmail)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.trainings)}</Typography.Text>,\r\n                                children: <>\r\n                                    {\r\n                                        trainings && trainings.length > 0 ?\r\n                                            <>\r\n                                                {\r\n                                                    trainings.map(t => renderTraining(t))\r\n                                                }\r\n                                            </>\r\n                                            :\r\n                                            <Alert\r\n                                                description={getLabel(labels.trainingsNotFound)}\r\n                                                type=\"info\"\r\n                                                showIcon\r\n                                                style={{ borderRadius: '12px', border: 'none' }}\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { Col, Row, Button, Result, Form, Input, Select, Spin, Typography, Divider, DatePicker, Image, Space, Tooltip, Switch, Upload } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport * as anticons from '@ant-design/icons'\r\nimport md5 from 'md5'\r\n\r\nimport { disabledDate, getCatalogos } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nimport PerfilService from '../../service/PerfilService'\r\nconst usuarioService = new UsuarioService()\r\nconst perfilService = new PerfilService()\r\n\r\nconst { Option } = Select\r\n\r\nconst UsuarioNew = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [perfiles, setPerfiles] = useState([])\r\n    const [error, setError] = useState(null)\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n        <>\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catNombre}></img>\r\n            &nbsp;{\r\n                e.catNombre\r\n            }\r\n        </>\r\n    </Option>\r\n\r\n    const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n        <>\r\n            +({e.catValor})&nbsp;\r\n            <img\r\n                src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n                srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n                width=\"24\"\r\n                height=\"18\"\r\n                alt={e.catDescripcion}></img>\r\n        </>\r\n    </Option>\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success(getLabel(labels.userCreatedSuccessfully))\r\n                navigate.push('/users')\r\n            }\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.uploadFailed))\r\n        } finally {\r\n            setIsSaving(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const insert = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm)\r\n        }\r\n        setError(null)\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await usuarioService.new({ navigate, usuario })\r\n            const usuarioActualizado = data.listObject[0]\r\n            if (fileList.length > 0) {\r\n                handleUpload(usuarioActualizado)\r\n            } else {\r\n                setIsSaving(false)\r\n                toast.success(getLabel(labels.userCreatedSuccessfully))\r\n                navigate.push('/users')\r\n            }\r\n        }\r\n        catch (error) {\r\n            setIsSaving(false)\r\n            setError(getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    const fetchProfiles = async () => {\r\n        setError(null)\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await perfilService.gets({ navigate })\r\n            if (data) {\r\n                const perfiles = data.listObject\r\n                setPerfiles(perfiles)\r\n            } else {\r\n                setError(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            setError(getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchProfiles()\r\n        }\r\n    })\r\n\r\n\r\n    if (error) {\r\n        return (\r\n            <Result\r\n                status=\"warning\"\r\n                title={''}\r\n                subTitle={''}\r\n                extra={\r\n                    <>\r\n                        <h5>{error}</h5>\r\n                        <Link to={'/users'}>{getLabel(labels.backHome)}</Link>\r\n                    </>\r\n                }\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row align='middle' gutter={10}>\r\n                <Col>\r\n                    <Link to={'/users'}><anticons.ArrowLeftOutlined /></Link>\r\n                </Col>\r\n                <Col>\r\n                    <Typography.Title\r\n                        level={4}\r\n                        style={{\r\n                            margin: 0,\r\n                        }}\r\n                    >\r\n                        {`${getLabel(labels.new)} ${getLabel(labels.user)}`}\r\n                    </Typography.Title>\r\n                </Col>\r\n            </Row>\r\n            <Divider></Divider>\r\n            {\r\n                isLoading ?\r\n                    <div className=\"p-10 text-center\">\r\n                        <Spin size=\"large\" /><br />\r\n                        <Typography.Text>{getLabel(labels.loading)}...</Typography.Text>\r\n                    </div> :\r\n                    <>\r\n                        {\r\n                            perfiles &&\r\n                            <Form\r\n                                layout={'vertical'}\r\n                                onFinish={insert}\r\n                                disabled={isSaving}\r\n                            >\r\n                                <Row gutter={[10, 0]}>\r\n                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={getLabel(labels.uploadProfilePicture)}\r\n                                        >\r\n                                            <Row gutter={[0, 10]}>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    {\r\n                                                        photoFile ?\r\n                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                    <Upload\r\n                                                        multiple={false}\r\n                                                        {...props}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            icon={<anticons.UploadOutlined />}\r\n                                                            disabled={\r\n                                                                fileList.length > 0\r\n                                                            }\r\n                                                        >{getLabel(labels.selectPhoto)}</Button>\r\n                                                    </Upload>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                        <Row gutter={[15, 0]}>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='nombres'\r\n                                                    label={getLabel(labels.firstName)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.completeFirstName),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='apellidos'\r\n                                                    label={getLabel(labels.lastName)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.completeLastName),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Input />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name={['sexoId']}\r\n                                                    label={getLabel(labels.sex)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.selectSex),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <Select\r\n                                                        style={{\r\n                                                            width: '100%',\r\n                                                            display: 'inline-block'\r\n                                                        }}\r\n                                                        fieldNames={{\r\n                                                            label: 'catNombre',\r\n                                                            value: 'catId'\r\n                                                        }}\r\n                                                        showSearch\r\n                                                        options={getCatalogos().generos}\r\n                                                        optionFilterProp=\"catNombre\"\r\n                                                    />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Form.Item\r\n                                                    name='fechanac'\r\n                                                    label={getLabel(labels.dateBirth)}\r\n                                                    rules={[\r\n                                                        {\r\n                                                            required: true,\r\n                                                            message: getLabel(labels.selectDateBirth),\r\n                                                        },\r\n                                                    ]}\r\n                                                >\r\n                                                    <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                </Form.Item>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='documento'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>{getLabel(labels.idNumber)}</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>{getLabel(labels.uniqueIdentificationCountry)}</>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeID),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['paisId']}\r\n                                            label={getLabel(labels.country)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectCountry),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='paisId'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='ciudad'\r\n                                            label={getLabel(labels.city)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeCity),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name={['codigotel']}\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    {getLabel(labels.countryCode)}\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectCountryCode),\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Select name='codigotel'>\r\n                                                {\r\n                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                }\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='celular'\r\n                                            label={\r\n                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                    {getLabel(labels.phoneNumber)}\r\n                                                </span>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completePhoneNumber),\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                        <Form.Item\r\n                                            name='lugartrabajo'\r\n                                            label={\r\n                                                <Space direction='horizontal'>\r\n                                                    <>{getLabel(labels.currentyWorking)}</>\r\n                                                    <Tooltip\r\n                                                        title={\r\n                                                            <>{getLabel(labels.completeNameInstitution)}</>\r\n                                                        }\r\n                                                        placement='right'\r\n                                                    >\r\n                                                        <anticons.InfoCircleFilled />\r\n                                                    </Tooltip>\r\n                                                    <Switch\r\n                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                    />\r\n                                                </Space>\r\n                                            }\r\n                                            rules={[\r\n                                                {\r\n                                                    required: currentlyWorking,\r\n                                                    message: getLabel(labels.ifYesCompleteNameInstitution),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email'\r\n                                            label={getLabel(labels.email)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeEmail),\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.emailNotValid)\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='email2'\r\n                                            label={getLabel(labels.additionalEmail)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.completeAdditionalEmail),\r\n                                                },\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.additionalEmailNotValid)\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='password'\r\n                                            label={getLabel(labels.createYourPassword)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.createYourPassword),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name='passwordConfirm'\r\n                                            label={getLabel(labels.confirmYourPassword)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.confirmYourPassword),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    {\r\n                                        validForm === false &&\r\n                                        <Col span={24}\r\n                                        >\r\n                                            <PasswordChecklist\r\n                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                minLength={8}\r\n                                                value={password}\r\n                                                valueAgain={passwordConfirm}\r\n                                                messages={{\r\n                                                    minLength: getLabel(labels.passwordHasMore8Characters),\r\n                                                    specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                                                    number: getLabel(labels.passwordHasNumber),\r\n                                                    capital: getLabel(labels.passwordHasCapitalLetter),\r\n                                                    match: getLabel(labels.passwordsMatch),\r\n                                                }}\r\n                                                onChange={(isValid) => { setValidForm(isValid) }}\r\n                                                style={{\r\n                                                    padding: '0 0 20px 0'\r\n                                                }}\r\n                                            />\r\n                                        </Col>\r\n                                    }\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['perId']}\r\n                                            label={getLabel(labels.profile)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectProfile),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'perNombre',\r\n                                                    value: 'perId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={perfiles}\r\n                                                optionFilterProp=\"perNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                        <Form.Item\r\n                                            name={['estadoId']}\r\n                                            label={getLabel(labels.state)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.selectState),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Select\r\n                                                style={{\r\n                                                    width: '100%',\r\n                                                    display: 'inline-block'\r\n                                                }}\r\n                                                fieldNames={{\r\n                                                    label: 'catNombre',\r\n                                                    value: 'catId'\r\n                                                }}\r\n                                                showSearch\r\n                                                options={getCatalogos().states}\r\n                                                optionFilterProp=\"catNombre\"\r\n                                            />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                        <Form.Item>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button type='default'\r\n                                                    disabled={isSaving}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/users')\r\n                                                    }}\r\n                                                >{getLabel(labels.back)}</Button>\r\n                                                <Button type='primary' htmlType='submit'\r\n                                                    loading={isSaving}\r\n                                                    disabled={isSaving}>{getLabel(labels.save)}</Button>\r\n                                            </Space>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsuarioNew","import React, { useState, useEffect } from 'react'\r\nimport { Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { disabledDate, getCatalogos, getFormatoFecha } from './../../utils/Utils'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Option } = Select\r\n\r\nconst User = (props) => {\r\n\r\n  const { user, navigate } = props\r\n  const { id } = user\r\n  const [formUser] = Form.useForm()\r\n\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [usuario, setUsuario] = useState(null)\r\n  const [currentlyWorking, setCurrentlyWorking] = useState(true)\r\n\r\n  const [photoFile, setPhotoFile] = useState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n\r\n  const propsUpload = {\r\n    onRemove: (file) => {\r\n      const index = fileList.indexOf(file);\r\n      const newFileList = fileList.slice();\r\n      newFileList.splice(index, 1);\r\n      setFileList(newFileList);\r\n      setPhotoFile(null);\r\n    },\r\n    beforeUpload: (file) => {\r\n      setFileList([...fileList, file]);\r\n      setPhotoFile(URL.createObjectURL(file));\r\n      return false;\r\n    },\r\n    fileList,\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderPaisCode = e => <Option key={e.catValor} value={e.catValor}>\r\n    <>\r\n      +({e.catValor})&nbsp;\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catDescripcion}></img>\r\n    </>\r\n  </Option>\r\n\r\n  const handleUpload = async ({ usuId }) => {\r\n    const datos = new FormData();\r\n    datos.append('file', fileList[0])\r\n    datos.append('usuId', usuId)\r\n    try {\r\n      const { data } = await usuarioService.upLoadPhoto({ datos })\r\n      if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n        toast.success(getLabel(labels.accountUpdatedSuccessfully))\r\n      }\r\n    } catch (_) {\r\n      toast.error(getLabel(labels.uploadFailed))\r\n    } finally {\r\n      setIsSaving(false)\r\n      setFileList([])\r\n    }\r\n  }\r\n\r\n  const update = async (values) => {\r\n    const usuario = {\r\n      ...values\r\n      , trabaja: currentlyWorking\r\n      , codigotel: values.countryCode.catValor\r\n      , sexoId: values.sexo.catId\r\n      , paisId: values.pais.catId\r\n      , estadoId: values.estado.catId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await usuarioService.set({ navigate, usuario })\r\n      const usuarioActualizado = data.listObject[0]\r\n      setUsuario(usuarioActualizado)\r\n      if (fileList.length > 0) {\r\n        handleUpload(usuarioActualizado)\r\n      } else {\r\n        setIsSaving(false)\r\n        toast.success(getLabel(labels.accountUpdatedSuccessfully))\r\n      }\r\n    }\r\n    catch (error) {\r\n      setIsSaving(false)\r\n      toast.error(getLabel(labels.errorOcurred))\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    try {\r\n      const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n      if (data) {\r\n        const usuario = data.listObject[0]\r\n        const newUsuario = {\r\n          ...usuario\r\n          , countryCode: {\r\n            catValor: usuario.codigotel.replace('+', '')\r\n          }\r\n          , fechanac: moment(dayjs(usuario.fechanac.substring(0, 10), getFormatoFecha()).$d)\r\n        }\r\n        setUsuario(newUsuario)\r\n        setCurrentlyWorking(newUsuario.trabaja)\r\n      } else {\r\n        toast.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load) {\r\n      fetchData()\r\n    }\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <div className=\"grid\">\r\n        <div className=\"col-12\">\r\n          <div className=\"mgeCard\">\r\n            <div className=\"grid\">\r\n              <div className=\"col-4\">\r\n                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                  {getLabel(labels.myAccount)}\r\n                </h3>\r\n              </div>\r\n              <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                <Space>\r\n                  <Button\r\n                    type='default'\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => {\r\n                      window.history.go(-1)\r\n                    }}\r\n                  >\r\n                    {getLabel(labels.cancel)}\r\n                  </Button>\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSaving}\r\n                    disabled={isLoading || isSaving}\r\n                    onClick={() => { formUser.submit() }}>\r\n                    {getLabel(labels.save)}\r\n                  </Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  {getLabel(labels.loading)}...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          usuario && <Row justify='center' style={{ paddingTop: '20px' }}>\r\n            <Col xs={24} sm={24} md={22} lg={20} xl={18} xxl={16}>\r\n              <Form\r\n                form={formUser}\r\n                layout={'vertical'}\r\n                initialValues={usuario}\r\n                onFinish={update}\r\n                disabled={isSaving}\r\n              >\r\n                <Row gutter={[10, 0]}>\r\n                  <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='file'\r\n                      label={getLabel(labels.uploadProfilePicture)}\r\n                    >\r\n                      <Row gutter={[0, 10]}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          {\r\n                            photoFile ?\r\n                              <Image src={photoFile} width={128} height={128} />\r\n                              :\r\n                              usuario.imagen ?\r\n                                <Image src={\r\n                                  `/images/${usuario.imagen.split('/')[usuario.imagen.split('/').length - 1]}`\r\n                                } width={128} height={128} />\r\n                                :\r\n                                <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                          <Upload\r\n                            multiple={false}\r\n                            {...propsUpload}\r\n                          >\r\n                            <Button\r\n                              type='primary'\r\n                              icon={<anticons.UploadOutlined />}\r\n                              disabled={\r\n                                fileList.length > 0\r\n                              }\r\n                            >\r\n                              {getLabel(labels.selectPhoto)}\r\n                            </Button>\r\n                          </Upload>\r\n                        </Col>\r\n                      </Row>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                    <Row gutter={[15, 0]}>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='usuId'\r\n                          label={getLabel(labels.idNumber)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeID),\r\n                            },\r\n                          ]}\r\n                          style={{ display: 'none' }}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          name='nombres'\r\n                          label={getLabel(labels.firstName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeFirstName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='apellidos'\r\n                          label={getLabel(labels.lastName)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.completeLastName),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Input />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name={['sexo', 'catId']}\r\n                          label={getLabel(labels.sex)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectSex),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <Select\r\n                            style={{\r\n                              width: '100%',\r\n                              display: 'inline-block'\r\n                            }}\r\n                            fieldNames={{\r\n                              label: 'catNombre',\r\n                              value: 'catId'\r\n                            }}\r\n                            showSearch\r\n                            options={getCatalogos().generos}\r\n                            optionFilterProp=\"catNombre\"\r\n                          />\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Form.Item\r\n                          name='fechanac'\r\n                          label={getLabel(labels.dateBirth)}\r\n                          rules={[\r\n                            {\r\n                              required: true,\r\n                              message: getLabel(labels.selectDateBirth),\r\n                            },\r\n                          ]}\r\n                        >\r\n                          <DatePicker style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='documento'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.idNumber)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                {getLabel(labels.uniqueIdentificationCountry)}\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeID),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['pais', 'catId']}\r\n                      label={getLabel(labels.country)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountry)\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select name='paisId'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisValor(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='ciudad'\r\n                      label={getLabel(labels.city)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeCity),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name={['countryCode', 'catValor']}\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.countryCode)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectCountryCode),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Select name='codigotel'>\r\n                        {\r\n                          getCatalogos().paises.map(p => renderPaisCode(p))\r\n                        }\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='celular'\r\n                      label={\r\n                        <span style={{ padding: '0 0 2px 0' }}>\r\n                          {getLabel(labels.phoneNumber)}\r\n                        </span>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completePhoneNumber),\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                    <Form.Item\r\n                      name='lugartrabajo'\r\n                      label={\r\n                        <Space direction='horizontal'>\r\n                          <>{getLabel(labels.currentyWorking)}</>\r\n                          <Tooltip\r\n                            title={\r\n                              <>\r\n                                {getLabel(labels.completeNameInstitution)}\r\n                              </>\r\n                            }\r\n                            placement='right'\r\n                          >\r\n                            <anticons.InfoCircleFilled />\r\n                          </Tooltip>\r\n                          <Switch\r\n                            checked={currentlyWorking}\r\n                            onChange={(c) => { setCurrentlyWorking(c) }}\r\n                          />\r\n                        </Space>\r\n                      }\r\n                      rules={[\r\n                        {\r\n                          required: currentlyWorking,\r\n                          message: getLabel(labels.ifYesCompleteNameInstitution)\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Input disabled={!currentlyWorking} />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email'\r\n                      label={getLabel(labels.email)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.emailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input disabled />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Form.Item\r\n                      name='email2'\r\n                      label={getLabel(labels.additionalEmail)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.completeAdditionalEmail),\r\n                        },\r\n                        {\r\n                          type: 'email',\r\n                          message: getLabel(labels.additionalEmailNotValid)\r\n                        }\r\n                      ]}\r\n                    >\r\n                      <Input />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12} style={{ display: 'none' }}>\r\n                    <Form.Item\r\n                      name={['estado', 'catId']}\r\n                      label={getLabel(labels.state)}\r\n                      rules={[\r\n                        {\r\n                          required: true,\r\n                          message: getLabel(labels.selectState),\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Select\r\n                        style={{\r\n                          width: '100%',\r\n                          display: 'inline-block'\r\n                        }}\r\n                        fieldNames={{\r\n                          label: 'catNombre',\r\n                          value: 'catId'\r\n                        }}\r\n                        showSearch\r\n                        options={getCatalogos().states}\r\n                        optionFilterProp=\"catNombre\"\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row >\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default User","import React from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport User from '../user/User';\r\n\r\nconst MiCuenta = () => {\r\n  const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n  const navigate = useHistory()\r\n  return <User user={{ id }} navigate={navigate}></User>\r\n}\r\n\r\nexport default MiCuenta","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Badge, Space, Spin, Result, Card, Checkbox } from 'antd'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst trainingService = new TrainingService()\r\n\r\nconst Courses = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [state, setState] = useState(null)\r\n    const [courses, setCourses] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const renderCourse = ({ entId, entNombre, entFechaIni, entFechaFin, entModalidad, numPostulantes, entEstado, cursoList }) => {\r\n        const color = entEstado.catValor === 'ACTIVE' ? '#54873C' : entEstado.catValor === 'INACTIVE' ? 'red' : '#636466'\r\n        return (\r\n            <Col key={entId} xs={24} sm={12} md={12} lg={12} xl={8} xxl={6}>\r\n                <Card\r\n                    hoverable\r\n                >\r\n                    <Row style={{ lineHeight: '1.8em' }}>\r\n                        <Col span={16}>\r\n                            <Typography.Title level={5}>\r\n                                <span className='mge-darkGreen' style={{ fontWeight: 'bold' }}>\r\n                                    {entNombre}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                        <Col span={8} style={{ textAlign: 'right' }}>\r\n                            <Badge color={color} text={entEstado.catNombre} />\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text>\r\n                                {entModalidad.catNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Typography.Text strong>\r\n                                {entFechaIni.substring(0, 10).split('-').reverse().join('/')} - {entFechaFin.substring(0, 10).split('-').reverse().join('/')}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                            <Space direction='horizontal'>\r\n                                <Typography.Text type='secondary'>\r\n                                    {cursoList.length} {getLabel(labels.courses)}\r\n                                </Typography.Text>\r\n                                <Typography.Text type='secondary'>\r\n                                    {numPostulantes} {getLabel(labels.applicants)}\r\n                                </Typography.Text>\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24}>&nbsp;</Col>\r\n                    </Row>\r\n                    <Row gutter={[20]}>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/training/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                {\r\n                                    getLabel(labels.view)\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <Button type='default' block\r\n                                onClick={() => {\r\n                                    navigate.push(`/trainingedit/${entId}`)\r\n                                }}\r\n                                style={\r\n                                    {\r\n                                        borderColor: '#70B450',\r\n                                        borderWidth: '2px',\r\n                                        color: '#70B450',\r\n                                        height: '40px'\r\n                                    }\r\n                                }\r\n                            >\r\n                                {getLabel(labels.edit)}\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        setCourses([])\r\n        let trainer = { idUsuario: getDatosUsuario().usuarioId }\r\n        if (state) {\r\n            trainer = { ...trainer, estado: !state }\r\n        }\r\n        try {\r\n            const { data } = await trainingService.getByTraining({ navigate, trainer })\r\n            if (data) {\r\n                setError(null)\r\n                setCourses(data.listObject)\r\n            } else {\r\n                setError(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            setError(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mgeCard\" style={{\r\n                paddingTop: '15px',\r\n                paddingBottom: '15px'\r\n            }}>\r\n                <Row>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    >\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                            {getLabel(labels.trainings)}\r\n                        </h3>\r\n                    </Col>\r\n                    <Col\r\n                        xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                        style={{\r\n                            textAlign: 'right'\r\n                        }}\r\n                    >\r\n                        <Space>\r\n                            <Button\r\n                                type='default'\r\n                                loading={isLoading}\r\n                                disabled={isLoading}\r\n                                onClick={() => {\r\n                                    fetchData()\r\n                                }}>{getLabel(labels.refresh)}</Button>\r\n                            <Button\r\n                                type='primary'\r\n                                disabled={isLoading}\r\n                                onClick={() => {\r\n                                    navigate.push('/trainingnew')\r\n                                }}>{getLabel(labels.newTraining)}</Button>\r\n                        </Space>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row>\r\n                <Col span={24} style={{ textAlign: 'end', paddingTop: '10px', paddingBottom: '10px' }}>\r\n                    <Checkbox checked={state} onChange={(e) => setState(e.target.checked)}>\r\n                        {getLabel(labels.onlyInactive)}\r\n                    </Checkbox>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    error ? <>\r\n                        <Result\r\n                            title={error}\r\n                        />\r\n                    </> :\r\n                        <Row gutter={[25, 25]} justify='start'>\r\n                            {\r\n                                courses && courses.map(c => renderCourse(c))\r\n                            }\r\n                        </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Courses","import axios from \"axios\"\r\nimport AxiosInstance from \"../utils/AxiosInstance\"\r\nimport { deletePostulant, getPostulantByTraining, getTrainingByPostulant, insertPostulant, sendEmailRegister, validatePostulant } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport class PostulantService {\r\n    put = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).put(insertPostulant(), postulant)\r\n    }\r\n    sendEmail = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRegister(), postulant)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getPostulantByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(deletePostulant(), postulant)\r\n    }\r\n    getTraining = (props) => {\r\n        const { navigate, postulant } = props\r\n        return AxiosInstance(navigate).post(getTrainingByPostulant(), postulant)\r\n    }\r\n    validate = (props) => {\r\n        const { postulant } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.post(validatePostulant(), postulant)\r\n    }\r\n}\r\n\r\nexport default PostulantService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { insertCountryTraining, getCountryTrainingByTraining, deleteCountryTraining } from \"../utils/urls\";\r\nexport class CountryTrainingService {\r\n    put = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).put(insertCountryTraining(), countryTraining)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(getCountryTrainingByTraining(), countryTraining)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, countryTraining } = props\r\n        return AxiosInstance(navigate).post(deleteCountryTraining(), countryTraining)\r\n    }\r\n}\r\n\r\nexport default CountryTrainingService","import AxiosInstance from \"../utils/AxiosInstance\";\r\nimport { deleteCourse, getCourseByTraining, insertCourse } from \"../utils/urls\";\r\nexport class CourseService {\r\n    put = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).put(insertCourse(), course)\r\n    }\r\n    getByTraining = (props) => {\r\n        const { navigate, training } = props\r\n        return AxiosInstance(navigate).post(getCourseByTraining(), training)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(deleteCourse(), course)\r\n    }\r\n}\r\n\r\nexport default CourseService","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Image, Alert } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport PostulantService from '../../service/PostulantService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport { getCatalogos, getCultures, getDatosUsuario } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst baseTraining = {\r\n  entCultura: getCulture()\r\n}\r\n\r\nconst { Option } = Select\r\nconst trainingService = new TrainingService()\r\nconst postulantService = new PostulantService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\n\r\nconst Course = () => {\r\n\r\n  const navigate = useHistory()\r\n  const [formPostulante] = Form.useForm()\r\n  const [isSaving, setIsSaving] = useState(false)\r\n  const [postulants, setPostulants] = useState([])\r\n  const [paises, setPaises] = useState([])\r\n  const [courses, setCourses] = useState([])\r\n  const [message, setMessage] = useState({ type: 'warning', message: null })\r\n  const [selectedModality, setSelectedModality] = useState(0)\r\n  const [startDate, setStartDate] = useState(null)\r\n  const [endDate, setEndDate] = useState(null)\r\n  const [formCourse] = Form.useForm()\r\n\r\n  const disabledDateStart = (current) => {\r\n    if (endDate === null) return\r\n    return current && current >= endDate.startOf('day');\r\n  }\r\n\r\n  const disabledDateEnd = (current) => {\r\n    if (startDate === null) return\r\n    return current && current <= startDate.endOf('day');\r\n  }\r\n\r\n  const renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n      <img\r\n        src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n        srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n        width=\"24\"\r\n        height=\"18\"\r\n        alt={e.catNombre}></img>\r\n      &nbsp;{\r\n        e.catNombre\r\n      }\r\n    </>\r\n  </Option>\r\n\r\n  const renderModality = ({ catId, catNombre, catValor }) =>\r\n    <Radio.Button\r\n      key={catId}\r\n      value={catId}\r\n      onChange={e => setSelectedModality(catId)}\r\n      style={{\r\n        height: '100%',\r\n        margin: '0 20px 20px 0',\r\n      }}\r\n    >\r\n      <Row>\r\n        <Col style={{\r\n          padding: '20px 10px',\r\n        }}>\r\n          <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n        </Col>\r\n        <Col style={{\r\n          padding: '30px 10px',\r\n          width: '100px'\r\n        }}>\r\n          {catNombre}\r\n        </Col>\r\n      </Row>\r\n    </Radio.Button>\r\n\r\n  // const renderCourse = ({ catId, catNombre, catValor }) =>\r\n  //   <Col key={catId} span={24}>\r\n  //     <Form.Item\r\n  //       name={[catValor]}\r\n  //       label={`Number of beneficiaries for ${catNombre}`}\r\n  //       rules={[\r\n  //         {\r\n  //           required: true,\r\n  //           message: `Complete number of beneficiaries for ${catNombre}`\r\n  //         },\r\n  //       ]}\r\n  //     >\r\n  //       <InputNumber />\r\n  //     </Form.Item>\r\n  //   </Col>\r\n\r\n  const renderApplicants = (posEmail) =>\r\n    <Col key={posEmail}>\r\n      <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { removePostulant(posEmail) }}\r\n        closable\r\n        style={{\r\n          padding: '5px 15px',\r\n          borderRadius: '15px',\r\n          fontSize: '1em'\r\n        }}\r\n      >\r\n        {posEmail}\r\n      </Tag>\r\n    </Col>\r\n\r\n  const addPostulant = (values) => {\r\n    const { postulant } = values\r\n    formPostulante.resetFields()\r\n    if (postulants.filter(p => p === postulant).length > 0) {\r\n      setMessage({\r\n        type: 'warning',\r\n        message: `${getLabel(labels.thenEmail)} ${postulant} ${getLabel(labels.alreadyExists)}.`\r\n      })\r\n      setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n      return\r\n    }\r\n    const newPostulantsList = [...postulants.filter(p => p !== postulant), postulant]\r\n    setPostulants(newPostulantsList)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `${getLabel(labels.email)} ${postulant} ${getLabel(labels.successfullyAdded)}.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n  }\r\n\r\n  const removePostulant = (email) => {\r\n    const newPostulantsList = postulants.filter(p => p !== email)\r\n    setMessage({\r\n      type: 'success',\r\n      message: `${getLabel(labels.email)} ${email} ${getLabel(labels.successfullyRemoved)}.`\r\n    })\r\n    setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n    setPostulants(newPostulantsList)\r\n  }\r\n\r\n  const save = async (values) => {\r\n    const training = {\r\n      idRegion: values.idRegion,\r\n      entCultura: values.entCultura,\r\n      idModalidad: values.idModalidad,\r\n      entFechaIni: values.entFechaIni,\r\n      entFechaFin: values.entFechaFin,\r\n      idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'DRAFT')[0].catId,\r\n      idUsuario: getDatosUsuario().usuarioId\r\n    }\r\n    setIsSaving(true)\r\n    try {\r\n      const { data } = await trainingService.put({ navigate, training })\r\n      if (data) {\r\n        // Asignar Paises\r\n        const requests = []\r\n        if (paises.length > 0) {\r\n          paises.forEach(p => {\r\n            requests.push(countryTrainingService.put({\r\n              navigate, countryTraining: {\r\n                \"idPais\": p.value,\r\n                \"idEntrenamiento\": data.listObject[0].entId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar cursos\r\n        if (courses.length > 0) {\r\n          courses.forEach(p => {\r\n            requests.push(courseService.put({\r\n              navigate, course: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"idNombreCurso\": p.catId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        // Asignar postulantes\r\n        if (postulants.length > 0) {\r\n          postulants.forEach(p => {\r\n            requests.push(postulantService.put({\r\n              navigate, postulant: {\r\n                \"idEntrenamiento\": data.listObject[0].entId,\r\n                \"posEmail\": p,\r\n                \"idInvitadoPor\": getDatosUsuario().usuarioId\r\n              }\r\n            }))\r\n          });\r\n        }\r\n        if (requests.length > 0) {\r\n          Promise.all(requests)\r\n            .then((results) => {\r\n              toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.successfullyCreated)}`)\r\n              navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n            }).catch(error => {\r\n              const { response } = error\r\n              const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n              toast.error(`${getLabel(labels.notPossibleAddApplicant)}: ${msgError}`)\r\n            })\r\n        } else {\r\n          toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.successfullyCreated)}`)\r\n          navigate.push(`/trainingedit/${data.listObject[0].entId}`)\r\n        }\r\n      } else {\r\n        toast.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsSaving(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        form={formCourse}\r\n        layout='vertical'\r\n        initialValues={\r\n          baseTraining\r\n        }\r\n        onFinish={save}\r\n        disabled={isSaving}\r\n      >\r\n        <div className=\"grid\">\r\n          <div className=\"col-12\">\r\n            <div className=\"mgeCard\">\r\n              <div className=\"grid\">\r\n                <div className=\"col-4\">\r\n                  <Space direction='horizontal'>\r\n                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                      onClick={() => {\r\n                        navigate.push('/training')\r\n                      }}\r\n                    ></Button>\r\n                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                      {getLabel(labels.newTraining)}\r\n                    </h3>\r\n                  </Space>\r\n                </div>\r\n                <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                  <Space>\r\n                    <Button\r\n                      type='default'\r\n                      htmlType='submit'\r\n                      loading={isSaving}\r\n                      disabled={isSaving}\r\n                    >{getLabel(labels.saveDraft)}</Button>\r\n                    <Button\r\n                      type='primary'\r\n                      loading={isSaving}\r\n                      disabled\r\n                    >{getLabel(labels.publish)}</Button>\r\n                  </Space>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Row justify='center'>\r\n          <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n\r\n                <Form.Item\r\n                  name='idRegion'\r\n                  label={getLabel(labels.region)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectRegion),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().regions}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, o) => {\r\n                      if (o.catValor === 'CAT_REG_AND') {\r\n                        const entCultura = getCultures().filter(c => c.id === 'es_EC')[0].id\r\n                        formCourse.setFieldValue('entCultura', entCultura)\r\n                      }\r\n                      else if (o.catValor === 'CAT_REG_CAR') {\r\n                        const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                        formCourse.setFieldValue('entCultura', entCultura)\r\n                      } else {\r\n                        const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                        formCourse.setFieldValue('entCultura', entCultura)\r\n                      }\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entCultura'\r\n                  label={getLabel(labels.language)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectLanguage),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    disabled\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    fieldNames={{\r\n                      label: 'value',\r\n                      value: 'id'\r\n                    }}\r\n                    options={getCultures()}\r\n                    showSearch\r\n                    optionFilterProp=\"value\"\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idPais'\r\n                  label={getLabel(labels.country)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectCountry),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    name='idPais'\r\n                    mode='multiple'\r\n                    onChange={(_, option) => {\r\n                      setPaises(option)\r\n                    }}\r\n                  >\r\n                    {\r\n                      getCatalogos().paises.map(p => renderPaisValor(p))\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='idModalidad'\r\n                  label={getLabel(labels.modality)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectModality),\r\n                    },\r\n                  ]}\r\n                  style={{ width: '100%', textAlign: 'center' }}\r\n                >\r\n                  <Radio.Group buttonStyle='solid'>\r\n                    {\r\n                      getCatalogos().modalidades.map(m => renderModality(m))\r\n                    }\r\n                  </Radio.Group>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={[25, 25]}>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaIni'\r\n                  label={getLabel(labels.startDate)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectStartDate),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item\r\n                  name='entFechaFin'\r\n                  label={getLabel(labels.endDate)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectEndDate),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name={['courses']}\r\n                  label={getLabel(labels.courses)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.selectCourses),\r\n                    },\r\n                  ]}\r\n                >\r\n                  <Select\r\n                    style={{\r\n                      width: '100%',\r\n                      display: 'inline-block'\r\n                    }}\r\n                    mode='multiple'\r\n                    fieldNames={{\r\n                      label: 'catNombre',\r\n                      value: 'catId'\r\n                    }}\r\n                    options={getCatalogos().cursos}\r\n                    showSearch\r\n                    optionFilterProp=\"catNombre\"\r\n                    onChange={(_, option) => {\r\n                      setCourses(option)\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Row justify='center'>\r\n        <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n          <Row>\r\n            <Form\r\n              form={formPostulante}\r\n              layout='vertical'\r\n              style={{ width: '100%' }}\r\n              initialValues={{ postulant: '' }}\r\n              onFinish={addPostulant}\r\n            >\r\n              <Col span={24}>\r\n                <Form.Item\r\n                  name='postulant'\r\n                  label={getLabel(labels.applicantsEmails)}\r\n                  extra={getLabel(labels.pressEnterAddEmail)}\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: getLabel(labels.addApplicants),\r\n                    },\r\n                    {\r\n                      type: 'email',\r\n                      message: getLabel(labels.emailNotValid)\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    style={{ width: '100%' }}\r\n                  />\r\n                </Form.Item>\r\n                {\r\n                  message.message &&\r\n                  <Alert {...message} showIcon closable />\r\n                }\r\n              </Col>\r\n            </Form>\r\n            <Col span={24} style={{ paddingTop: '10px' }}>\r\n              <Row gutter={[15, 15]}>\r\n                {\r\n                  postulants && postulants.map(a => renderApplicants(a))\r\n                }\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Course","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image } from 'antd'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst Applicants = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList.filter(a => a.posEstado.catValor === 'EST_ENR'))\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        navigate.push('/training')\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;{getLabel(labels.applicants)}\r\n                                        </Col>\r\n                                        {/* <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <img\r\n                                                src={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png`}\r\n                                                srcSet={`https://flagcdn.com/32x24/${course.entPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${course.entPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                width=\"32\"\r\n                                                height=\"24\"\r\n                                                alt={course.entPais.catNombre}></img>\r\n                                        </Col> */}\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label={getLabel(labels.searchExpression)}\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>{getLabel(labels.search)}</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.name),\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.country),\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.attendance),\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.workPlan),\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.finalReport),\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.certificate),\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.actions),\r\n                                            dataIndex: '',\r\n                                            render: (_, record) => <div style={{ textAlign: 'center' }}>\r\n                                                <Button type='primary' href={`/#/applicants/${record.posId}/${id}`}>{getLabel(labels.view)}</Button>\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList.filter(p => p.posEstado.catValor === 'EST_ENR')}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Applicants","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { getAttendanceById, insertAttendance, updateAttendance } from '../utils/urls'\r\nexport class AttendanceService {\r\n    put = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).put(insertAttendance(), attendance)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).post(getAttendanceById(), attendance)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, attendance } = props\r\n        return AxiosInstance(navigate).patch(updateAttendance(), attendance)\r\n    }\r\n}\r\n\r\nexport default AttendanceService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadInformByName, getInformById, insertInform, sendEmailLoadInform, sendEmailRateInform, updateInform } from '../utils/urls'\r\n\r\nexport class InformService {\r\n    put = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).put(insertInform(), inform,\r\n            {\r\n                headers: { \"Content-Type\": \"multipart/form-data\" }\r\n            })\r\n    }\r\n    set = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(updateInform(), inform)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(getInformById(), inform)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).post(downloadInformByName(), inform)\r\n    }\r\n    sendEmailLoad = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailLoadInform(), inform)\r\n    }\r\n    sendEmailRate = (props) => {\r\n        const { navigate, inform } = props\r\n        return AxiosInstance(navigate).patch(sendEmailRateInform(), inform)\r\n    }\r\n}\r\n\r\nexport default InformService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Popconfirm, Descriptions, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCatalogos, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport AttendanceService from '../../service/AttendanceService'\r\nimport InformService from '../../service/InformService'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\nconst attendanceService = new AttendanceService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n  marginBottom: 20,\r\n  backgroundColor: '#fafafa',\r\n  border: 'none',\r\n  borderRadius: '15px'\r\n}\r\n\r\nconst Applicant = () => {\r\n\r\n  const navigate = useHistory()\r\n  const { id, idTraining } = useParams()\r\n  const [load, setLoad] = useState(true)\r\n  const [isLoading, setIsLoading] = useState(false)\r\n  const [postulant, setPostulante] = useState(null)\r\n  const [courses, setCourses] = useState(null)\r\n  const [attendanceValue, setAttendanceValue] = useState(0)\r\n  const [commentWorkplan, setCommentWorkplan] = useState('')\r\n  const [commentFinalReport, setCommentFinalReport] = useState('')\r\n  const [isSavingAttendance, setIsSavingAttendance] = useState(false)\r\n  const [isSavingInform, setIsSavingInform] = useState(false)\r\n  const [isSending, setIsSending] = useState(false)\r\n\r\n  const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n  const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n    <Row\r\n      key={infId}\r\n      className='mgeCard'\r\n      style={{\r\n        backgroundColor: '#f0f0f0',\r\n        padding: '10px 20px',\r\n        marginBottom: '10px',\r\n      }}>\r\n      <Descriptions\r\n        title={\r\n          <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n            <Col>\r\n              <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text\r\n                strong\r\n                style={{\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                {infNombre}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        }\r\n        size='small'\r\n        layout='vertical'\r\n        extra={\r\n          <>\r\n            <Button type='default'\r\n              onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n              loading={isDownloading}\r\n              disabled={isDownloading}\r\n            >\r\n              {getLabel(labels.download)}\r\n            </Button>\r\n          </>\r\n        }\r\n        column={\r\n          {\r\n            xs: 1,\r\n            sm: 2,\r\n            md: 4,\r\n            lg: 4,\r\n            xl: 6,\r\n            xxl: 6,\r\n          }\r\n        }\r\n      >\r\n\r\n        <Descriptions.Item label={\r\n          <Typography.Text type='secondary' strong>\r\n            {getLabel(labels.registrationDate)}\r\n          </Typography.Text>\r\n        }\r\n        >\r\n          {infFechaReg.substring(0, 10)}\r\n        </Descriptions.Item>\r\n\r\n        {\r\n          evidenciaList && evidenciaList.length > 0 ?\r\n            <>\r\n              <Descriptions.Item label={\r\n                <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n              }\r\n              >\r\n                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                  {\r\n                    evidenciaList[0].eviUrl.length > 15 ?\r\n                      `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                      : evidenciaList[0].eviUrl\r\n                  }\r\n                </a>\r\n              </Descriptions.Item>\r\n            </>\r\n            :\r\n            <>\r\n            </>\r\n        }\r\n\r\n        {\r\n          infFechaSAprRec &&\r\n          <Descriptions.Item label={\r\n            <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n          }\r\n          >\r\n            {infFechaSAprRec.substring(0, 10)}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n        {\r\n          infObservacion &&\r\n          <Descriptions.Item\r\n            style={{\r\n              whiteSpace: 'pre-wrap'\r\n            }}\r\n            label={\r\n              <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n            }\r\n          >\r\n            {infObservacion}\r\n          </Descriptions.Item>\r\n        }\r\n\r\n      </Descriptions>\r\n\r\n      {\r\n        infEstado.catValor === 'EST_INF_ENV' &&\r\n        <>\r\n          <Col span={24} style={{ padding: '10px 0' }}>\r\n            <Typography.Text>\r\n              {getLabel(labels.comments)}:\r\n            </Typography.Text>\r\n            {\r\n              infTipo.catValor === 'TYP_INF_WPL' ?\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentWorkplan}\r\n                  onChange={(e) => setCommentWorkplan(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n                :\r\n                <Input.TextArea\r\n                  disabled={\r\n                    isSavingInform\r\n                  }\r\n                  value={commentFinalReport}\r\n                  onChange={(e) => setCommentFinalReport(e.target.value)}\r\n                  showCount\r\n                  maxLength={1000}\r\n                />\r\n            }\r\n          </Col>\r\n          <Col span={24}>\r\n            <Row justify='end'\r\n              style={{ padding: '10px 0 0 0' }}\r\n              gutter={10}\r\n            >\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `${getLabel(labels.sureApproveThe)} ${infTipo.catValor === 'TYP_INF_WPL' ? getLabel(labels.workPlan) : infTipo.catValor === 'TYP_INF_FIR' ? getLabel(labels.finalReport) : ''}?`\r\n                  }\r\n                  okText={getLabel(labels.yesApprove)} cancelText={getLabel(labels.no)} onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_APR')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{\r\n                    loading: isSavingInform || isSending\r\n                  }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >{getLabel(labels.approve)}</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n              <Col>\r\n                <Popconfirm\r\n                  title={\r\n                    `${getLabel(labels.sureRejectThe)} ${infTipo.catValor === 'TYP_INF_WPL' ? getLabel(labels.workPlan) : infTipo.catValor === 'TYP_INF_FIR' ? getLabel(labels.finalReport) : ''}`\r\n                  }\r\n                  okText={getLabel(labels.yesReject)} cancelText={getLabel(labels.no)} onConfirm={\r\n                    () =>\r\n                      setInform(\r\n                        postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.infEstado.catValor === 'EST_INF_ENV')[0]\r\n                        , getCatalogos().reportStatus.filter(s => s.catValor === 'EST_INF_REC')[0]\r\n                      )\r\n                  }\r\n                  okButtonProps={{ loading: isSavingInform || isSending }}\r\n                  disabled={isSavingInform || isSending}\r\n                >\r\n                  <Button\r\n                    danger\r\n                    type='primary'\r\n                    loading={isSavingInform || isSending}\r\n                    disabled={isSavingInform || isSending}\r\n                  >{getLabel(labels.reject)}</Button>\r\n                </Popconfirm>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      }\r\n\r\n    </Row>\r\n\r\n  const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n    <Collapse.Panel\r\n      key={curId}\r\n      header={\r\n        <Row gutter={10}>\r\n          <Col>\r\n            {\r\n              postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                :\r\n                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n            }\r\n          </Col>\r\n          <Col>\r\n            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n              {\r\n                infTipo.catValor === 'TYP_INF_WPL' ? 'Workplan - ' : infTipo.catValor === 'TYP_INF_FIR' ? 'Final Report - ' : ''\r\n              }\r\n              {curNombre.catNombre}\r\n            </Typography.Text>\r\n          </Col>\r\n        </Row>\r\n      }\r\n      style={panelStyle}\r\n    >\r\n      {\r\n        postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n      }\r\n    </Collapse.Panel>\r\n\r\n  const renderCertificate = ({ cerEstado, cerFechaCad, cerFechaReg, cerId, cerNombre, cerRuta, idCurso, cerUuid }) =>\r\n    <div\r\n      key={cerId}\r\n      style={\r\n        {\r\n          backgroundColor: '#ffffff',\r\n          padding: '15px',\r\n          borderRadius: '15px',\r\n          marginBottom: '20px'\r\n        }\r\n      }>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n            </Col>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                {getLabel(labels.certificate)}&nbsp;-&nbsp;\r\n                {\r\n                  courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                }\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10}>\r\n            <Col>\r\n              <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                {getLabel(labels.expires)}: {cerFechaCad.substring(0, 10)}\r\n              </Typography.Text>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n          <Row gutter={10} justify='end'>\r\n            <Col>\r\n              <Button type='primary'\r\n                loading={isDownloading}\r\n                disabled={isDownloading}\r\n                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n              >{getLabel(labels.download)}</Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n\r\n  const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n    const metaData = getTypeContent(cerNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadCertificateByUuid(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        \"Accept-Language\": getCulture(),\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({ cerUuid }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, cerNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const setAttendance = async () => {\r\n    const attendance = {\r\n      \"idEntrenamiento\": idTraining,\r\n      \"idPostulante\": id,\r\n      \"asiAprobado\": (parseInt(attendanceValue) >= 80),\r\n      \"asiValor\": attendanceValue\r\n    }\r\n    setIsSavingAttendance(true)\r\n    try {\r\n      const { data } = await attendanceService.put({ navigate, attendance })\r\n      if (data) toast.success(getLabel(labels.attendanceSaved))\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsSavingAttendance(false)\r\n    }\r\n  }\r\n\r\n  const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n    const metaData = getTypeContent(infNombre)\r\n\r\n    var xhrOverride = new XMLHttpRequest();\r\n    xhrOverride.responseType = 'arraybuffer';\r\n\r\n    setIsDownloading(true)\r\n    $.ajax({\r\n      async: true,\r\n      crossDomain: true,\r\n      url: apiURLs.downloadInformByName(),\r\n      method: 'POST',\r\n      headers: {\r\n        Accept: \"*/*\",\r\n        Authorization: `Bearer ${getToken()}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      data: JSON.stringify({\r\n        infNombre,\r\n        infRutaPlan\r\n      }),\r\n      xhr: function () {\r\n        return xhrOverride;\r\n      }\r\n    }).then(function (response) {\r\n      setIsDownloading(false)\r\n      const blob = new Blob([response], { type: metaData })\r\n      saveAs(blob, infNombre)\r\n    }).catch(() => setIsDownloading(false));\r\n  }\r\n\r\n  const sendRateEmail = async ({ infId }) => {\r\n    setIsSending(true)\r\n    try {\r\n      const inform = { infId }\r\n      const { data } = await informService.sendEmailRate({ navigate, inform })\r\n      if (data) toast.success(getLabel(labels.emailSent))\r\n      setLoad(true)\r\n    } catch (_) {\r\n      toast.error(getLabel(labels.emailSendFailed))\r\n    } finally {\r\n      setIsSending(false)\r\n    }\r\n  }\r\n\r\n  const setInform = async ({ infId, infTipo, idCurso }, { catId }) => {\r\n    const { catValor } = infTipo\r\n    const inform = {\r\n      infId,\r\n      idEstado: catId,\r\n      infObservacion: catValor === 'TYP_INF_WPL' ? commentWorkplan : catValor === 'TYP_INF_FIR' ? commentFinalReport : ''\r\n    }\r\n    setIsSavingInform(true)\r\n    try {\r\n      const { data } = await informService.set({ navigate, inform })\r\n      const informe = data.listObject[0]\r\n      sendRateEmail({ ...informe, idCurso })\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsSavingInform(false)\r\n    }\r\n  }\r\n\r\n  const fetchData = async () => {\r\n    setLoad(false)\r\n    setIsLoading(true)\r\n    const training = { idEntrenamiento: idTraining, posId: id }\r\n    try {\r\n      const { data } = await postulantService.getByTraining({ navigate, training })\r\n      if (data) {\r\n        const courses = data.listObject[0].entId.cursoList\r\n        const postulant = data.listObject[0]\r\n        if (postulant.asistenciaList.length > 0) {\r\n          const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n          setAttendanceValue(attendanceValue)\r\n        }\r\n        setPostulante(postulant)\r\n        setCourses(courses)\r\n      } else {\r\n        toast.error(getLabel(labels.errorOcurred))\r\n      }\r\n    } catch (error) {\r\n      const { response } = error\r\n      toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (load)\r\n      fetchData()\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isLoading ?\r\n          <Row style={{ padding: '30px 10px' }}>\r\n            <Col span={24} style={{ textAlign: 'center' }}>\r\n              <Spin size='large' tip={\r\n                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                  {getLabel(labels.loading)}...\r\n                </Typography.Paragraph>\r\n              } />\r\n            </Col>\r\n          </Row>\r\n          :\r\n          postulant && <>\r\n            <div className=\"grid\">\r\n              <div className=\"col-12\">\r\n                <div className=\"mgeCard\">\r\n                  <div className=\"grid\">\r\n                    <div className=\"col-8\">\r\n                      <Space direction='horizontal'>\r\n                        <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                          onClick={() => {\r\n                            navigate.push(`/training/${idTraining}`)\r\n                          }}\r\n                        ></Button>\r\n                        <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                          {\r\n                            `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                          }\r\n                        </h3>\r\n                      </Space>\r\n                    </div>\r\n                    <div className=\"col-4\" style={{ textAlign: 'right' }}>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <Tabs centered items={[\r\n              {\r\n                key: 1,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.information)}</Typography.Text>,\r\n                children: <>\r\n                  <Row gutter={[25, 25]} justify='center'>\r\n                    <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                      <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                        <Col span={24}>\r\n                          {\r\n                            postulant.usuId.imagen ?\r\n                              <Image src={\r\n                                `/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                              } width={128} height={128} />\r\n                              :\r\n                              <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                          }\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              {getLabel(labels.profile)}:\r\n                            </Typography.Text>\r\n                            <br />{getLabel(labels.applicant)}\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                        <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                          <Typography.Paragraph>\r\n                            <Typography.Text strong>\r\n                              {getLabel(labels.invitedBy)}:\r\n                            </Typography.Text>\r\n                            <br />\r\n                            {\r\n                              postulant.posInvitadoPor ?\r\n                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                : <></>\r\n                            }\r\n                          </Typography.Paragraph>\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                      <Form\r\n                        initialValues={\r\n                          { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                        }\r\n                        layout='vertical'\r\n                      >\r\n                        <Row gutter={[25, 5]}>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='nombres'\r\n                              label={getLabel(labels.firstName)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='apellidos'\r\n                              label={getLabel(labels.lastName)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['sexo', 'catNombre']}\r\n                              label={getLabel(labels.sex)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='fechanac'\r\n                              label={getLabel(labels.dateBirth)}\r\n                            >\r\n                              {/* <DatePicker style={{ width: '100%' }} /> */}\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['pais', 'catNombre']}\r\n                              label={getLabel(labels.country)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name={['ciudad']}\r\n                              label={getLabel(labels.city)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='codigotel'\r\n                              label={getLabel(labels.countryCode)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='celular'\r\n                              label={getLabel(labels.phoneNumber)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='documento'\r\n                              label={getLabel(labels.idNumber)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='lugartrabajo'\r\n                              label={getLabel(labels.currentyWorking)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email'\r\n                              label={getLabel(labels.email)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                          <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                            <Form.Item\r\n                              name='email2'\r\n                              label={getLabel(labels.additionalEmail)}\r\n                            >\r\n                              <Input readOnly />\r\n                            </Form.Item>\r\n                          </Col>\r\n                        </Row>\r\n                      </Form>\r\n                    </Col>\r\n                  </Row>\r\n                </>\r\n              }, {\r\n                key: 2,\r\n                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.progress)}</Typography.Text>,\r\n                children: <>\r\n                  <div style={\r\n                    {\r\n                      backgroundColor: '#ffffff',\r\n                      padding: '15px',\r\n                      borderRadius: '15px',\r\n                      marginBottom: '20px'\r\n                    }\r\n                  }>\r\n                    <Row>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10}>\r\n                          <Col>\r\n                            <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                          </Col>\r\n                          <Col>\r\n                            <Typography.Title level={5}>\r\n                              {getLabel(labels.attendance)}\r\n                            </Typography.Title>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                      <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                        <Row gutter={10} justify='end'>\r\n                          <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                              <InputNumber\r\n                                defaultValue={0}\r\n                                value={attendanceValue}\r\n                                min={0}\r\n                                max={100}\r\n                                formatter={(value) => `${value}%`}\r\n                                parser={(value) => value.replace('%', '')}\r\n                                onChange={(e) => setAttendanceValue(e)} />\r\n                              <Button type='primary'\r\n                                onClick={() => {\r\n                                  setAttendance()\r\n                                }}\r\n                                loading={isSavingAttendance}\r\n                                disabled={isSavingAttendance}\r\n                              >{getLabel(labels.save)}</Button>\r\n                            </Space>\r\n                          </Col>\r\n                        </Row>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row>\r\n                    <Col span={24}>\r\n                      <Collapse\r\n                        accordion\r\n                        bordered={false}\r\n                        expandIconPosition='end'\r\n                        style={{\r\n                          backgroundColor: 'transparent'\r\n                        }}\r\n                      >\r\n                        {\r\n                          courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                        }\r\n                      </Collapse>\r\n                    </Col>\r\n                  </Row>\r\n                  {\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                      {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                          w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                        &&\r\n                        <>\r\n                          {\r\n                            postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                          }\r\n                        </>\r\n                      }\r\n                    </>\r\n                  }\r\n                </>\r\n              }]\r\n            }>\r\n            </Tabs>\r\n          </>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Applicant","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Descriptions, Collapse, Form, Input } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst WorkPlan = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedWorkplan, setSelectedWorkplan] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadWorkplanTemplate = () => {\r\n        const fileName = 'WorkplanTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadWorkplan(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderWorkplan = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, idCurso }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={14} sm={18} md={18} lg={18} xl={18} xxl={18}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={10} sm={6} md={6} lg={6} xl={6} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    {getLabel(labels.download)}\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={\r\n                                        (e) => setSelectedWorkplan(\r\n                                            selectedWorkplan.filter(i => i === infId).length > 0 ?\r\n                                                selectedWorkplan.filter(i => i !== infId)\r\n                                                :\r\n                                                [...selectedWorkplan, infId]\r\n                                        )\r\n                                    }\r\n                                    icon={\r\n                                        selectedWorkplan.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedWorkplan.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>{getLabel(labels.registrationDate)}</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <>\r\n                                <Descriptions.Item label={\r\n                                    <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n                                }\r\n                                >\r\n                                    <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                        {evidenciaList[0].eviUrl}\r\n                                    </a>\r\n                                </Descriptions.Item>\r\n                            </>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length > 0 ?\r\n                            <Image src={`./../../assets/${postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                            :\r\n                            <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).map(w => renderWorkplan(w))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length < 1\r\n                            ||\r\n                            (\r\n                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId)[postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            {getLabel(labels.uploadYourWorkplan)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={getLabel(labels.file)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >{getLabel(labels.selectFile)}</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type=\"primary\"\r\n                                            htmlType='submit'\r\n                                            loading={uploading || sending}\r\n                                            style={{\r\n                                                marginTop: 16,\r\n                                            }}\r\n                                        >\r\n                                            {uploading ? getLabel(labels.uploading) : sending ? getLabel(labels.sending) : getLabel(labels.send)}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ infId }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success(getLabel(labels.emailSentSuccessfully))\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.emailSendFailed))\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_WPL')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success(getLabel(labels.uploadSuccessfully))\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.uploadFailed))\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedWorkplan(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            {getLabel(labels.workplanTemplate)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadWorkplanTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                {getLabel(labels.download)}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            <Collapse\r\n                                accordion\r\n                                bordered={false}\r\n                                expandIconPosition='end'\r\n                                style={{\r\n                                    backgroundColor: 'transparent'\r\n                                }}\r\n                            >\r\n                                {\r\n                                    postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                }\r\n                            </Collapse>\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkPlan","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { insertEvidence } from '../utils/urls'\r\n\r\nexport class EvidenceService {\r\n    put = (props) => {\r\n        const { navigate, evidence } = props\r\n        return AxiosInstance(navigate).put(insertEvidence(), evidence)\r\n    }\r\n}\r\n\r\nexport default EvidenceService","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Space, Upload, Spin, Image, Form, Input, Descriptions, Collapse, Result } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { getCatalogos, getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport InformService from './../../service/InformService'\r\nimport EvidenceService from '../../service/EvidenceService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst postulantService = new PostulantService()\r\nconst informService = new InformService()\r\nconst evidenceService = new EvidenceService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst FinalReport = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const [uploading, setUploading] = useState(false)\r\n    const [sending, setSending] = useState(false)\r\n    const [selectedFinalReport, setSelectedFinalReport] = useState([])\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const downloadFinalReportTemplate = () => {\r\n        const fileName = 'FinalReportTemplate.docx'\r\n        const metaData = getTypeContent(fileName)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadFinalReport(),\r\n            method: 'GET',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`\r\n            },\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, fileName)\r\n        });\r\n    }\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        });\r\n    }\r\n\r\n    const renderFinalReport = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList }) =>\r\n        <div\r\n            key={infId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Title level={5}>\r\n                                {infNombre}\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col style={{ textAlign: 'end' }}>\r\n                            <Space>\r\n                                <Button type='default'\r\n                                    onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                                    loading={isDownloading}\r\n                                    disabled={isDownloading}\r\n                                >\r\n                                    {getLabel(labels.download)}\r\n                                </Button>\r\n                                <Button type='text'\r\n                                    onClick={(e) => setSelectedFinalReport(\r\n                                        selectedFinalReport.filter(i => i === infId).length > 0 ?\r\n                                            selectedFinalReport.filter(i => i !== infId)\r\n                                            :\r\n                                            [...selectedFinalReport, infId]\r\n                                    )}\r\n                                    icon={\r\n                                        selectedFinalReport.filter(i => i === infId).length < 1 ? <anticons.ArrowDownOutlined /> : <anticons.ArrowUpOutlined />\r\n                                    }\r\n                                />\r\n                            </Space>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                selectedFinalReport.filter(i => i === infId).length > 0\r\n                &&\r\n                <Descriptions\r\n                    size='small'\r\n                    layout='vertical'\r\n                    column={\r\n                        {\r\n                            xs: 1,\r\n                            sm: 2,\r\n                            md: 4,\r\n                            lg: 4,\r\n                            xl: 6,\r\n                            xxl: 6,\r\n                        }\r\n                    }\r\n                >\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>{getLabel(labels.registrationDate)}</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaReg.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n\r\n                    {\r\n                        evidenciaList && evidenciaList.length > 0 ?\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                            :\r\n                            <>\r\n                            </>\r\n                    }\r\n\r\n                    {\r\n                        infFechaSAprRec &&\r\n                        <Descriptions.Item label={\r\n                            <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n                        }\r\n                        >\r\n                            {infFechaSAprRec.substring(0, 10)}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                    {\r\n                        infObservacion &&\r\n                        <Descriptions.Item\r\n                            style={{\r\n                                whiteSpace: 'pre-wrap'\r\n                            }}\r\n                            label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n                            }\r\n                        >\r\n                            {infObservacion}\r\n                        </Descriptions.Item>\r\n                    }\r\n\r\n                </Descriptions>\r\n            }\r\n        </div>\r\n\r\n    const renderCourse = ({ curId, curNombre }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).map(f => renderFinalReport(f))\r\n            }\r\n            {\r\n                postulant && postulant.informeList && <>\r\n                    {\r\n                        postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.idCurso === curId &&\r\n                            w.infEstado.catValor === 'EST_INF_APR'\r\n                        ).length > 0\r\n                            &&\r\n                            (\r\n                                postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length < 1\r\n                                ||\r\n                                (\r\n                                    postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId)[postulant.informeList.filter(f => f.infTipo.catValor === 'TYP_INF_FIR' && f.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC'\r\n                                )\r\n                            )\r\n                            ?\r\n                            <Form\r\n                                onFinish={handleUpload}\r\n                                initialValues={\r\n                                    { curId }\r\n                                }\r\n                                autoComplete='off'\r\n                                layout='vertical'\r\n                            >\r\n                                <Row>\r\n                                    <Col span={24}>\r\n                                        <Typography.Title level={5}>\r\n                                            Upload your final report\r\n                                            {getLabel(labels.uploadFinalReport)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            style={{ display: 'none' }}\r\n                                            name='curId'>\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item\r\n                                            name='file'\r\n                                            label={getLabel(labels.file)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true\r\n                                                }\r\n                                            ]}\r\n                                        >\r\n                                            <Upload\r\n                                                multiple={false}\r\n                                                {...props}\r\n                                            >\r\n                                                <Button\r\n                                                    icon={<anticons.UploadOutlined />}\r\n                                                    disabled={\r\n                                                        fileList.length > 0\r\n                                                    }\r\n                                                >{getLabel(labels.selectFile)}</Button>\r\n                                            </Upload>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                        <Typography.Title level={5}>{getLabel(labels.copyEvidenceLink)}</Typography.Title>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Form.Item\r\n                                            name='url'\r\n                                            label={getLabel(labels.url)}\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                },\r\n                                                {\r\n                                                    type: 'url',\r\n                                                },\r\n                                                {\r\n                                                    type: 'string',\r\n                                                    min: 6,\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={24}>\r\n                                        <Button\r\n                                            type='primary'\r\n                                            htmlType='submit'\r\n                                            loading={uploading || isLoading || sending}\r\n                                        >\r\n                                            {uploading ? getLabel(labels.uploading) : isLoading ? getLabel(labels.saving) : sending ? getLabel(labels.sending) : getLabel(labels.send)}\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                            : <>\r\n                            </>\r\n                    }\r\n                </>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const sendLoadEmail = async ({ idInforme }) => {\r\n        setSending(true)\r\n        try {\r\n            const inform = { infId: idInforme }\r\n            const { data } = await informService.sendEmailLoad({ navigate, inform })\r\n            if (data) toast.success(getLabel(labels.emailSentSuccessfully))\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.emailSendFailed))\r\n        } finally {\r\n            setSending(false)\r\n        }\r\n    }\r\n\r\n    const sendFinalReport = async (values) => {\r\n        const { url, infId } = values\r\n        const evidence = {\r\n            idInforme: infId,\r\n            eviUrl: url\r\n        }\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await evidenceService.put({ navigate, evidence })\r\n            const informe = data.listObject[0]\r\n            sendLoadEmail(informe)\r\n            toast.success(getLabel(labels.evidenceSendedSuccessfully))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const handleUpload = async (values) => {\r\n        const { file, curId } = values\r\n        const inform = new FormData();\r\n        inform.append('file', file.file)\r\n        inform.append('idTipo', getCatalogos().reportType.filter(t => t.catValor === 'TYP_INF_FIR')[0].catId)\r\n        inform.append('idCurso', curId)\r\n        inform.append('idPostulante', postulant.posId)\r\n        setUploading(true)\r\n        try {\r\n            const { data } = await informService.put({ navigate, inform })\r\n            const informInserted = data.listObject[0]\r\n            const { infId } = informInserted\r\n            const newInform = { ...values, infId }\r\n            sendFinalReport(newInform)\r\n            toast.success(getLabel(labels.uploadSuccessfully))\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.uploadFailed))\r\n        } finally {\r\n            setUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n            setSelectedFinalReport(training.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR').map(i => i.infId))\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(training.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            {getLabel(labels.finalReportTemplate)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={24} sm={24} md={12} lg={12} xl={12} xxl={12}>\r\n                                <Row justify='end'>\r\n                                    <Space direction='horizontal'>\r\n                                        <Col>\r\n                                            <Button type='default'\r\n                                                style={\r\n                                                    {\r\n                                                        borderColor: '#70B450',\r\n                                                        borderWidth: '2px',\r\n                                                        color: '#70B450',\r\n                                                        height: '35px'\r\n                                                    }\r\n                                                }\r\n                                                onClick={() => downloadFinalReportTemplate()}\r\n                                                loading={isDownloading}\r\n                                                disabled={isDownloading}\r\n                                            >\r\n                                                {getLabel(labels.download)}\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Space>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n                {\r\n                    isLoading ?\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                postulant && postulant.beneficiarioList && postulant.beneficiarioList.length >= (postulant.entId.entLimBen || 1) ?\r\n                                    <Collapse\r\n                                        accordion\r\n                                        bordered={false}\r\n                                        expandIconPosition='end'\r\n                                        style={{\r\n                                            backgroundColor: 'transparent'\r\n                                        }}\r\n                                    >\r\n                                        {\r\n                                            postulant.entId && postulant.entId.cursoList && postulant.entId.cursoList.map(c => renderCourse(c))\r\n                                        }\r\n                                    </Collapse>\r\n                                    :\r\n                                    <Result\r\n                                        title={`${getLabel(labels.thereMustLeast)} ${postulant.entId && (postulant.entId.entLimBen || 1)} ${getLabel(labels.registeredBeneficiariesUploadFinalReport)}.`}\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/beneficiaries/registry')\r\n                                                }}\r\n                                            >{getLabel(labels.registerBeneficiaries)}</Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </Col>\r\n                }\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FinalReport","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography, Button, Spin, Image, Result } from 'antd'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport { getDatosUsuario, getToken, getTypeContent } from '../../utils/Utils'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst postulantService = new PostulantService()\r\n\r\nconst Certificate = () => {\r\n\r\n    const navigate = useHistory()\r\n    const [postulant, setPostulant] = useState({})\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByUuid(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({ cerUuid }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerId, cerNombre, idCurso, cerUuid }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.certificate)}&nbsp;-&nbsp;\r\n                                {\r\n                                    postulant && postulant.entId.cursoList.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.expires)}: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n                            >{getLabel(labels.download)}</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && postulant.informeList && postulant.certificadoList &&\r\n                    <>\r\n                        {\r\n                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0\r\n                                &&\r\n                                postulant.certificadoList.length > 0\r\n                                ?\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                <Result\r\n                                    title={getLabel(labels.seeYourCertificateFinalReportBeneficiary)}\r\n                                    extra={\r\n                                        <Button type=\"primary\" key=\"console\"\r\n                                            onClick={\r\n                                                () => {\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                        navigate.push('/finalreport') : navigate.push('/beneficiaries/qualification')\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                                    getLabel(labels.sendFinalReport) : getLabel(labels.sendListBeneficiaries)\r\n                                            }\r\n                                        </Button>\r\n                                    }\r\n                                />\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Certificate","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Row, Col, Typography } from 'antd'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { getDatosUsuario } from '../../utils/Utils'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nconst postulantService = new PostulantService()\r\n\r\nconst Classes = () => {\r\n    const navigate = useHistory()\r\n    const [load, setLoad] = useState(true)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        try {\r\n            const { data } = await postulantService.getTraining({ navigate, postulant: { idUsuario: getDatosUsuario().usuarioId } })\r\n            const postulant = data.listObject[0]\r\n            localStorage.setItem(\r\n                'mgeInformList',\r\n                JSON.stringify(postulant.informeList)\r\n            )\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div style={\r\n                        {\r\n                            backgroundColor: '#ffffff',\r\n                            padding: '15px 20px 6px 20px',\r\n                            borderRadius: '15px',\r\n                            marginBottom: '20px'\r\n                        }\r\n                    }>\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Typography.Title level={3} type='secondary'>\r\n                                            {getLabel(labels.trainings)}\r\n                                        </Typography.Title>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Classes","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Row, Col, Form, Input, Select, Tag, Button, DatePicker, Space, Radio, Spin, Typography, Popconfirm, Image, Alert, Tooltip } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\nimport { getCatalogos, getCultures, getDatosUsuario, getFormatoFecha } from '../../utils/Utils'\r\n\r\nimport toast from 'react-hot-toast'\r\nimport dayjs from 'dayjs'\r\nimport moment from 'moment'\r\n\r\nimport AlertWait from '../../pages/AlertWait'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport CountryTrainingService from '../../service/CountryTrainingService'\r\nimport CourseService from '../../service/CourseService'\r\nimport PostulantService from '../../service/PostulantService'\r\n\r\nconst trainingService = new TrainingService()\r\nconst countryTrainingService = new CountryTrainingService()\r\nconst courseService = new CourseService()\r\nconst postulantService = new PostulantService()\r\n\r\nconst Training = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [formPostulante] = Form.useForm()\r\n    const [load, setLoad] = useState(true)\r\n    const [loadPostulant, setLoadPostulant] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingCountry, setIsLoadingCountry] = useState(false)\r\n    const [isLoadingCourse, setIsLoadingCourse] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isPublishing, setIsPublishing] = useState(false)\r\n    const [isSendingEmail, setIsSendingEmail] = useState(false)\r\n    const [training, setTraining] = useState(null)\r\n    const [postulants, setPostulants] = useState([])\r\n    const [paises, setPaises] = useState([])\r\n    const [courses, setCourses] = useState([])\r\n    const [selectedModality, setSelectedModality] = useState(0)\r\n    const [message, setMessage] = useState({ type: 'warning', message: null })\r\n\r\n    const [startDate, setStartDate] = useState(null)\r\n    const [endDate, setEndDate] = useState(null)\r\n\r\n    const [formCourse] = Form.useForm()\r\n\r\n    const disabledDateStart = (current) => {\r\n        if (endDate === null) return\r\n        return current && current >= endDate.startOf('day');\r\n    }\r\n\r\n    const disabledDateEnd = (current) => {\r\n        if (startDate === null) return\r\n        return current && current <= startDate.endOf('day');\r\n    }\r\n\r\n    const renderModality = ({ catId, catNombre, catValor }) =>\r\n        <Radio.Button\r\n            key={catId}\r\n            value={catId}\r\n            style={{\r\n                height: '100%',\r\n                margin: '0 20px 20px 0',\r\n            }}\r\n            onChange={e => setSelectedModality(catId)}\r\n        >\r\n            <Row>\r\n                <Col style={{\r\n                    padding: '20px 20px',\r\n                    borderRadius: '15px',\r\n                }}>\r\n                    <Image preview={false} src={`./../../assets/${catValor}${catId === selectedModality ? '_W' : ''}.png`} width={55} height={50} />\r\n                </Col>\r\n                <Col style={{\r\n                    padding: '30px 10px',\r\n                    width: '100px'\r\n                }}>\r\n                    {catNombre}\r\n                </Col>\r\n            </Row>\r\n        </Radio.Button>\r\n\r\n    const renderApplicants = ({ posId, posEmail, posEnvio, posEstado }) =>\r\n        <Col key={posEmail}>\r\n            <Tag key={posEmail} closeIcon={<anticons.CloseOutlined />} onClose={(e) => { delPostulant({ posId, posEmail }) }}\r\n                closable\r\n                style={{\r\n                    padding: '5px 15px',\r\n                    borderRadius: '15px',\r\n                    fontSize: '1em'\r\n                }}\r\n            >\r\n                {\r\n                    posEstado.catValor === 'EST_ENR' ?\r\n                        <>\r\n                            <i className=\"fa-solid fa-circle-check\"></i>&nbsp;\r\n                        </>\r\n                        :\r\n                        posEstado.catValor === 'EST_INV' || training.entEstado.catValor === 'ACTIVE' ?\r\n                            <>\r\n                                <Tooltip title={getLabel(labels.sendInvitationEmail)}>\r\n                                    <i\r\n                                        className=\"fa-solid fa-paper-plane\"\r\n                                        style={{\r\n                                            cursor: 'pointer'\r\n                                        }}\r\n                                        onClick={(() => sendEmail({ posId }))}\r\n                                    ></i>\r\n                                </Tooltip>&nbsp;\r\n                            </>\r\n                            :\r\n                            <></>\r\n                }\r\n                {posEmail}\r\n            </Tag>\r\n        </Col>\r\n\r\n    const setCountry = async (country) => {\r\n        setIsSaving(true)\r\n        const countryTraining = { ...country, idEntrenamiento: training.entId }\r\n        if (countryTraining.checked) {\r\n            try {\r\n                const { data } = await countryTrainingService.put({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await countryTrainingService.del({ navigate, countryTraining })\r\n                if (data) {\r\n                    fetchCountries()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setCourse = async (course) => {\r\n        setIsSaving(true)\r\n        const newCourse = { ...course, idEntrenamiento: training.entId }\r\n        if (course.checked) {\r\n            try {\r\n                const { data } = await courseService.put({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        } else {\r\n            try {\r\n                const { data } = await courseService.del({ navigate, course: newCourse })\r\n                if (data) {\r\n                    fetchCourses()\r\n                } else {\r\n                    toast.error(getLabel(labels.errorOcurred))\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setIsSaving(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setPostulant = async (values) => {\r\n        const { posEmail } = values\r\n        formPostulante.resetFields()\r\n        if (postulants.filter(p => p.posEmail === posEmail).length > 0) {\r\n            setMessage({\r\n                type: 'warning',\r\n                message: `${getLabel(labels.thenEmail)} ${posEmail} ${getLabel(labels.alreadyExists)}`\r\n            })\r\n            setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n            return\r\n        }\r\n\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.put({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `${getLabel(labels.email)} ${posEmail} ${getLabel(labels.successfullySaved)}`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants()\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const delPostulant = async (values) => {\r\n        setIsSaving(true)\r\n        const postulant = { ...values, idEntrenamiento: training.entId, idInvitadoPor: getDatosUsuario().usuarioId }\r\n        try {\r\n            const { data } = await postulantService.del({ navigate, postulant })\r\n            if (data) {\r\n                setMessage({\r\n                    type: 'success',\r\n                    message: `${getLabel(labels.email)} ${postulant.posEmail} ${getLabel(labels.successfullyDeleted)}`\r\n                })\r\n                setTimeout(() => setMessage({ type: 'warning', message: null }), 5000)\r\n                fetchPostulants()\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const training = data.listObject[0]\r\n                setTraining({\r\n                    ...training,\r\n                    countries: training.countryTrainingList.map(c => c.paePais.catId),\r\n                    courses: training.cursoList.map(c => c.curNombre.catId),\r\n                    entFechaIni: moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d),\r\n                    entFechaFin: moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d)\r\n                })\r\n                setStartDate(moment(dayjs(training.entFechaIni.substring(0, 10), getFormatoFecha()).$d))\r\n                setEndDate(moment(dayjs(training.entFechaFin.substring(0, 10), getFormatoFecha()).$d))\r\n                setSelectedModality(training.entModalidad.catId)\r\n                setPaises(training.countryTrainingList)\r\n                setCourses(training.cursoList)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCountries = async () => {\r\n        setIsLoadingCountry(true)\r\n        const countryTraining = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await countryTrainingService.getByTraining({ navigate, countryTraining })\r\n            if (data) {\r\n                const countries = data.listObject\r\n                setPaises(countries)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingCountry(false)\r\n        }\r\n    }\r\n\r\n    const fetchCourses = async () => {\r\n        setIsLoadingCourse(true)\r\n        const training = { idEntrenamiento: id }\r\n        try {\r\n            const { data } = await courseService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingCourse(false)\r\n        }\r\n    }\r\n\r\n    const fetchPostulants = async () => {\r\n        setLoadPostulant(false)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                const postulants = data.listObject[0].postulanteList\r\n                setPostulants(postulants)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    const save = async (values) => {\r\n        const training = {\r\n            idRegion: values.entRegion.catId,\r\n            entId: values.entId,\r\n            entCultura: values.entCultura,\r\n            entFechaFin: values.entFechaFin\r\n        }\r\n        setIsSaving(true)\r\n        try {\r\n            const { data } = await trainingService.set({ navigate, training })\r\n            if (data) {\r\n                toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.successfullyUpdated)}`)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendEmail = async (postulant) => {\r\n        setIsSendingEmail(true)\r\n        try {\r\n            const { data } = await postulantService.sendEmail({ navigate, postulant })\r\n            if (data === false)\r\n                toast.error(getLabel(labels.couldNotSendEmail), { position: 'bottom-center' })\r\n            else\r\n                toast.success(getLabel(labels.emailSentSuccessfully), { position: 'bottom-center' })\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred), { position: 'bottom-center' })\r\n        } finally {\r\n            setIsSendingEmail(false)\r\n        }\r\n    }\r\n\r\n    const pub = async () => {\r\n        if (paises.length < 1 || courses.length < 1 || postulants.length < 1) {\r\n            toast.error(getLabel(labels.addCountryCourseApplicant))\r\n            return;\r\n        }\r\n        const modTraining = {\r\n            entId: training.entId,\r\n            entCultura: training.entCultura,\r\n            idEstado: getCatalogos().trainingStatus.filter(s => s.catValor === 'ACTIVE')[0].catId\r\n        }\r\n        setIsPublishing(true)\r\n        try {\r\n            const { data } = await trainingService.pub({ navigate, training: { ...modTraining } })\r\n            if (data) {\r\n                // Notificar postulantes\r\n                if (postulants.length > 0) {\r\n                    const envios = postulants.map(p => async function () {\r\n                        return postulantService.sendEmail({ navigate, postulant: { posId: p.posId } })\r\n                    })\r\n                    setIsSendingEmail(true)\r\n                    envios\r\n                        .reduce((promise, fn) =>\r\n                            promise.then(fn)\r\n                                .then(r => {\r\n                                    const { data } = r\r\n                                    if (data === false)\r\n                                        toast.error(getLabel(labels.couldNotSendEmail))\r\n                                    else\r\n                                        toast.success(getLabel(labels.emailSentSuccessfully))\r\n                                })\r\n                                .catch(({ response }) => {\r\n                                    toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n                                })\r\n                            , Promise.resolve())\r\n                        .then(_ => {\r\n                            setIsSendingEmail(false)\r\n                            toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.publishSuccesfully)}`)\r\n                            navigate.push('/training')\r\n                        })\r\n                } else {\r\n                    toast.success(`${getLabel(labels.training)} ${data.listObject[0].entNombre} ${getLabel(labels.publishSuccesfully)}`)\r\n                    navigate.push('/training')\r\n                }\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsPublishing(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n        if (loadPostulant) {\r\n            fetchPostulants()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    training && <>\r\n                        <Form\r\n                            form={formCourse}\r\n                            layout='vertical'\r\n                            initialValues={\r\n                                training\r\n                            }\r\n                            onFinish={save}\r\n                            disabled={isSaving || isPublishing || isSendingEmail}\r\n                        >\r\n                            <div className=\"grid\">\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"mgeCard\">\r\n                                        <div className=\"grid\">\r\n                                            <div className=\"col-4\">\r\n                                                <Space direction='horizontal'>\r\n                                                    <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/training')\r\n                                                        }}\r\n                                                    ></Button>\r\n                                                    <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                        {getLabel(labels.edit)} {getLabel(labels.training)}\r\n                                                    </h3>\r\n                                                </Space>\r\n                                            </div>\r\n                                            <div className=\"col-8\" style={{ textAlign: 'right' }}>\r\n                                                <Space>\r\n                                                    <Button\r\n                                                        type='default'\r\n                                                        htmlType='submit'\r\n                                                        loading={isSaving}\r\n                                                        disabled={isSaving || training.entEstado.catValor === 'ACTIVE'}\r\n                                                    >{getLabel(labels.saveDraft)}</Button>\r\n                                                    <Popconfirm title={getLabel(labels.surePublishTraining)} okText={getLabel(labels.yesPublish)} cancelText={getLabel(labels.no)} onConfirm={() => pub()}\r\n                                                        okButtonProps={{\r\n                                                            loading: isPublishing || isSendingEmail,\r\n                                                        }}\r\n                                                    >\r\n                                                        <Button\r\n                                                            type='primary'\r\n                                                            loading={isPublishing || isSendingEmail}\r\n                                                            disabled={(isPublishing || isSendingEmail) || training.entEstado.catValor === 'ACTIVE'}\r\n                                                        >{getLabel(labels.publish)}</Button>\r\n                                                    </Popconfirm>\r\n                                                </Space>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <Row justify='center'>\r\n                                <Col span={24} style={{ display: 'none' }}>\r\n                                    <Form.Item\r\n                                        name='entId'\r\n                                        label={getLabel(labels.idTraining)}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.completeID),\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name={['entRegion', 'catId']}\r\n                                                label={getLabel(labels.region)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectRegion),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    showSearch\r\n                                                    options={getCatalogos().regions}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                    onChange={(_, o) => {\r\n                                                        if (o.catValor === 'CAT_REG_AND') {\r\n                                                            const entCultura = getCultures().filter(c => c.id === 'es_EC')[0].id\r\n                                                            formCourse.setFieldValue('entCultura', entCultura)\r\n                                                        }\r\n                                                        else if (o.catValor === 'CAT_REG_CAR') {\r\n                                                            const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                                                            formCourse.setFieldValue('entCultura', entCultura)\r\n                                                        } else {\r\n                                                            const entCultura = getCultures().filter(c => c.id === 'en_US')[0].id\r\n                                                            formCourse.setFieldValue('entCultura', entCultura)\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                            <Form.Item\r\n                                                name='entCultura'\r\n                                                label={getLabel(labels.language)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectLanguage),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled\r\n                                                    style={{\r\n                                                        width: '100%',\r\n                                                        display: 'inline-block'\r\n                                                    }}\r\n                                                    fieldNames={{\r\n                                                        label: 'value',\r\n                                                        value: 'id'\r\n                                                    }}\r\n                                                    options={getCultures()}\r\n                                                    showSearch\r\n                                                    optionFilterProp=\"value\"\r\n                                                />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='countries'\r\n                                                label={getLabel(labels.country)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectCountry),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled={isLoadingCountry}\r\n                                                    mode='multiple'\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={\r\n                                                        getCatalogos().paises.map(p => {\r\n                                                            const { catNombre, catDescripcion } = p\r\n                                                            const flag = catDescripcion.toLowerCase()\r\n                                                            return (\r\n                                                                {\r\n                                                                    ...p,\r\n                                                                    catNombre: <>\r\n                                                                        <img\r\n                                                                            src={`https://flagcdn.com/24x18/${flag}.png`}\r\n                                                                            srcSet={`https://flagcdn.com/48x36/${flag}.png 2x,https://flagcdn.com/72x54/${flag}.png 3x`}\r\n                                                                            width=\"24\"\r\n                                                                            height=\"18\"\r\n                                                                            alt={catNombre} />&nbsp;\r\n                                                                        {catNombre}\r\n                                                                    </>\r\n                                                                }\r\n                                                            )\r\n                                                        }\r\n                                                        )\r\n                                                    }\r\n                                                    onSelect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: true,\r\n                                                            idPais: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCountry({\r\n                                                            checked: false,\r\n                                                            paeId: paises.filter(c => c.paePais.catId === option.catId).length > 0 ? paises.filter(c => c.paePais.catId === option.catId)[0].paeId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='entNombre'\r\n                                                label={getLabel(labels.trainingName)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.completeTrainingName),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Input disabled />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['entModalidad', 'catId']}\r\n                                                label={getLabel(labels.modality)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectModality),\r\n                                                    },\r\n                                                ]}\r\n                                                style={{ width: '100%', textAlign: 'center' }}\r\n                                            >\r\n                                                <Radio.Group buttonStyle='solid'\r\n                                                >\r\n                                                    {\r\n                                                        getCatalogos().modalidades.map(m => renderModality(m))\r\n                                                    }\r\n                                                </Radio.Group>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaIni'\r\n                                                label={getLabel(labels.startDate)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectStartDate),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setStartDate} disabledDate={disabledDateStart} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                        <Col span={12}>\r\n                                            <Form.Item\r\n                                                name='entFechaFin'\r\n                                                label={getLabel(labels.endDate)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectEndDate),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <DatePicker style={{ width: '100%' }} onChange={setEndDate} disabledDate={disabledDateEnd} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row gutter={[25, 25]}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name='courses'\r\n                                                label={getLabel(labels.courses)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.selectCourses),\r\n                                                    },\r\n                                                ]}\r\n                                            >\r\n                                                <Select\r\n                                                    disabled={isLoadingCourse}\r\n                                                    mode='multiple'\r\n                                                    showSearch\r\n                                                    fieldNames={{\r\n                                                        label: 'catNombre',\r\n                                                        value: 'catId'\r\n                                                    }}\r\n                                                    options={getCatalogos().cursos}\r\n                                                    optionFilterProp=\"catNombre\"\r\n                                                    onSelect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: true,\r\n                                                            idNombreCurso: option.catId\r\n                                                        })\r\n                                                    }\r\n                                                    onDeselect={\r\n                                                        (_, option) => setCourse({\r\n                                                            checked: false,\r\n                                                            curId: courses.filter(c => c.curNombre.catId === option.catId).length > 0 ? courses.filter(c => c.curNombre.catId === option.catId)[0].curId : 0\r\n                                                        })\r\n                                                    }\r\n                                                >\r\n                                                </Select>\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Row justify='center'>\r\n                            <Col xs={22} sm={22} md={20} lg={18} xl={18} xxl={16}>\r\n                                <Row>\r\n                                    <Form\r\n                                        form={formPostulante}\r\n                                        layout='vertical'\r\n                                        style={{ width: '100%' }}\r\n                                        onFinish={setPostulant}\r\n                                        initialValues={\r\n                                            {\r\n                                                posEmail: ''\r\n                                            }\r\n                                        }\r\n                                        disabled={isSaving || isPublishing || isSendingEmail}\r\n                                    >\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                name={['posEmail']}\r\n                                                label={getLabel(labels.applicantsEmails)}\r\n                                                extra={getLabel(labels.pressEnterAddEmail)}\r\n                                                rules={[\r\n                                                    {\r\n                                                        required: true,\r\n                                                        message: getLabel(labels.addApplicants),\r\n                                                    },\r\n                                                    {\r\n                                                        type: 'email',\r\n                                                        message: getLabel(labels.emailNotValid)\r\n                                                    }\r\n                                                ]}\r\n                                            >\r\n                                                <Input />\r\n                                            </Form.Item>\r\n                                            {\r\n                                                message.message &&\r\n                                                <Alert {...message} showIcon closable />\r\n                                            }\r\n                                        </Col>\r\n                                        <Col span={24} style={{ paddingTop: '10px' }}>\r\n                                            {\r\n                                                isSendingEmail ?\r\n                                                    <>\r\n                                                        <AlertWait error='' isLoading={isSendingEmail} />\r\n                                                    </>\r\n                                                    :\r\n                                                    <Row gutter={[15, 15]}>\r\n                                                        {\r\n                                                            postulants && postulants.map(a => renderApplicants(a))\r\n                                                        }\r\n                                                    </Row>\r\n                                            }\r\n                                        </Col>\r\n                                    </Form>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Training","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Button, Col, Row, Table, Space, Typography, Card, Form, Input, Spin, Image, Tag } from 'antd'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport TrainingService from '../../service/TrainingService'\r\nimport toast from 'react-hot-toast'\r\nconst trainingService = new TrainingService()\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n};\r\n\r\nconst TrainingInfo = () => {\r\n    const navigate = useHistory()\r\n    const { id } = useParams()\r\n    const [course, setCourse] = useState(null)\r\n    const [applicants, setApplicants] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { entId: id }\r\n        try {\r\n            const { data } = await trainingService.getById({ navigate, training })\r\n            if (data) {\r\n                setCourse(data.listObject[0])\r\n                setApplicants(data.listObject[0].postulanteList)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const search = ({ criteria }) => {\r\n        const searchCriteria = criteria.toUpperCase()\r\n        const postulanteList = criteria ? applicants.filter(p =>\r\n            p.posEmail.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.documento.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.nombres.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.apellidos.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.pais.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.ciudad.toUpperCase().indexOf(searchCriteria) >= 0\r\n            || p.usuId.sexo.catNombre.toUpperCase().indexOf(searchCriteria) >= 0\r\n        ) : applicants\r\n        const filteredCourse = { ...course, postulanteList }\r\n        setCourse(filteredCourse)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchData()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    course && <>\r\n                        <Row>\r\n                            <Col span={24}>\r\n                                <Card bordered={false}>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {course.entNombre}\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row\r\n                                        gutter={[15, 0]}\r\n                                        justify='space-around'\r\n                                    >\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-laptop\"></i>&nbsp;{course.entModalidad.catNombre}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-calendar-days\"></i>&nbsp;{course.entFechaIni.substring(0, 10)}-{course.entFechaFin.substring(0, 10)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '10px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-graduation-cap\"></i>&nbsp;{course.numPostulantes}&nbsp;{getLabel(labels.applicants)}\r\n                                        </Col>\r\n                                        <Col style={{ padding: '5px 10px 0 10px' }}>\r\n                                            <i className=\"fa-solid fa-earth-americas\"></i>{` ${course.entRegion.catDescripcion}`}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col style={{ padding: '15px 0' }}>\r\n                                <Form\r\n                                    initialValues={{\r\n                                        criteria: ''\r\n                                    }}\r\n                                    onFinish={search}\r\n                                    layout='inline'\r\n                                >\r\n                                    <Form.Item\r\n                                        name={['criteria']}\r\n                                        label={getLabel(labels.searchExpression)}\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} />\r\n                                    </Form.Item>\r\n                                    <Form.Item>\r\n                                        <Button type='default' htmlType='submit'>{getLabel(labels.search)}</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                        {\r\n                            course.postulanteList && <>\r\n                                <Table\r\n                                    {...tableProps}\r\n                                    rowKey='posId'\r\n                                    columns={[\r\n                                        {\r\n                                            title: '',\r\n                                            dataIndex: 'posId',\r\n                                            render: (_, { usuId }) => usuId && usuId.imagen ?\r\n                                                <Image src={\r\n                                                    `/images/${usuId.imagen.split('/')[usuId.imagen.split('/').length - 1]}`\r\n                                                } width={32} height={32} />\r\n                                                :\r\n                                                <img alt='' src='./assets/user.png' width={32} height={32} />\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.firstName),\r\n                                            dataIndex: 'usuId',\r\n                                            render: (_, { posEmail, usuId }) => usuId ? `${usuId.nombres} ${usuId.apellidos}` : posEmail\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.country),\r\n                                            dataIndex: 'country',\r\n                                            render: (_, { usuId }) => usuId ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img\r\n                                                        src={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png`}\r\n                                                        srcSet={`https://flagcdn.com/32x24/${usuId.pais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${usuId.pais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                                        width=\"32\"\r\n                                                        height=\"24\"\r\n                                                        alt={usuId.pais.catNombre}></img>\r\n                                                </div>\r\n                                                : <></>,\r\n                                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.attendance),\r\n                                            dataIndex: 'attendance',\r\n                                            render: (_, { asistenciaList }) => asistenciaList && asistenciaList.length > 0 ?\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <img alt='' src={`./../../assets/${(asistenciaList[asistenciaList.length - 1].asiValor || 0) >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                </div> :\r\n                                                <div style={{ textAlign: 'center' }}>\r\n                                                    <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                </div>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.workPlan),\r\n                                            dataIndex: 'workPlan',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_WPL').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.finalReport),\r\n                                            dataIndex: 'finalReport',\r\n                                            render: (_, { informeList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(c => (\r\n                                                            <Col key={c.curId} span={24}>\r\n                                                                {\r\n                                                                    `${c.curNombre.catValor.substr(0, 1)}${c.curNombre.catValor.substr(c.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    informeList && informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR')[informeList.filter(i => i.idCurso === c.curId && i.infTipo.catValor === 'TYP_INF_FIR').length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.certificate),\r\n                                            dataIndex: 'certificate',\r\n                                            render: (_, { certificadoList }) =>\r\n                                                <Row style={{ textAlign: 'center' }} gutter={[0, 5]}>\r\n                                                    {\r\n                                                        course && course.cursoList.map(tc => (\r\n                                                            <Col key={tc.curId} span={24}>\r\n                                                                {\r\n                                                                    `${tc.curNombre.catValor.substr(0, 1)}${tc.curNombre.catValor.substr(tc.curNombre.catValor.length - 1, 1)} `\r\n                                                                }\r\n                                                                {\r\n                                                                    certificadoList && certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                                                        <Image src={`./../../assets/${certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT')[certificadoList.filter(c => c.idCurso === tc.curId && c.cerEstado.catValor === 'EST_CER_ACT').length - 1].cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                                                                        :\r\n                                                                        <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                                                                }\r\n                                                            </Col>\r\n                                                        ))\r\n                                                    }\r\n                                                </Row>,\r\n                                            responsive: ['lg', 'xl', 'xxl']\r\n                                        },\r\n                                        {\r\n                                            title: getLabel(labels.actions),\r\n                                            dataIndex: '',\r\n                                            render: (_, { posId, usuId }) => <div style={{ textAlign: 'center' }}>\r\n                                                {\r\n                                                    usuId ?\r\n                                                        <Button type='primary' href={`/#/trainingapplicant/${posId}/${id}`}>{getLabel(labels.view)}</Button>\r\n                                                        :\r\n                                                        <Tag color='#108ee9'>{getLabel(labels.notEnrolled)}</Tag>\r\n                                                }\r\n                                            </div>\r\n                                        }\r\n                                    ]}\r\n                                    dataSource={course.postulanteList}>\r\n                                </Table>\r\n                            </>\r\n                        }\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingInfo","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Tabs, Button, Row, Col, Image, Form, Input, Typography, Space, Spin, InputNumber, Descriptions, message, Collapse } from 'antd'\r\nimport * as apiURLs from '../../utils/urls'\r\nimport { getCulture, getLabel, labels } from '../../utils/Internationalization'\r\nimport { getToken, getTypeContent } from '../../utils/Utils'\r\nimport $ from 'jquery'\r\nimport { saveAs } from 'file-saver'\r\nimport toast from 'react-hot-toast'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nconst postulantService = new PostulantService()\r\n\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst TrainingApplicant = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { id, idTraining } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [postulant, setPostulante] = useState(null)\r\n    const [courses, setCourses] = useState(null)\r\n    const [attendanceValue, setAttendanceValue] = useState(0)\r\n    const [isDownloading, setIsDownloading] = useState(false)\r\n\r\n    const renderInform = ({ infId, infFechaReg, infFechaSAprRec, infNombre, infEstado, infObservacion, infRutaPlan, evidenciaList, infTipo }) =>\r\n        <Row\r\n            key={infId}\r\n            className='mgeCard'\r\n            style={{\r\n                backgroundColor: '#f0f0f0',\r\n                padding: '10px 20px',\r\n                marginBottom: '10px',\r\n            }}>\r\n            <Descriptions\r\n                title={\r\n                    <Row gutter={10} style={{ paddingBottom: '10px' }}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text\r\n                                strong\r\n                                style={{\r\n                                    fontWeight: 'normal',\r\n                                }}\r\n                            >\r\n                                {infNombre}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                }\r\n                size='small'\r\n                layout='vertical'\r\n                extra={\r\n                    <>\r\n                        <Button type='default'\r\n                            onClick={() => downloadInform({ infNombre, infRutaPlan })}\r\n                            loading={isDownloading}\r\n                            disabled={isDownloading}\r\n                        >\r\n                            {getLabel(labels.download)}\r\n                        </Button>\r\n                    </>\r\n                }\r\n                column={\r\n                    {\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 6,\r\n                        xxl: 6,\r\n                    }\r\n                }\r\n            >\r\n\r\n                <Descriptions.Item label={\r\n                    <Typography.Text type='secondary' strong>{getLabel(labels.registrationDate)}</Typography.Text>\r\n                }\r\n                >\r\n                    {infFechaReg.substring(0, 10)}\r\n                </Descriptions.Item>\r\n\r\n                {\r\n                    evidenciaList && evidenciaList.length > 0 ?\r\n                        <>\r\n                            <Descriptions.Item label={\r\n                                <Typography.Text type='secondary' strong>{getLabel(labels.evidences)}</Typography.Text>\r\n                            }\r\n                            >\r\n                                <a rel=\"noreferred noreferrer\" target='_blank' href={`${evidenciaList[0].eviUrl}`}>\r\n                                    {\r\n                                        evidenciaList[0].eviUrl.length > 15 ?\r\n                                            `${evidenciaList[0].eviUrl.substring(0, 15)}...`\r\n                                            : evidenciaList[0].eviUrl\r\n                                    }\r\n                                </a>\r\n                            </Descriptions.Item>\r\n                        </>\r\n                        :\r\n                        <>\r\n                        </>\r\n                }\r\n\r\n                {\r\n                    infFechaSAprRec &&\r\n                    <Descriptions.Item label={\r\n                        <Typography.Text type='secondary' strong>{getLabel(labels.reviewDate)}</Typography.Text>\r\n                    }\r\n                    >\r\n                        {infFechaSAprRec.substring(0, 10)}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n                {\r\n                    infObservacion &&\r\n                    <Descriptions.Item\r\n                        style={{\r\n                            whiteSpace: 'pre-wrap'\r\n                        }}\r\n                        label={\r\n                            <Typography.Text type='secondary' strong>{getLabel(labels.observation)}</Typography.Text>\r\n                        }\r\n                    >\r\n                        {infObservacion}\r\n                    </Descriptions.Item>\r\n                }\r\n\r\n            </Descriptions>\r\n\r\n        </Row>\r\n\r\n    const renderCourse = ({ curId, curNombre, infTipo }) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length > 0 ?\r\n                                <Image src={`./../../assets/${postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_ENV' ? 'send.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_APR' ? 'accept.png' : postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId)[postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).length - 1].infEstado.catValor === 'EST_INF_REC' ? 'cancel.png' : 'minus.png'}`} preview={false} width={24} height={24} />\r\n                                :\r\n                                <Image src='./../../assets/minus.png' preview={false} width={24} height={24} />\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                            {\r\n                                infTipo.catValor === 'TYP_INF_WPL' ? getLabel(labels.workPlan) : infTipo.catValor === 'TYP_INF_FIR' ? getLabel(labels.finalReport) : ''\r\n                            }\r\n                            &nbsp;- {curNombre.catNombre}\r\n                        </Typography.Text>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            {\r\n                postulant.informeList && postulant.informeList.filter(i => i.infTipo.catValor === infTipo.catValor && i.idCurso === curId).map(i => renderInform(i))\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const downloadCertificate = async ({ cerUuid, cerNombre }) => {\r\n        const metaData = getTypeContent(cerNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadCertificateByUuid(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                \"Accept-Language\": getCulture(),\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({ cerUuid }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, cerNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const renderCertificate = ({ cerEstado, cerFechaCad, cerUuid, cerId, cerNombre, idCurso }) =>\r\n        <div\r\n            key={cerId}\r\n            style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n            <Row>\r\n                <Col xs={24} sm={24} md={16} lg={16} xl={16} xxl={12}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Image src={`./../../assets/${cerEstado.catValor === 'EST_CER_ACT' ? 'accept.png' : 'cancel.png'}`} preview={false} width={24} height={24} />\r\n                        </Col>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.certificate)}&nbsp;-&nbsp;\r\n                                {\r\n                                    courses && courses.filter(c => c.curId === idCurso)[0].curNombre.catNombre\r\n                                }\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10}>\r\n                        <Col>\r\n                            <Typography.Text strong style={{ fontSize: '1.1em' }}>\r\n                                {getLabel(labels.expires)}: {cerFechaCad.substring(0, 10)}\r\n                            </Typography.Text>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={4} lg={4} xl={4} xxl={6}>\r\n                    <Row gutter={10} justify='end'>\r\n                        <Col>\r\n                            <Button type='primary'\r\n                                loading={isDownloading}\r\n                                disabled={isDownloading}\r\n                                onClick={() => downloadCertificate({ cerUuid, cerNombre })}\r\n                            >{getLabel(labels.download)}</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n    const downloadInform = ({ infNombre, infRutaPlan }) => {\r\n\r\n        const metaData = getTypeContent(infNombre)\r\n\r\n        var xhrOverride = new XMLHttpRequest();\r\n        xhrOverride.responseType = 'arraybuffer';\r\n\r\n        setIsDownloading(true)\r\n        $.ajax({\r\n            async: true,\r\n            crossDomain: true,\r\n            url: apiURLs.downloadInformByName(),\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: \"*/*\",\r\n                Authorization: `Bearer ${getToken()}`,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            data: JSON.stringify({\r\n                infNombre,\r\n                infRutaPlan\r\n            }),\r\n            xhr: function () {\r\n                return xhrOverride;\r\n            }\r\n        }).then(function (response) {\r\n            setIsDownloading(false)\r\n            const blob = new Blob([response], { type: metaData })\r\n            saveAs(blob, infNombre)\r\n        }).catch(() => setIsDownloading(false));\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        const training = { idEntrenamiento: idTraining, posId: id }\r\n        try {\r\n            const { data } = await postulantService.getByTraining({ navigate, training })\r\n            if (data) {\r\n                const courses = data.listObject[0].entId.cursoList\r\n                const postulant = data.listObject[0]\r\n                if (postulant.asistenciaList.length > 0) {\r\n                    const attendanceValue = postulant.asistenciaList[postulant.asistenciaList.length - 1].asiValor || 0\r\n                    setAttendanceValue(attendanceValue)\r\n                }\r\n                setPostulante(postulant)\r\n                setCourses(courses)\r\n            } else {\r\n                toast.error(getLabel(labels.errorOcurred))\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            message.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load)\r\n            fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isLoading ?\r\n                    <Row style={{ padding: '30px 10px' }}>\r\n                        <Col span={24} style={{ textAlign: 'center' }}>\r\n                            <Spin size='large' tip={\r\n                                <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                    {getLabel(labels.loading)}...\r\n                                </Typography.Paragraph>\r\n                            } />\r\n                        </Col>\r\n                    </Row>\r\n                    :\r\n                    postulant && <>\r\n                        <div className=\"grid\">\r\n                            <div className=\"col-12\">\r\n                                <div className=\"mgeCard\">\r\n                                    <div className=\"grid\">\r\n                                        <div className=\"col-12\">\r\n                                            <Space direction='horizontal'>\r\n                                                <Button icon={<i className=\"fa-solid fa-chevron-left\"></i>}\r\n                                                    onClick={() => {\r\n                                                        window.history.go(-1)\r\n                                                    }}\r\n                                                ></Button>\r\n                                                <h3 style={{ padding: '0', margin: '0' }} className='mge-darkGreen'>\r\n                                                    {\r\n                                                        `${postulant.usuId.nombres || 'Postulante'} ${postulant.usuId.apellidos || ''}`\r\n                                                    }\r\n                                                </h3>\r\n                                            </Space>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <Tabs centered items={[\r\n                            {\r\n                                key: 1,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.information)}</Typography.Text>,\r\n                                children: <>\r\n                                    <Row gutter={[25, 25]} justify='center'>\r\n                                        <Col xs={22} sm={20} md={6} lg={6} xl={6} xxl={4}>\r\n                                            <Row gutter={[15, 15]} style={{ textAlign: 'center' }}>\r\n                                                <Col span={24}>\r\n                                                    {\r\n                                                        postulant.usuId.imagen ?\r\n                                                            <Image src={\r\n                                                                `/images/${postulant.usuId.imagen.split('/')[postulant.usuId.imagen.split('/').length - 1]}`\r\n                                                            } width={128} height={128} />\r\n                                                            :\r\n                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                    }\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            {getLabel(labels.profile)}:\r\n                                                        </Typography.Text>\r\n                                                        <br />{getLabel(labels.applicant)}\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                                <Col xs={12} sm={12} md={24} lg={24} xl={24} xxl={24} style={{ textAlign: 'left' }}>\r\n                                                    <Typography.Paragraph>\r\n                                                        <Typography.Text strong>\r\n                                                            {getLabel(labels.invitedBy)}:\r\n                                                        </Typography.Text>\r\n                                                        <br />\r\n                                                        {\r\n                                                            postulant.posInvitadoPor ?\r\n                                                                `${postulant.posInvitadoPor.nombres || ''} ${postulant.posInvitadoPor.apellidos || ''}`\r\n                                                                : <></>\r\n                                                        }\r\n                                                    </Typography.Paragraph>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        <Col xs={22} sm={20} md={14} lg={14} xl={14} xxl={10}>\r\n                                            <Form\r\n                                                initialValues={\r\n                                                    { ...postulant.usuId, fechanac: postulant.usuId.fechanac.substring(0, 10) }\r\n                                                }\r\n                                                layout='vertical'\r\n                                            >\r\n                                                <Row gutter={[25, 5]}>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={'nombres'}\r\n                                                            label={getLabel(labels.firstName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='apellidos'\r\n                                                            label={getLabel(labels.lastName)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['sexo', 'catNombre']}\r\n                                                            label={getLabel(labels.sex)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='fechanac'\r\n                                                            label={getLabel(labels.dateBirth)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['pais', 'catNombre']}\r\n                                                            label={getLabel(labels.country)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name={['ciudad']}\r\n                                                            label={getLabel(labels.city)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={getLabel(labels.countryCode)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={getLabel(labels.phoneNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={getLabel(labels.idNumber)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={getLabel(labels.currentyWorking)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label={getLabel(labels.email)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label={getLabel(labels.additionalEmail)}\r\n                                                        >\r\n                                                            <Input readOnly />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                            }, {\r\n                                key: 2,\r\n                                label: <Typography.Text style={{ fontSize: '1.1em', letterSpacing: '1px' }}>{getLabel(labels.progress)}</Typography.Text>,\r\n                                children: <>\r\n                                    <div style={\r\n                                        {\r\n                                            backgroundColor: '#ffffff',\r\n                                            padding: '15px',\r\n                                            borderRadius: '15px',\r\n                                            marginBottom: '20px'\r\n                                        }\r\n                                    }>\r\n                                        <Row>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10}>\r\n                                                    <Col>\r\n                                                        <img alt='' src={`./../../assets/${attendanceValue >= 80 ? 'accept.png' : 'cancel.png'}`} height={24} width={24} />\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <Typography.Title level={5}>\r\n                                                            {getLabel(labels.attendance)}\r\n                                                        </Typography.Title>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xs={12} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                <Row gutter={10} justify='end'>\r\n                                                    <Col style={{ textAlign: 'end' }}>\r\n                                                        <Space>\r\n                                                            <InputNumber\r\n                                                                defaultValue={0}\r\n                                                                value={attendanceValue}\r\n                                                                readOnly\r\n                                                                min={0}\r\n                                                                max={100}\r\n                                                                formatter={(value) => `${value}%`}\r\n                                                                parser={(value) => value.replace('%', '')}\r\n                                                                onChange={(e) => setAttendanceValue(e)} />\r\n                                                        </Space>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_WPL' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col span={24}>\r\n                                            <Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    courses && courses.map(c => renderCourse({ ...c, infTipo: { catValor: 'TYP_INF_FIR' } }))\r\n                                                }\r\n                                            </Collapse>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    {\r\n                                        postulant && postulant.informeList && postulant.certificadoList &&\r\n                                        <>\r\n                                            {\r\n                                                postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' &&\r\n                                                    w.infEstado.catValor === 'EST_INF_APR'\r\n                                                ).length > 0\r\n                                                &&\r\n                                                <>\r\n                                                    {\r\n                                                        postulant.certificadoList && postulant.certificadoList.map(c => renderCertificate(c))\r\n                                                    }\r\n                                                </>\r\n                                            }\r\n                                        </>\r\n                                    }\r\n                                </>\r\n                            }]\r\n                        }>\r\n                        </Tabs>\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TrainingApplicant","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { deleteBeneficiary, downloadBeneficiariesReport, getBeneficiariesByPostulant, getBeneficiaryById, insertBeneficiary, updateBeneficiary, validateBeneficiary } from '../utils/urls'\r\nexport class BeneficiaryService {\r\n    put = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).put(insertBeneficiary(), beneficiary)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(updateBeneficiary(), beneficiary)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiaryById(), beneficiary)\r\n    }\r\n    getByPostulant = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(getBeneficiariesByPostulant(), beneficiary)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).post(deleteBeneficiary(), beneficiary)\r\n    }\r\n    val = (props) => {\r\n        const { navigate, beneficiary } = props\r\n        return AxiosInstance(navigate).patch(validateBeneficiary(), beneficiary)\r\n    }\r\n    downloadBeneficiariesReport = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).patch(downloadBeneficiariesReport())\r\n    }\r\n}\r\n\r\nexport default BeneficiaryService","import AxiosInstance from '../utils/AxiosInstance'\r\nimport { downloadCertificateByName, downloadCertificateByUuid, generateCertificate, sendEmailCertificate } from '../utils/urls'\r\nexport class CertificateService {\r\n    generate = (props) => {\r\n        const { navigate, course } = props\r\n        return AxiosInstance(navigate).post(generateCertificate(), course)\r\n    }\r\n    send = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).patch(sendEmailCertificate(), certificate)\r\n    }\r\n    downloadByName = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByName(), certificate)\r\n    }\r\n    downloadByUuid = (props) => {\r\n        const { navigate, certificate } = props\r\n        return AxiosInstance(navigate).post(downloadCertificateByUuid(), certificate)\r\n    }\r\n}\r\n\r\nexport default CertificateService","import React from 'react'\r\nimport { Col, Row, Space, Button, Form, Select, InputNumber, Input, Switch } from 'antd'\r\nimport { getCatalogos } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nconst { Option } = Select\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            alt={e.catNombre}\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.substr(0, 2).toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.substr(0, 2).toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n        ></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst Beneficiary = ({ type, beneficiary, saveBeneficiary, isSaving, closeBeneficiary }) => {\r\n    const [formBeneficiary] = Form.useForm()\r\n\r\n    if (type === 1)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label={getLabel(labels.idNumber)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeID)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label={getLabel(labels.name)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeFirstName)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label={getLabel(labels.country)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectCountry)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label={getLabel(labels.city)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCity)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label={getLabel(labels.sex)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectSex)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name='benTrabaja'\r\n                                label={getLabel(labels.currentyWorking)}\r\n                                valuePropName='checked'\r\n                                rules={[\r\n                                    {\r\n                                        required: true\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Switch />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idNivelInt']}\r\n                                label={getLabel(labels.instructionLevel)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeInstructionLevel)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().educationLevels}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >{getLabel(labels.cancel)}</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? getLabel(labels.saving) : getLabel(labels.save)\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n    if (type === 2)\r\n        return (\r\n            <>\r\n                {\r\n                    beneficiary &&\r\n                    <>\r\n                        <Form\r\n                            form={formBeneficiary}\r\n                            layout={'vertical'}\r\n                            initialValues={beneficiary}\r\n                            onFinish={saveBeneficiary}\r\n                            disabled={isSaving || beneficiary.editDisabled}\r\n                        >\r\n                            <div style={{ display: 'none' }}>\r\n                                <Form.Item\r\n                                    name={['benId']}\r\n                                    label='ID'\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idTipo']}\r\n                                    label='Type Person'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idCurso']}\r\n                                    label='Course'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                                <Form.Item\r\n                                    name={['idPostulante']}\r\n                                    label='Postulante'\r\n                                    rules={[\r\n                                        {\r\n                                            required: true\r\n                                        }\r\n                                    ]}\r\n                                >\r\n                                    <Input />\r\n                                </Form.Item>\r\n                            </div>\r\n                            <Form.Item\r\n                                name={['benDocumento']}\r\n                                label={getLabel(labels.idNumber)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeID)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNombres']}\r\n                                label={getLabel(labels.name)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeFirstName)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idPais']}\r\n                                label={getLabel(labels.country)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectCountry)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select name='idPais'>\r\n                                    {\r\n                                        getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                    }\r\n                                </Select>\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['ciudad']}\r\n                                label={getLabel(labels.city)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCity)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['idSexo']}\r\n                                label={getLabel(labels.sex)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.selectSex)\r\n                                    },\r\n                                ]}\r\n                            >\r\n                                <Select\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                    fieldNames={{\r\n                                        label: 'catNombre',\r\n                                        value: 'catId'\r\n                                    }}\r\n                                    showSearch\r\n                                    options={getCatalogos().generos}\r\n                                    optionFilterProp=\"catNombre\"\r\n                                />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benIdEmpresa']}\r\n                                label={getLabel(labels.companyID)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCompanyID)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNomEmpresa']}\r\n                                label={getLabel(labels.company)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeCompany)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benCargo']}\r\n                                label={getLabel(labels.jobTitle)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeJobTitle)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item\r\n                                name={['benNumPer']}\r\n                                label={getLabel(labels.totalCollaborators)}\r\n                                rules={[\r\n                                    {\r\n                                        required: true,\r\n                                        message: getLabel(labels.completeTotalCollaborators)\r\n                                    }\r\n                                ]}\r\n                            >\r\n                                <InputNumber\r\n                                    style={{\r\n                                        width: '100%',\r\n                                        display: 'inline-block'\r\n                                    }}\r\n                                />\r\n                            </Form.Item>\r\n                            <Row gutter={[10]}>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benHombres']}\r\n                                        label={getLabel(labels.men)}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.numberMen)\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                                <Col span={12}>\r\n                                    <Form.Item\r\n                                        name={['benMujeres']}\r\n                                        label={getLabel(labels.women)}\r\n                                        rules={[\r\n                                            {\r\n                                                required: true,\r\n                                                message: getLabel(labels.numberWomen)\r\n                                            }\r\n                                        ]}\r\n                                    >\r\n                                        <InputNumber\r\n                                            style={{\r\n                                                width: '100%',\r\n                                                display: 'inline-block'\r\n                                            }}\r\n                                        />\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                        <Space>\r\n                            <Button onClick={closeBeneficiary}\r\n                                disabled={isSaving}\r\n                            >{getLabel(labels.cancel)}</Button>\r\n                            <Button type=\"primary\"\r\n                                disabled={isSaving || beneficiary.editDisabled}\r\n                                loading={isSaving}\r\n                                onClick={() => {\r\n                                    formBeneficiary.submit()\r\n                                }}>\r\n                                {\r\n                                    isSaving ? getLabel(labels.saving) : getLabel(labels.save)\r\n                                }\r\n                            </Button>\r\n                        </Space>\r\n                    </>\r\n                }\r\n            </>\r\n        )\r\n\r\n}\r\n\r\nexport default Beneficiary","import React, { useState, useEffect } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { Col, Row, Space, Button, Table, Image, Drawer, Typography, Collapse, Popconfirm, Switch, Result, Modal } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport toast from 'react-hot-toast'\r\nimport AlertWait from '../../pages/AlertWait'\r\nimport { getCatalogos, getDatosUsuario } from '../../utils/Utils'\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport PostulantService from '../../service/PostulantService'\r\nimport BeneficiaryService from './../../service/BeneficiaryService'\r\nimport CertificateService from '../../service/CertificateService'\r\nimport Beneficiary from './Beneficiary'\r\n\r\nconst postulantService = new PostulantService()\r\nconst beneficiaryService = new BeneficiaryService()\r\nconst certificateService = new CertificateService()\r\n\r\nconst { Title, Paragraph, Text } = Typography\r\nconst { confirm } = Modal\r\n\r\nconst tableProps = {\r\n    bordered: false,\r\n    loading: false,\r\n    title: '',\r\n    showHeader: true,\r\n    size: 'medium',\r\n    pagination: {\r\n        position: ['none', 'bottomRight']\r\n    }\r\n}\r\nconst panelStyle = {\r\n    marginBottom: 20,\r\n    backgroundColor: '#fafafa',\r\n    border: 'none',\r\n    borderRadius: '15px'\r\n}\r\n\r\nconst Beneficiaries = () => {\r\n    const navigate = useHistory()\r\n    const { operation } = useParams()\r\n    const [load, setLoad] = useState(true)\r\n    const [isOpening, setIsOpening] = useState(false)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isLoadingBeneficiaries, setIsLoadingBeneficiaries] = useState(false)\r\n    const [isSaving, setIsSaving] = useState(false)\r\n    const [isDeleting, setIsDeleting] = useState(false)\r\n    const [postulant, setPostulant] = useState({})\r\n    const [beneficiaryC1, setBeneficiaryC1] = useState(null)\r\n    const [beneficiaryC2, setBeneficiaryC2] = useState(null)\r\n    const [openC1, setOpenC1] = useState(false)\r\n    const [openC2, setOpenC2] = useState(false)\r\n    const [selectedBeneficiary, setSelectedBeneficiary] = useState({ benId: 0 })\r\n    const [openDeleteBeneficiary, setOpenDeleteBeneficiary] = useState(false);\r\n\r\n    const [isGenerating, setIsGenerating] = useState(false)\r\n    const [isSendingCertificate, setIsSendingCertificate] = useState(false)\r\n\r\n    const closeBeneficiaryC1 = () => {\r\n        setOpenC1(false)\r\n    }\r\n\r\n    const getBeneficiaryC1 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC1(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                idNivelInt: data.listObject[0].benNivelInt.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC1(beneficiary)\r\n            setOpenC1(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC1 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC1()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const newBeneficiary = time => new Promise(resolve => setTimeout(resolve, time * 1000))\r\n\r\n    const closeBeneficiaryC2 = () => {\r\n        setOpenC2(false)\r\n    }\r\n\r\n    const getBeneficiaryC2 = async ({ benId, idCurso }) => {\r\n        setBeneficiaryC2(null)\r\n        setIsLoadingBeneficiaries(true)\r\n        try {\r\n            const { data } = await beneficiaryService.get({ navigate, beneficiary: { benId } })\r\n            const beneficiary = {\r\n                ...data.listObject[0],\r\n                idTipo: data.listObject[0].benTipo.catId,\r\n                idPais: data.listObject[0].benPais.catId,\r\n                idSexo: data.listObject[0].benSexo.catId,\r\n                editDisabled: postulant.certificadoList.filter(c => c.idCurso === idCurso).length > 0\r\n            }\r\n            setBeneficiaryC2(beneficiary)\r\n            setOpenC2(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoadingBeneficiaries(false)\r\n        }\r\n    }\r\n\r\n    const saveBeneficiaryC2 = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = (beneficiary.benId !== undefined ? await beneficiaryService.set({ navigate, beneficiary }) : await beneficiaryService.put({ navigate, beneficiary }))\r\n            if (data) fetchData(2)\r\n            closeBeneficiaryC2()\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const showReconfirmDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(true)\r\n    }\r\n\r\n    const confirmDeleteBeneficiary = async () => {\r\n        setIsDeleting(true)\r\n        try {\r\n            const { data } = await beneficiaryService.del({ navigate, beneficiary: selectedBeneficiary })\r\n            if (data) {\r\n                toast.success(getLabel(labels.beneficiarySuccessfullyRemoved))\r\n                fetchData(2)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setSelectedBeneficiary({ benId: 0 })\r\n            setIsDeleting(false)\r\n            setOpenDeleteBeneficiary(false)\r\n        }\r\n    }\r\n\r\n    const cancelDeleteBeneficiary = () => {\r\n        setOpenDeleteBeneficiary(false)\r\n    }\r\n\r\n    const delBeneficiary = async ({ benId }) => {\r\n        setSelectedBeneficiary({ benId })\r\n        if ((postulant.beneficiarioList.length - 1) < (postulant.entId.entLimBen || 1)) {\r\n            showReconfirmDeleteBeneficiary()\r\n        } else {\r\n            setIsDeleting(true)\r\n            try {\r\n                const { data } = await beneficiaryService.del({ navigate, beneficiary: { benId } })\r\n                if (data) {\r\n                    toast.success(getLabel(labels.beneficiarySuccessfullyRemoved))\r\n                    fetchData(2)\r\n                }\r\n            } catch (error) {\r\n                const { response } = error\r\n                toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n            } finally {\r\n                setSelectedBeneficiary({ benId: 0 })\r\n                setIsDeleting(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    const validateBeneficiary = async (values) => {\r\n        setIsSaving(true)\r\n        const beneficiary = { ...values }\r\n        try {\r\n            const { data } = await beneficiaryService.val({ navigate, beneficiary })\r\n            if (data)\r\n                toast.success(getLabel(labels.beneficiarySuccessfullyUpdated))\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsSaving(false)\r\n        }\r\n    }\r\n\r\n    const sendCertificate = async ({ cerId }) => {\r\n        setIsSendingCertificate(true)\r\n        try {\r\n            const certificate = { cerId }\r\n            const { data } = await certificateService.send({ navigate, certificate })\r\n            if (data) toast.success(getLabel(labels.certificateSentSuccessfully))\r\n            setLoad(true)\r\n        } catch (_) {\r\n            toast.error(getLabel(labels.certificateSendFailed))\r\n        } finally {\r\n            setIsSendingCertificate(false)\r\n        }\r\n    }\r\n\r\n    const generate = async ({ idCurso, idPostulante }) => {\r\n        setIsGenerating(true)\r\n        try {\r\n            const course = { idCurso, idPostulante }\r\n            const { data } = await certificateService.generate({ navigate, course })\r\n            const certificate = data.listObject[0]\r\n            toast.success(getLabel(labels.certificateGeneratedSuccessfully))\r\n            sendCertificate(certificate)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsGenerating(false)\r\n        }\r\n    }\r\n\r\n    const sendBeneficiaries = async ({ idCurso, idPostulante }) => {\r\n        confirm({\r\n            title: getLabel(labels.sendBeneficiaryListTitle),\r\n            icon: <anticons.ExclamationCircleFilled />,\r\n            content: getLabel(labels.sendBeneficiaryListConfirm),\r\n            okText: getLabel(labels.ok),\r\n            cancelText: getLabel(labels.cancel),\r\n            onOk() {\r\n                generate({ idCurso, idPostulante })\r\n            }\r\n        })\r\n    }\r\n\r\n    const renderCourse = ({ curId, curNombre }, posId) =>\r\n        <Collapse.Panel\r\n            key={curId}\r\n            header={\r\n                <Row gutter={10}>\r\n                    <Col>\r\n                        {\r\n                            operation === 'registry' &&\r\n                            <>\r\n                                {\r\n                                    postulant.beneficiarioList && postulant.beneficiarioList.filter(b => b.idCurso === curId && b.idPostulante === posId).length >= (postulant.entId.entLimBen || 1) ?\r\n                                        <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                        :\r\n                                        <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                }\r\n                            </>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' &&\r\n                            <>\r\n                                <>\r\n                                    {\r\n                                        postulant.certificadoList && postulant.certificadoList.filter(c => c.idCurso === curId && c.idPostulante === posId && c.cerEstado.catValor === 'EST_CER_ACT').length > 0 ?\r\n                                            <Image src={'./../../assets/accept.png'} preview={false} width={24} height={24} />\r\n                                            :\r\n                                            <Image src={'./../../assets/minus.png'} preview={false} width={24} height={24} />\r\n                                    }\r\n                                </>\r\n                            </>\r\n                        }\r\n                    </Col>\r\n                    <Col>\r\n                        <Typography>\r\n                            <Text strong style={{ fontSize: '1.1em' }}>\r\n                                {curNombre.catNombre}\r\n                            </Text>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            style={panelStyle}\r\n        >\r\n            <Row>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                    <Typography>\r\n                        <Paragraph>\r\n                            <Text type='secondary' strong>\r\n                                {`${getLabel(labels.minimumBeneficiaries)} (${postulant.entId.entLimBen || 1})`}\r\n                            </Text>\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </Col>\r\n                <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                    style={{ textAlign: 'right' }}>\r\n                    <Space>\r\n                        <Button\r\n                            type='default'\r\n                            loading={isLoading || isLoadingBeneficiaries}\r\n                            disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                            onClick={() => {\r\n                                fetchData(2)\r\n                            }}>{getLabel(labels.refresh)}</Button>\r\n                        {\r\n                            postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 && <Button\r\n                                type='primary'\r\n                                loading={isOpening}\r\n                                disabled={isLoading || isLoadingBeneficiaries || isGenerating || isSendingCertificate}\r\n                                onClick={() => {\r\n                                    if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC1(null)\r\n                                            setBeneficiaryC1({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_NAT'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC1(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                        setIsOpening(true)\r\n                                        newBeneficiary(0.5).then(() => {\r\n                                            setBeneficiaryC2(null)\r\n                                            setBeneficiaryC2({\r\n                                                idCurso: curId,\r\n                                                idPostulante: posId,\r\n                                                benTrabaja: false,\r\n                                                idTipo: getCatalogos().typePersons.filter(t => t.catValor === (curNombre.catReferencia.catValor || 'TYP_PER_LEG'))[0].catId,\r\n                                                editDisabled: false\r\n                                            })\r\n                                            setOpenC2(true)\r\n                                            setIsOpening(false)\r\n                                        })\r\n                                    }\r\n                                }}>{getLabel(labels.newBeneficiary)}</Button>\r\n                        }\r\n                        {\r\n                            operation === 'qualification' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                            <Button type='primary'\r\n                                loading={isGenerating || isSendingCertificate}\r\n                                disabled={isGenerating || isSendingCertificate || isLoading || isLoadingBeneficiaries}\r\n                                onClick={() => sendBeneficiaries(\r\n                                    {\r\n                                        idCurso: curId,\r\n                                        idPostulante: posId\r\n                                    })}\r\n                            >\r\n                                {\r\n                                    isGenerating || isSendingCertificate ? getLabel(labels.sending) : getLabel(labels.send)\r\n                                }\r\n                            </Button>\r\n                        }\r\n                    </Space>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                postulant && postulant.beneficiarioList &&\r\n                <Table\r\n                    loading={isLoading || isLoadingBeneficiaries}\r\n                    {...tableProps}\r\n                    rowKey='benId'\r\n                    columns={[\r\n                        {\r\n                            title: getLabel(labels.idNumber),\r\n                            dataIndex: 'benDocumento',\r\n                            render: (_, { benDocumento }) => `${benDocumento}`,\r\n                            responsive: ['md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        {\r\n                            title: getLabel(labels.name),\r\n                            dataIndex: 'benNombres',\r\n                            render: (_, { benNombres }) => `${benNombres}`\r\n                        },\r\n                        {\r\n                            title: getLabel(labels.country),\r\n                            dataIndex: 'benPais',\r\n                            render: (_, { benPais }) =>\r\n                                <div style={{ textAlign: 'center' }}>\r\n                                    <img\r\n                                        src={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png`}\r\n                                        srcSet={`https://flagcdn.com/32x24/${benPais.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/96x72/${benPais.catDescripcion.toLowerCase()}.png 3x`}\r\n                                        width=\"32\"\r\n                                        height=\"24\"\r\n                                        alt={benPais.catNombre}></img>\r\n                                </div>\r\n                        },\r\n                        {\r\n                            title: getLabel(labels.city),\r\n                            dataIndex: 'ciudad',\r\n                            render: (_, { ciudad }) => `${ciudad}`,\r\n                            responsive: ['sm', 'md', 'lg', 'xl', 'xxl']\r\n                        },\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: getLabel(labels.sex),\r\n                                    dataIndex: 'benSexo',\r\n                                    render: (_, { benSexo }) => `${benSexo.catNombre}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: getLabel(labels.jobTitle),\r\n                                    dataIndex: 'benCargo',\r\n                                    render: (_, { benCargo }) => `${benCargo}`,\r\n                                    responsive: ['xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: getLabel(labels.isWorking),\r\n                                    dataIndex: 'benTrabaja',\r\n                                    render: (_, { benTrabaja }) => <>{benTrabaja ? getLabel(labels.yes) : getLabel(labels.no)}</>,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: getLabel(labels.company),\r\n                                    dataIndex: 'benNomEmpresa',\r\n                                    render: (_, { benNomEmpresa }) => `${benNomEmpresa}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        (\r\n                            curNombre.catReferencia.catValor === 'TYP_PER_NAT' ?\r\n                                {\r\n                                    title: getLabel(labels.instructionLevel),\r\n                                    dataIndex: 'benNivelInt',\r\n                                    render: (_, { benNivelInt }) => `${benNivelInt.catNombre}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                } :\r\n                                {\r\n                                    title: getLabel(labels.totalPersons),\r\n                                    dataIndex: 'benNumPer',\r\n                                    render: (_, { benNumPer }) => `${benNumPer}`,\r\n                                    responsive: ['lg', 'xl', 'xxl']\r\n                                }\r\n                        ),\r\n                        {\r\n                            title: getLabel(labels.actions),\r\n                            dataIndex: '',\r\n                            render: (_, record) =>\r\n                                <Space>\r\n                                    <Button type='primary'\r\n                                        icon={<anticons.FolderOpenFilled />}\r\n                                        onClick={() => {\r\n                                            if (curNombre.catValor === 'CUR_NEG_VER1') {\r\n                                                getBeneficiaryC1(record)\r\n                                            } else if (curNombre.catValor === 'CUR_NEG_VER2') {\r\n                                                getBeneficiaryC2(record)\r\n                                            }\r\n                                        }}\r\n                                    />\r\n                                    {\r\n                                        operation === 'registry' && postulant.certificadoList.filter(c => c.idCurso === curId).length < 1 &&\r\n                                        <>\r\n                                            <Popconfirm title={getLabel(labels.sureDeleteBeneficiary)} okText={getLabel(labels.yes)} cancelText={getLabel(labels.cancel)} onConfirm={() => delBeneficiary(record)}\r\n                                                okButtonProps={{\r\n                                                    loading: isDeleting,\r\n                                                    disabled: isDeleting\r\n                                                }}\r\n                                            >\r\n                                                <Button type='default'\r\n                                                    danger\r\n                                                    icon={<anticons.DeleteFilled />}\r\n                                                    loading={isDeleting}\r\n                                                    disabled={isDeleting}\r\n                                                />\r\n                                            </Popconfirm>\r\n                                        </>\r\n                                    }\r\n                                    {\r\n                                        operation === 'qualification' &&\r\n                                        <Switch\r\n                                            defaultChecked={record.benValidado}\r\n                                            onChange={(e) => {\r\n                                                validateBeneficiary({ ...record, benValidado: e })\r\n                                            }}\r\n                                            loading={isSaving}\r\n                                            disabled={postulant.certificadoList.filter(c => c.idCurso === curId).length > 0}\r\n                                        />\r\n                                    }\r\n                                </Space>\r\n                        }\r\n                    ]}\r\n                    dataSource={postulant.beneficiarioList.filter(b => b.idCurso === curId)}>\r\n                </Table>\r\n            }\r\n        </Collapse.Panel>\r\n\r\n    const fetchData = async (typeLoad) => {\r\n        setLoad(false)\r\n        if (typeLoad) {\r\n            if (typeLoad === 1) {\r\n                setIsLoading(true)\r\n            } else if (typeLoad === 2) {\r\n                setIsLoadingBeneficiaries(true)\r\n            }\r\n        } else {\r\n            setIsLoading(true)\r\n        }\r\n        try {\r\n            const postulant = { idUsuario: getDatosUsuario().usuarioId }\r\n            const { data } = await postulantService.getTraining({ navigate, postulant })\r\n            const training = data.listObject[0]\r\n            setPostulant(training)\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            if (typeLoad) {\r\n                if (typeLoad === 1) {\r\n                    setIsLoading(false)\r\n                } else if (typeLoad === 2) {\r\n                    setIsLoadingBeneficiaries(false)\r\n                }\r\n            } else {\r\n                setIsLoading(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) fetchData()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div style={\r\n                {\r\n                    backgroundColor: '#ffffff',\r\n                    padding: '15px 20px 6px 20px',\r\n                    borderRadius: '15px',\r\n                    marginBottom: '20px'\r\n                }\r\n            }>\r\n                <Row>\r\n                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                        <Typography>\r\n                            <Title type='secondary' level={3}>\r\n                                {\r\n                                    operation === 'registry' ? getLabel(labels.registryOperation) : getLabel(labels.qualificationOperation)\r\n                                }\r\n                            </Title>\r\n                        </Typography>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            <Row justify='center'>\r\n                {\r\n                    isLoading ?\r\n                        <AlertWait message={`${getLabel(labels.loading)}...`} isLoading={isLoading} />\r\n                        :\r\n                        <Col span={24}>\r\n                            {\r\n                                operation === 'registry' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR').length > 0 &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length < 1 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_WPL' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title={getLabel(labels.oneApprovedWorkplanRegisterBeneficiaries)}\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/workplan')\r\n                                                        }}\r\n                                                    >\r\n                                                        {getLabel(labels.sendWorkplan)}\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n                            {\r\n                                operation === 'qualification' &&\r\n                                <>\r\n                                    {\r\n                                        postulant && postulant.informeList &&\r\n                                            postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR').length > 0 ?\r\n                                            <Collapse Collapse\r\n                                                accordion\r\n                                                bordered={false}\r\n                                                expandIconPosition='end'\r\n                                                style={{\r\n                                                    backgroundColor: 'transparent'\r\n                                                }}\r\n                                            >\r\n                                                {\r\n                                                    postulant && postulant.informeList && postulant.entId && postulant.entId.cursoList &&\r\n                                                    postulant.informeList.filter(w => w.infTipo.catValor === 'TYP_INF_FIR' && w.infEstado.catValor === 'EST_INF_APR')\r\n                                                        .map(i => ({ ...postulant.entId.cursoList.filter(c => c.curId === i.idCurso)[0] }))\r\n                                                        .map(c => renderCourse(c, postulant.posId))\r\n                                                }\r\n                                            </Collapse>\r\n                                            :\r\n                                            <Result\r\n                                                title={getLabel(labels.oneApprovedFinalReportQualifyBeneficiaries)}\r\n                                                extra={\r\n                                                    <Button type=\"primary\" key=\"console\"\r\n                                                        onClick={() => {\r\n                                                            navigate.push('/finalreport')\r\n                                                        }}\r\n                                                    >\r\n                                                        {getLabel(labels.sendFinalReport)}\r\n                                                    </Button>\r\n                                                }\r\n                                            />\r\n                                    }\r\n                                </>\r\n                            }\r\n\r\n                        </Col>\r\n                }\r\n            </Row>\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC1} open={openC1}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC1}\r\n                            disabled={isSaving}\r\n                        >{getLabel(labels.cancel)}</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC1 && <Beneficiary type={1} beneficiary={beneficiaryC1} saveBeneficiary={saveBeneficiaryC1} closeBeneficiary={closeBeneficiaryC1} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Drawer title={getLabel(labels.beneficiaryTitle)} placement=\"right\" onClose={closeBeneficiaryC2} open={openC2}\r\n                extra={\r\n                    <Space>\r\n                        <Button onClick={closeBeneficiaryC2}\r\n                            disabled={isSaving}\r\n                        >{getLabel(labels.cancel)}</Button>\r\n                    </Space>\r\n                }\r\n            >\r\n                {\r\n                    beneficiaryC2 && <Beneficiary type={2} beneficiary={beneficiaryC2} saveBeneficiary={saveBeneficiaryC2} closeBeneficiary={closeBeneficiaryC2} isSaving={isSaving} />\r\n                }\r\n            </Drawer>\r\n            <Modal\r\n                title={getLabel(labels.deleteBeneficiaryTitle)}\r\n                open={openDeleteBeneficiary}\r\n                onOk={confirmDeleteBeneficiary}\r\n                confirmLoading={isDeleting}\r\n                onCancel={cancelDeleteBeneficiary}\r\n                okText={getLabel(labels.yes)}\r\n                cancelText={getLabel(labels.cancel)}\r\n            >\r\n                <p>\r\n                    {\r\n                        getLabel(labels.reConfirmDeleteBeneficiary)\r\n                    }\r\n                </p>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Beneficiaries","import React, { useState } from 'react'\r\nimport { Button, Form, Input, Space, Typography } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport toast from 'react-hot-toast'\r\nimport md5 from 'md5'\r\n\r\nimport { getLabel, labels } from '../../utils/Internationalization'\r\n\r\nimport UsuarioService from '../../service/UsuarioService'\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Paragraph, Text } = Typography\r\n\r\nconst RestorePasswordUser = ({ user, navigate }) => {\r\n\r\n    const [passwordNew, setPasswordNew] = useState('')\r\n    const [passwordNewConfirm, setPasswordNewConfirm] = useState('')\r\n    const [isReseting, setIsReseting] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n\r\n    const resetPassword = async (values) => {\r\n        const usuario = {\r\n            usuId: values.usuId,\r\n            oldpassword: md5(values.password),\r\n            password: md5(values.passwordNew)\r\n        }\r\n        console.log(usuario)\r\n        setIsReseting(true)\r\n        try {\r\n            const { data } = await usuarioService.resetPassword({ navigate, usuario })\r\n            if (data)\r\n                toast.success(getLabel(labels.passwordResetSuccessfully))\r\n            setTimeout(() => {\r\n                localStorage.removeItem(\"mgeToken\")\r\n                localStorage.removeItem(\"mgeDatosUsuario\")\r\n                localStorage.removeItem(\"mgeInformList\")\r\n                navigate.push(\"/login\")\r\n                setIsReseting(false)\r\n            }, 3000)\r\n        } catch (error) {\r\n            setIsReseting(false)\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        }\r\n    }\r\n\r\n    const cancelResetPassword = () => {\r\n        window.history.go(-1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography>\r\n                <Paragraph>\r\n                    <Text strong>\r\n                        {user.nombres} {user.apellidos}\r\n                    </Text>\r\n                    <Text type='secondary'>\r\n                        <br />{user.email}\r\n                    </Text>\r\n                </Paragraph>\r\n            </Typography>\r\n            <Form\r\n                layout={'vertical'}\r\n                initialValues={\r\n                    { ...user }\r\n                }\r\n                onFinish={resetPassword}\r\n                disabled={isReseting}\r\n            >\r\n                <Form.Item\r\n                    style={{ display: 'none' }}\r\n                    name='usuId'\r\n                    label={getLabel(labels.idNumber)}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='password'\r\n                    label={getLabel(labels.password)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.completePassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='passwordNew'\r\n                    label={getLabel(labels.newPassword)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.completeNewPassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPasswordNew(e.target.value)} />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name='passwordNewConfirm'\r\n                    label={getLabel(labels.confirmNewPassword)}\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: getLabel(labels.confirmNewPassword)\r\n                        }\r\n                    ]}\r\n                >\r\n                    <Input.Password onChange={e => setPasswordNewConfirm(e.target.value)} />\r\n                </Form.Item>\r\n                <PasswordChecklist\r\n                    rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                    minLength={8}\r\n                    value={passwordNew}\r\n                    valueAgain={passwordNewConfirm}\r\n                    messages={{\r\n                        minLength: getLabel(labels.passwordHasMore8Characters),\r\n                        specialChar: getLabel(labels.passwordHasSpecialCharacters),\r\n                        number: getLabel(labels.passwordHasNumber),\r\n                        capital: getLabel(labels.passwordHasCapitalLetter),\r\n                        match: getLabel(labels.passwordsMatch)\r\n                    }}\r\n                    onChange={(isValid) => { setValidForm(isValid) }}\r\n                    style={{\r\n                        padding: '0 0 20px 0',\r\n                        display: validForm ? 'none' : 'block'\r\n                    }}\r\n                />\r\n                <Space>\r\n                    <Button onClick={cancelResetPassword}\r\n                        disabled={isReseting}\r\n                    >{getLabel(labels.cancel)}</Button>\r\n                    <Button type=\"primary\"\r\n                        htmlType='submit'\r\n                        disabled={isReseting}\r\n                        loading={isReseting}>\r\n                        {\r\n                            isReseting ? getLabel(labels.resetting) : getLabel(labels.resetPassword)\r\n                        }\r\n                    </Button>\r\n                </Space>\r\n            </Form >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RestorePasswordUser","import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Col, Row, Typography } from 'antd'\r\n\r\nimport RestorePasswordUser from '../components/usuario/RestorePasswordUser'\r\nimport AlertWait from './AlertWait'\r\nimport UsuarioService from '../service/UsuarioService'\r\n\r\nimport { getDatosUsuario } from '../utils/Utils'\r\nimport { getLabel, labels } from '../utils/Internationalization'\r\n\r\nconst usuarioService = new UsuarioService()\r\n\r\nconst { Title } = Typography\r\n\r\nconst ResetPasswordUser = () => {\r\n    const id = getDatosUsuario() && getDatosUsuario().usuarioId\r\n    const navigate = useHistory()\r\n    const [user, setUser] = useState(null)\r\n    const [load, setLoad] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const fetchUser = async () => {\r\n        setLoad(false)\r\n        setIsLoading(true)\r\n        try {\r\n            const { data } = await usuarioService.get({ navigate, usuario: { usuId: id } })\r\n            const usuario = data.listObject[0]\r\n            setUser(usuario)\r\n        }\r\n        catch (error) {\r\n\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (load) {\r\n            fetchUser()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <Row justify='center' gutter={[15, 20]}>\r\n            <Col span={24}>\r\n                <div className='mgeCard' style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Typography>\r\n                        <Title level={3}>\r\n                            <span className='mge-darkGreen'>\r\n                                {\r\n                                    getLabel(labels.resetPassword).split(' ').map(l => `${l.substring(0, 1).toUpperCase()}${l.substring(1)}`).join(' ')\r\n                                }\r\n                            </span>\r\n                        </Title>\r\n                    </Typography>\r\n                </div>\r\n            </Col>\r\n            <Col xs={22} sm={18} md={16} lg={14} xl={10} xxl={8}>\r\n                {\r\n                    isLoading && <AlertWait isLoading={isLoading} message={getLabel(labels.pleaseWait)} />\r\n                }\r\n                {\r\n                    user && <RestorePasswordUser user={user} navigate={navigate}></RestorePasswordUser>\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ResetPasswordUser","import React, { useState } from 'react'\r\nimport { Col, Radio, Row, Typography, Space, Button } from 'antd'\r\nimport { getCultures } from '../../utils/Utils'\r\nimport { getCulture, getLabel, labels, setCulture } from '../../utils/Internationalization'\r\nimport toast from 'react-hot-toast'\r\nconst { Title, Paragraph, Text } = Typography\r\n\r\nconst LanguagePreferences = () => {\r\n\r\n    const [value, setValue] = useState(getCulture())\r\n\r\n    const renderCulture = ({ id, value }) => <Radio key={id} value={id}>{value}</Radio>\r\n\r\n    const onChange = (e) => {\r\n        setValue(e.target.value)\r\n        const culture = { culture: e.target.value }\r\n        setCulture(culture)\r\n        toast.success(getLabel(labels.languagePreferencesSaved))\r\n    }\r\n\r\n    return (\r\n        <Row justify='center' gutter={[15, 20]}>\r\n            <Col span={24}>\r\n                <div className='mgeCard' style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Typography>\r\n                        <Title level={3}>\r\n                            <span className='mge-darkGreen'>\r\n                                {getLabel(labels.languagePreferences)}\r\n                            </span>\r\n                        </Title>\r\n                        <Paragraph>\r\n                            <Text type='secondary'>\r\n                                {getLabel(labels.seePreferredLanguage)}\r\n                            </Text>\r\n                        </Paragraph>\r\n                    </Typography>\r\n                </div>\r\n            </Col>\r\n            <Col span={24}>\r\n                <div style={{ padding: '15px 20px 10px 20px' }}>\r\n                    <Radio.Group onChange={onChange} value={value}>\r\n                        <Space direction='horizontal'>\r\n                            {\r\n                                getCultures().map(c => renderCulture(c))\r\n                            }\r\n                        </Space>\r\n                    </Radio.Group>\r\n                </div>\r\n            </Col>\r\n            <Col span={24}>\r\n                <div style={{ padding: '15px 20px 10px 20px', textAlign: 'end' }}>\r\n                    <Button\r\n                        type='default'\r\n                        onClick={() => {\r\n                            window.history.go(-1)\r\n                        }}\r\n                    >\r\n                        {getLabel(labels.back)}\r\n                    </Button>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default LanguagePreferences","import React from 'react'\r\nimport LanguagePreferences from '../components/cuenta/LanguagePreferences'\r\nconst Language = () => {\r\n    return <LanguagePreferences />\r\n}\r\nexport default Language","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { classNames } from \"primereact/utils\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\n\r\nimport AppTopbar from \"./AppTopbar\";\r\nimport AppFooter from \"./AppFooter\";\r\nimport AppRightPanel from \"./AppRightPanel\";\r\n\r\nimport { Tooltip } from \"primereact/tooltip\";\r\n\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport \"primeicons/primeicons.css\";\r\nimport \"primeflex/primeflex.css\";\r\nimport \"./App.scss\";\r\n\r\nimport Usuarios from \"./components/usuario\";\r\nimport Usuario from \"./components/usuario/Usuario\";\r\nimport Opciones from \"./components/opcion\";\r\nimport Perfiles from \"./components/perfil\";\r\nimport Perfil from \"./components/perfil/Perfil\";\r\n\r\nimport Dashboard from \"./components/dashboard/Dashboard\";\r\nimport UserInfo from \"./components/dashboard/UserInfo\";\r\nimport UsuarioNew from \"./components/usuario/UsuarioNew\";\r\nimport MiCuenta from \"./components/cuenta/MiCuenta\";\r\nimport Courses from \"./components/courses/Courses\";\r\nimport Course from \"./components/courses/Course\";\r\nimport Applicants from \"./components/Applicant/Applicants\";\r\nimport Applicant from \"./components/Applicant/Applicant\";\r\nimport WorkPlan from \"./components/workplan/WorkPlan\";\r\nimport FinalReport from \"./components/finalReport/FinalReport\";\r\nimport Certificate from \"./components/certificate/Certificate\";\r\nimport Classes from \"./components/classes/Classes\";\r\nimport Training from \"./components/training/Training\";\r\n\r\nimport { getDatosUsuario, getOpcionesMenu } from \"./utils/Utils\";\r\nimport TrainingInfo from \"./components/dashboard/TrainingInfo\";\r\nimport TrainingApplicant from \"./components/dashboard/TrainingApplicant\";\r\nimport Beneficiaries from \"./components/beneficiary/Beneficiaries\";\r\nimport { Redirect } from \"react-router-dom/cjs/react-router-dom.min\";\r\nimport ResetPasswordUser from \"./pages/ResetPasswordUser\";\r\nimport Language from \"./pages/Language\";\r\n\r\nconst App = (props) => {\r\n  const [resetActiveIndex, setResetActiveIndex] = useState(null);\r\n  const [staticMenuMobileActive, setStaticMenuMobileActive] = useState(false);\r\n  const [sidebarStatic, setSidebarStatic] = useState(true);\r\n  const [sidebarActive, setSidebarActive] = useState(true);\r\n  const [menuActive, setMenuActive] = useState(false);\r\n  const [configActive, setConfigActive] = useState(false);\r\n  const [rightPanelActive, setRightPanelActive] = useState(false);\r\n  const [searchActive, setSearchActive] = useState(false);\r\n  const [topbarUserMenuActive, setTopbarUserMenuActive] = useState(false);\r\n  const copyTooltipRef = useRef();\r\n  const location = useLocation();\r\n\r\n  const menu = getOpcionesMenu();\r\n\r\n  let menuClick;\r\n  let rightPanelClick;\r\n  let configClick;\r\n  let searchClick;\r\n  let topbarUserMenuClick;\r\n\r\n  useEffect(() => {\r\n    copyTooltipRef &&\r\n      copyTooltipRef.current &&\r\n      copyTooltipRef.current.updateTargetEvents();\r\n  }, [location]);\r\n\r\n  useEffect(() => {\r\n    if (staticMenuMobileActive) {\r\n      blockBodyScroll();\r\n    } else {\r\n      unblockBodyScroll();\r\n    }\r\n  }, [staticMenuMobileActive]);\r\n\r\n  useEffect(() => {\r\n    setResetActiveIndex(true);\r\n    setMenuActive(false);\r\n  }, []);\r\n\r\n  const onMenuItemClick = (event) => {\r\n    if (!event.item.items) {\r\n      setResetActiveIndex(true);\r\n      hideOverlayMenu();\r\n    }\r\n    if (!event.item.items && (isSlim() || isHorizontal())) {\r\n      setMenuActive(false);\r\n    }\r\n  };\r\n\r\n  const onMenuClick = (event) => {\r\n    if (menuActive && event.target.className === \"layout-menu-container\") {\r\n      setResetActiveIndex(true);\r\n      setMenuActive(false);\r\n    }\r\n    menuClick = true;\r\n  };\r\n\r\n  const blockBodyScroll = () => {\r\n    if (document.body.classList) {\r\n      document.body.classList.add(\"blocked-scroll\");\r\n    } else {\r\n      document.body.className += \" blocked-scroll\";\r\n    }\r\n  };\r\n\r\n  const unblockBodyScroll = () => {\r\n    if (document.body.classList) {\r\n      document.body.classList.remove(\"blocked-scroll\");\r\n    } else {\r\n      document.body.className = document.body.className.replace(\r\n        new RegExp(\r\n          \"(^|\\\\b)\" + \"blocked-scroll\".split(\" \").join(\"|\") + \"(\\\\b|$)\",\r\n          \"gi\"\r\n        ),\r\n        \" \"\r\n      );\r\n    }\r\n  };\r\n\r\n  const onMenuButtonClick = (event) => {\r\n    menuClick = true;\r\n    setTopbarUserMenuActive(false);\r\n    setRightPanelActive(false);\r\n\r\n    if (isMobile()) {\r\n      setStaticMenuMobileActive(\r\n        (prevStaticMenuMobileActive) => !prevStaticMenuMobileActive\r\n      );\r\n      if (staticMenuMobileActive) {\r\n        blockBodyScroll();\r\n      } else {\r\n        unblockBodyScroll();\r\n      }\r\n    }\r\n    event.preventDefault();\r\n  };\r\n\r\n  const isMobile = () => {\r\n    return window.innerWidth <= 991;\r\n  };\r\n\r\n  const isHorizontal = () => {\r\n    return \"sideBar\" === \"horizontal\";\r\n  };\r\n\r\n  const isSlim = () => {\r\n    return \"sideBar\" === \"slim\";\r\n  };\r\n\r\n  const hideOverlayMenu = () => {\r\n    setStaticMenuMobileActive(false);\r\n    unblockBodyScroll();\r\n  };\r\n\r\n  const onRightPanelClick = () => {\r\n    rightPanelClick = true;\r\n  };\r\n\r\n  const onRightPanelButtonClick = () => {\r\n    setRightPanelActive((prevState) => !prevState);\r\n    rightPanelClick = true;\r\n  };\r\n\r\n  const onTopbarSearchToggle = () => {\r\n    setSearchActive((prevState) => !prevState);\r\n    searchClick = true;\r\n  };\r\n\r\n  const onTopbarSearchClick = () => {\r\n    searchClick = true;\r\n  };\r\n\r\n  const onTopbarUserMenuClick = () => {\r\n    setTopbarUserMenuActive((prevState) => !prevState);\r\n    topbarUserMenuClick = true;\r\n  };\r\n\r\n  const onDocumentClick = () => {\r\n    if (!searchClick && searchActive) {\r\n      setSearchActive(false);\r\n      searchClick = false;\r\n    }\r\n\r\n    if (!topbarUserMenuClick && topbarUserMenuActive) {\r\n      setTopbarUserMenuActive(false);\r\n      topbarUserMenuClick = false;\r\n    }\r\n\r\n    if (!rightPanelClick && rightPanelActive) {\r\n      setRightPanelActive(false);\r\n    }\r\n\r\n    if (!configClick && configActive) {\r\n      setConfigActive(false);\r\n    }\r\n\r\n    if (!menuClick) {\r\n      if (isSlim() || isHorizontal()) {\r\n        setResetActiveIndex(true);\r\n        setMenuActive(false);\r\n      }\r\n\r\n      if (staticMenuMobileActive) {\r\n        hideOverlayMenu();\r\n      }\r\n\r\n      unblockBodyScroll();\r\n    }\r\n\r\n    searchClick = false;\r\n    topbarUserMenuClick = false;\r\n    rightPanelClick = false;\r\n    configClick = false;\r\n    menuClick = false;\r\n  };\r\n\r\n  const onSidebarMouseOver = () => {\r\n    setSidebarActive(!isMobile());\r\n  };\r\n\r\n  const onSidebarMouseLeave = () => {\r\n    setSidebarActive(false);\r\n  };\r\n\r\n  const onToggleMenu = (event) => {\r\n    menuClick = true;\r\n    setSidebarStatic((prevState) => !prevState);\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onRootMenuItemClick = () => {\r\n    setMenuActive((prevMenuActive) => !prevMenuActive);\r\n  };\r\n\r\n  const layoutClassName = classNames(\r\n    \"layout-wrapper\",\r\n    {\r\n      \"layout-sidebar\": \"sidebar\",\r\n      \"layout-static\": \"sidebar\" && sidebarStatic,\r\n      \"layout-horizontal\": \"sidebar\" === \"horizontal\",\r\n      \"layout-rightpanel-active\": rightPanelActive,\r\n      \"layout-slim\": \"sidebar\" === \"slim\",\r\n      \"layout-mobile-active\": staticMenuMobileActive,\r\n      \"p-input-filled\": \"filled\",\r\n      \"p-ripple-disabled\": false,\r\n    },\r\n    \"layout-menu-light layout-topbar-light\"\r\n  );\r\n\r\n  return (\r\n    <div\r\n      className={layoutClassName}\r\n      onClick={onDocumentClick}\r\n      style={{ backgroundColor: \"#F0F0F0\" }}\r\n    >\r\n      <Tooltip\r\n        ref={copyTooltipRef}\r\n        target=\".block-action-copy\"\r\n        position=\"bottom\"\r\n        content=\"Copied to clipboard\"\r\n        event=\"focus\"\r\n      />\r\n\r\n      <AppTopbar\r\n        topbarScheme={\"light\"}\r\n        onRightPanelButtonClick={onRightPanelButtonClick}\r\n        searchActive={searchActive}\r\n        onTopbarSearchToggle={onTopbarSearchToggle}\r\n        onTopbarSearchClick={onTopbarSearchClick}\r\n        topbarUserMenuActive={topbarUserMenuActive}\r\n        onTopbarUserMenuClick={onTopbarUserMenuClick}\r\n        menu={menu}\r\n        menuActive={menuActive}\r\n        onRootMenuItemClick={onRootMenuItemClick}\r\n        mobileMenuActive={staticMenuMobileActive}\r\n        onMenuItemClick={onMenuItemClick}\r\n        menuMode={\"sidebar\"}\r\n        sidebarStatic={sidebarStatic}\r\n        sidebarActive={sidebarActive}\r\n        onSidebarMouseOver={onSidebarMouseOver}\r\n        onSidebarMouseLeave={onSidebarMouseLeave}\r\n        onToggleMenu={onToggleMenu}\r\n        onMenuButtonClick={onMenuButtonClick}\r\n        resetActiveIndex={resetActiveIndex}\r\n        onMenuClick={onMenuClick}\r\n      />\r\n\r\n      <AppRightPanel onRightPanelClick={onRightPanelClick} />\r\n\r\n      <div className=\"layout-main\">\r\n        <div\r\n          className=\"mgeBG\"\r\n          style={{\r\n            opacity: \"0.3\",\r\n            height: \"100vh\",\r\n            position: \"fixed\",\r\n            width: \"100%\",\r\n            bottom: \"0\",\r\n            right: \"0\",\r\n          }}\r\n        >\r\n          &nbsp;\r\n        </div>\r\n        <div className=\"layout-content\">\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return getDatosUsuario() &&\r\n                getDatosUsuario().opciones &&\r\n                getDatosUsuario().opciones.length > 0 ? (\r\n                <Redirect to={getDatosUsuario().opciones[0].actionOpcion} />\r\n              ) : (\r\n                <Redirect to=\"/login\" />\r\n              );\r\n            }}\r\n          />\r\n          <Route path=\"/dashboard\" exact component={Dashboard} />\r\n          <Route path=\"/user/:id\" exact component={UserInfo} />\r\n          <Route path=\"/traininginfo/:id\" exact component={TrainingInfo} />\r\n          <Route\r\n            path=\"/trainingapplicant/:id/:idTraining\"\r\n            exact\r\n            component={TrainingApplicant}\r\n          />\r\n\r\n          <Route path=\"/users\" exact component={Usuarios} />\r\n          <Route path=\"/usernew\" exact component={UsuarioNew} />\r\n          <Route path=\"/users/:id\" exact component={Usuario} />\r\n          <Route path=\"/resetPassword\" exact component={ResetPasswordUser} />\r\n          <Route path=\"/myaccount\" exact component={MiCuenta} />\r\n          <Route path=\"/language\" exact component={Language} />\r\n\r\n          <Route path=\"/opciones\" exact component={Opciones} />\r\n          <Route path=\"/perfiles\" exact component={Perfiles} />\r\n          <Route path=\"/perfil/:id/:nombre\" exact component={Perfil} />\r\n\r\n          <Route path=\"/training\" exact component={Courses} />\r\n          <Route path=\"/training/:id\" exact component={Applicants} />\r\n          <Route path=\"/trainingedit/:id\" exact component={Training} />\r\n          <Route path=\"/trainingnew\" exact component={Course} />\r\n\r\n          <Route path=\"/applicants\" exact component={Applicants} />\r\n          <Route\r\n            path=\"/applicants/:id/:idTraining\"\r\n            exact\r\n            component={Applicant}\r\n          />\r\n\r\n          <Route path=\"/classes\" exact component={Classes} />\r\n          <Route path=\"/workplan\" exact component={WorkPlan} />\r\n          <Route\r\n            path=\"/beneficiaries/:operation\"\r\n            exact\r\n            component={Beneficiaries}\r\n          />\r\n          <Route path=\"/finalreport\" exact component={FinalReport} />\r\n          <Route path=\"/certificate\" exact component={Certificate} />\r\n        </div>\r\n\r\n        <AppFooter />\r\n      </div>\r\n      <div className=\"layout-mask modal-in\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import axios from \"axios\"\r\nimport { getAutenticarUrl, getAutorizarUrl, updatePassword, recoveryPassword, validateUserUuid } from \"../utils/urls\"\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport default class CuentaService {\r\n    autenticar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutenticarUrl(), credenciales, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    autorizar = (props) => {\r\n        const { credenciales } = props\r\n        return axios.post(getAutorizarUrl(), credenciales, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    validateResetPassword = ({ datos }) => (axios.post(validateUserUuid(), datos, { headers: { \"Accept-Language\": getCulture() } }))\r\n    recoveryPassword = (props) => {\r\n        const { datos } = props\r\n        return axios.post(recoveryPassword(), datos, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n    updatePassword = (props) => {\r\n        const { datos } = props\r\n        return axios.patch(updatePassword(), datos, { headers: { \"Accept-Language\": getCulture() } })\r\n    }\r\n}","import axios from \"axios\"\r\nimport AxiosInstance from \"./../utils/AxiosInstance\"\r\nimport { getActualizarCatalogoUrl, getCatalogosFilterUrl, getCatalogosPorIdUrl, getCatalogosPorPadreUrl, getCatalogosUrl, getEliminarCatalogoUrl, getInsertarCatalogoUrl } from './../utils/urls'\r\nimport { getCulture } from \"../utils/Internationalization\"\r\n\r\nexport default class CatalogoService {\r\n    getPaises = () => this.getPorPadre({ catalogo: { catValor: \"CAT_PAISES\" } })\r\n    getModalidad = () => this.getPorPadre({ catalogo: { catValor: \"CAT_MODALIDAD\" } })\r\n    getCursos = () => this.getPorPadre({ catalogo: { catValor: \"CAT_CURSOS\" } })\r\n    getGeneros = () => this.getPorPadre({ catalogo: { catValor: \"CAT_SEXO\" } })\r\n    getTrainingStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_ENT\" } })\r\n    getReportType = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TIP_INF\" } })\r\n    getReportStatus = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_INF\" } })\r\n    getStates = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EST_REG\" } })\r\n    getEducationLevel = () => this.getPorPadre({ catalogo: { catValor: \"CAT_EDU_LEV\" } })\r\n    getTypePerson = () => this.getPorPadre({ catalogo: { catValor: \"CAT_TYP_PER\" } })\r\n    getRegion = () => this.getPorPadre({ catalogo: { catValor: \"CAT_REGIONS\" } })\r\n    gets = (props) => {\r\n        const { navigate } = props\r\n        return AxiosInstance(navigate).get(getCatalogosUrl())\r\n    }\r\n    getsFiltro = (props) => {\r\n        const { navigate, filtros } = props\r\n        return AxiosInstance(navigate).post(getCatalogosFilterUrl(), { ...filtros })\r\n    }\r\n    getPorPadre = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    getCatalogo = (props) => {\r\n        const { catalogo } = props\r\n        const axiosInstance = axios.create({ headers: { \"Accept-Language\": getCulture() } })\r\n        return axiosInstance.post(getCatalogosPorPadreUrl(), catalogo)\r\n    }\r\n    get = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getCatalogosPorIdUrl(), catalogo)\r\n    }\r\n    set = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(catalogo.catId !== undefined && catalogo.catId !== null && catalogo.catId !== '' ? getActualizarCatalogoUrl() : getInsertarCatalogoUrl(), catalogo)\r\n    }\r\n    del = (props) => {\r\n        const { navigate, catalogo } = props\r\n        return AxiosInstance(navigate).post(getEliminarCatalogoUrl(), catalogo)\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Input, Form, Button, Row, Col, Card, Image, Typography, Divider } from 'antd'\r\nimport AlertWait from './AlertWait'\r\nimport md5 from 'md5'\r\nimport CuentaService from '../service/CuentaService'\r\nimport CatalogoService from '../service/CatalogoService'\r\n\r\nimport './main.css'\r\nimport { getDatosUsuario } from '../utils/Utils'\r\nimport { getLabel, labels, setCulture } from '../utils/Internationalization'\r\n\r\nconst cuentaService = new CuentaService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst Login = () => {\r\n\r\n    const history = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const [datosUsuario, setDatosUsuario] = useState(null)\r\n    const [showPerfiles, setShowPerfiles] = useState(false)\r\n    const [form] = Form.useForm()\r\n\r\n    const autorizar = (credenciales) => {\r\n        setError(\"\")\r\n        setIsLoading(true)\r\n        cuentaService.autorizar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data, headers } = response\r\n                const { authorization } = headers\r\n                localStorage.setItem(\r\n                    'mgeToken',\r\n                    authorization.replace(\"Bearer\", \"\").trim()\r\n                )\r\n                const visible = true\r\n                const { opciones } = data.listObject[0]\r\n                const opcionesVisible = opciones.map(o => (o.actionOpcion.indexOf('/beneficiaries/') >= 0 ? { ...o, visible: false } : { ...o, visible }))\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify({ ...getDatosUsuario(), opciones: opcionesVisible })\r\n                )\r\n                // Get Catalogos\r\n                const requests = []\r\n                requests.push(catalogoService.getPaises())\r\n                requests.push(catalogoService.getCursos())\r\n                requests.push(catalogoService.getModalidad())\r\n                requests.push(catalogoService.getGeneros())\r\n                requests.push(catalogoService.getTrainingStatus())\r\n                requests.push(catalogoService.getReportType())\r\n                requests.push(catalogoService.getReportStatus())\r\n                requests.push(catalogoService.getStates())\r\n                requests.push(catalogoService.getEducationLevel())\r\n                requests.push(catalogoService.getTypePerson())\r\n                requests.push(catalogoService.getRegion())\r\n                let mgeCatalogos = []\r\n                Promise.all(requests)\r\n                    .then((results) => {\r\n                        if (results.length > 0) {\r\n                            mgeCatalogos =\r\n                            {\r\n                                paises: results[0].data.listObject,\r\n                                cursos: results[1].data.listObject,\r\n                                modalidades: results[2].data.listObject,\r\n                                generos: results[3].data.listObject,\r\n                                trainingStatus: results[4].data.listObject,\r\n                                reportType: results[5].data.listObject,\r\n                                reportStatus: results[6].data.listObject,\r\n                                states: results[7].data.listObject,\r\n                                educationLevels: results[8].data.listObject,\r\n                                typePersons: results[9].data.listObject,\r\n                                regions: results[10].data.listObject\r\n                            }\r\n                        }\r\n                        localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n                    })\r\n                    .catch(error => {\r\n                        const { response } = error\r\n                        const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                        setError(msgError)\r\n                    })\r\n                history.push(getDatosUsuario().opciones[0].actionOpcion || '/')\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const login = (values) => {\r\n        setError(\"\")\r\n        const credenciales = { ...values, password: md5(values.password) }\r\n        setIsLoading(true)\r\n        cuentaService\r\n            .autenticar({ credenciales })\r\n            .then((response) => {\r\n                setIsLoading(false)\r\n                const { data } = response\r\n                const usuario = data.listObject[0]\r\n                localStorage.setItem(\r\n                    'mgeDatosUsuario',\r\n                    JSON.stringify(usuario)\r\n                )\r\n                setDatosUsuario(usuario)\r\n                if (localStorage.getItem('mgeCulture') === null) setCulture({ culture: usuario.cultura || 'en_US' })\r\n                if (usuario.perfiles && usuario.perfiles.length > 0) {\r\n                    if (usuario.perfiles.length === 1) {\r\n                        const credenciales = { usuId: usuario.usuarioId, perId: usuario.perfiles[0].perId }\r\n                        autorizar(credenciales)\r\n                    }\r\n                    else if (usuario.perfiles.length > 1) {\r\n                        setShowPerfiles(true)\r\n                    }\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                setIsLoading(false)\r\n                const { response } = error\r\n                if (response.status === 500) {\r\n                    setError(response.statusText)\r\n                } else if (response.status === 404) {\r\n                    setError(getLabel(labels.resourceNotAvailable))\r\n                } else {\r\n                    setError(response.data[0].messageText)\r\n                }\r\n            })\r\n    }\r\n\r\n    const recuperarPassword = () => {\r\n        history.push('/recover')\r\n    }\r\n\r\n    const renderPerfil = (p) => {\r\n        const { idPerfil, perfil } = p\r\n        return (\r\n            <Col key={idPerfil} xs={12} sm={12} md={12} lg={12} xl={12}>\r\n                <Card\r\n                    hoverable\r\n                    onClick={() => autorizar({ usuId: datosUsuario.usuarioId, perId: idPerfil })}\r\n                    actions={[\r\n                        <Typography.Title level={5} style={{ color: \"#333\" }}>\r\n                            {perfil}\r\n                        </Typography.Title>\r\n                    ]\r\n                    }\r\n                    style={\r\n                        {\r\n                            backgroundColor: '#F0F0F0',\r\n                            borderColor: '#CCC'\r\n                        }\r\n                    }\r\n                >\r\n                    <Row justify='center'>\r\n                        <Col>\r\n                            <Image src={\"./assets/\" + perfil + \"_1.png\"} preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap-login100\">\r\n                <div className=\"login100-form validate-form\">\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 50px 20px' }}>\r\n                            <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col span={24} style={{ textAlign: 'center', padding: '0 20px 20px 20px' }}>\r\n                            <Typography.Title level={2}>\r\n                                <span className=\"mge-darkGreen\">\r\n                                    {getLabel(labels.welcomeBack)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                            <Typography.Title level={4}>\r\n                                <span className=\"mge-green\">\r\n                                    {getLabel(labels.loginAccess)}\r\n                                </span>\r\n                            </Typography.Title>\r\n                        </Col>\r\n                    </Row>\r\n                    {\r\n                        datosUsuario && datosUsuario.perfiles.length > 0 && showPerfiles ?\r\n                            <Row gutter={[10, 10]}>\r\n                                <Col span={24}>\r\n                                    <Divider><span style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Ingresar como</span></Divider>\r\n                                </Col>\r\n                                {\r\n                                    datosUsuario.perfiles.length > 0 && datosUsuario.perfiles.map(p => renderPerfil(p))\r\n                                }\r\n                            </Row>\r\n                            :\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form\r\n                                        layout={'vertical'}\r\n                                        form={form}\r\n                                        onFinish={login}\r\n                                    >\r\n                                        <Form.Item label={getLabel(labels.emailLogin)}\r\n                                            name='email'\r\n                                            rules={[\r\n                                                {\r\n                                                    type: 'email',\r\n                                                    message: getLabel(labels.emailNotValid)\r\n                                                },\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterEmail),\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                        <Form.Item label={getLabel(labels.passwordLogin)}\r\n                                            name='password'\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: getLabel(labels.enterPassword)\r\n                                                }\r\n                                            ]}>\r\n                                            <Input.Password />\r\n                                        </Form.Item>\r\n                                        <Form.Item>\r\n                                            <Button style={{ backgroundColor: '#385A28', borderColor: '#385A28' }} type='primary' htmlType='submit' loading={isLoading} disabled={isLoading} block>\r\n                                                {getLabel(labels.login)}\r\n                                            </Button>\r\n                                        </Form.Item>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                    }\r\n                    <AlertWait error={error} isLoading={isLoading} />\r\n                    <Row justify='center' style={{ paddingTop: '15px' }}>\r\n                        <Col>\r\n                            <Button type='link' onClick={recuperarPassword}>\r\n                                {\r\n                                    getLabel(labels.forgotPassword)\r\n                                }\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n\r\n                <div className=\"login100-more\" style={\r\n                    {\r\n                        backgroundImage: 'url(./assets/fondoLogin.png)',\r\n                        backgroundColor: '#70B450'\r\n                    }}>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login","import React, { useEffect, useState } from 'react'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { Layout, Row, Col, Image, Form, Input, Select, DatePicker, Switch, Button, Typography, Tooltip, Space, Spin, Result, Upload } from 'antd'\r\nimport * as anticons from '@ant-design/icons'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport { getCulture, getLabel, labels } from '../utils/Internationalization'\r\nimport { disabledDate, getCatalogos } from '../utils/Utils'\r\n\r\nimport CatalogoService from '../service/CatalogoService'\r\nimport UsuarioService from '../service/UsuarioService'\r\nimport PostulantService from '../service/PostulantService'\r\nimport toast from 'react-hot-toast'\r\n\r\nconst { Option } = Select\r\nconst usuarioService = new UsuarioService()\r\nconst postulantService = new PostulantService()\r\nconst catalogoService = new CatalogoService()\r\n\r\nconst renderPaisValor = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catNombre}></img>\r\n        &nbsp;{\r\n            e.catNombre\r\n        }\r\n    </>\r\n</Option>\r\n\r\nconst renderPaisCode = e => <Option key={e.catValor} value={e.catId}>\r\n    <>\r\n        +({e.catValor})&nbsp;\r\n        <img\r\n            src={`https://flagcdn.com/24x18/${e.catDescripcion.toLowerCase()}.png`}\r\n            srcSet={`https://flagcdn.com/48x36/${e.catDescripcion.toLowerCase()}.png 2x,https://flagcdn.com/72x54/${e.catDescripcion.toLowerCase()}.png 3x`}\r\n            width=\"24\"\r\n            height=\"18\"\r\n            alt={e.catDescripcion}></img>\r\n    </>\r\n</Option>\r\n\r\nconst renderError = (e) => <div key={e.messageCode}>{e.messageText}</div>\r\n\r\nconst Signup = () => {\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [photoFile, setPhotoFile] = useState();\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const props = {\r\n        onRemove: (file) => {\r\n            const index = fileList.indexOf(file);\r\n            const newFileList = fileList.slice();\r\n            newFileList.splice(index, 1);\r\n            setFileList(newFileList);\r\n            setPhotoFile(null);\r\n        },\r\n        beforeUpload: (file) => {\r\n            setFileList([...fileList, file]);\r\n            setPhotoFile(URL.createObjectURL(file));\r\n            return false;\r\n        },\r\n        fileList,\r\n    }\r\n\r\n    const navigate = useHistory()\r\n    const [loadCatalogos, setLoadCatalogos] = useState(true)\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isUploading, setIsUploading] = useState(false)\r\n    const [isRegister, setIsRegister] = useState(false)\r\n    const [password, setPassword] = useState(\"\")\r\n    const [passwordConfirm, setPasswordConfirm] = useState(\"\")\r\n    const [currentlyWorking, setCurrentlyWorking] = useState(false)\r\n    const [validForm, setValidForm] = useState(false)\r\n    const [validPostulant, setValidPostulant] = useState(null)\r\n\r\n    const validate = async () => {\r\n        setIsLoading(true)\r\n        const postulant = {\r\n            posId: id,\r\n            posUuid: uuid\r\n        }\r\n        try {\r\n            const { data } = await postulantService.validate({ postulant })\r\n            if (data) {\r\n                const validPostulantInfo = data.listObject[0]\r\n                const { posEmail, idInvitadoPor, posId, posEstado } = validPostulantInfo\r\n                const postulantInfo = { email: posEmail, invitadopor: idInvitadoPor, idPostulante: posId, posEstado }\r\n                setValidPostulant(postulantInfo)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            toast.error(response.status === 409 ? response.data[0].messageText : getLabel(labels.errorOcurred))\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    const fetchCatalogos = async () => {\r\n        setLoadCatalogos(false)\r\n        setIsLoading(true)\r\n        // Get Catalogos\r\n        const requests = []\r\n        requests.push(catalogoService.getPaises())\r\n        requests.push(catalogoService.getCursos())\r\n        requests.push(catalogoService.getModalidad())\r\n        requests.push(catalogoService.getGeneros())\r\n        requests.push(catalogoService.getTrainingStatus())\r\n        requests.push(catalogoService.getReportType())\r\n        requests.push(catalogoService.getReportStatus())\r\n        requests.push(catalogoService.getStates())\r\n        requests.push(catalogoService.getEducationLevel())\r\n        requests.push(catalogoService.getTypePerson())\r\n        requests.push(catalogoService.getRegion())\r\n        let mgeCatalogos = []\r\n        Promise.all(requests)\r\n            .then((results) => {\r\n                if (results.length > 0) {\r\n                    mgeCatalogos =\r\n                    {\r\n                        paises: results[0].data.listObject,\r\n                        cursos: results[1].data.listObject,\r\n                        modalidades: results[2].data.listObject,\r\n                        generos: results[3].data.listObject,\r\n                        trainingStatus: results[4].data.listObject,\r\n                        reportType: results[5].data.listObject,\r\n                        reportStatus: results[6].data.listObject,\r\n                        states: results[7].data.listObject,\r\n                        educationLevels: results[8].data.listObject,\r\n                        typePersons: results[9].data.listObject,\r\n                        regions: results[9].data.listObject\r\n                    }\r\n                    validate()\r\n                }\r\n                localStorage.setItem(\"mgeCatalogos\", JSON.stringify(mgeCatalogos))\r\n            })\r\n            .catch(error => {\r\n                const { response } = error\r\n                const msgError = response.status === 409 ? response.data[0].messageText : response.data\r\n                toast.error(msgError)\r\n                setIsLoading(false)\r\n            })\r\n    }\r\n\r\n    const handleUpload = async ({ usuId }) => {\r\n        const datos = new FormData();\r\n        datos.append('file', fileList[0])\r\n        datos.append('usuId', usuId)\r\n        setIsUploading(true)\r\n        try {\r\n            const { data } = await usuarioService.upLoadPhoto({ datos })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                toast.success('Your account has been created successfully. Please log in.')\r\n                setTimeout(() => {\r\n                    navigate.push('/login')\r\n                }, 3000);\r\n            }\r\n        } catch (_) {\r\n            toast.error('Upload failed')\r\n        } finally {\r\n            setIsRegister(false)\r\n            setIsUploading(false)\r\n            setFileList([])\r\n        }\r\n    }\r\n\r\n    const registrar = async (values) => {\r\n        const usuario = {\r\n            ...values,\r\n            password: md5(values.password),\r\n            passwordConfirm: md5(values.passwordConfirm),\r\n            trabaja: currentlyWorking,\r\n            perId: 5,\r\n            cultura: getCulture(),\r\n            ...validPostulant\r\n        }\r\n        setIsRegister(true)\r\n        try {\r\n            const { data } = await usuarioService.put({ usuario })\r\n            if (data && data.listObject.length > 0 && data.listObject[0].usuId) {\r\n                const usuario = data.listObject[0]\r\n                handleUpload(usuario)\r\n            }\r\n        } catch (error) {\r\n            setIsRegister(false)\r\n            const { status, data } = error.response\r\n            switch (status) {\r\n                case 409:\r\n                    toast.error(data.map(e => renderError(e)))\r\n                    break\r\n                case 500:\r\n                    toast.error(data)\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (loadCatalogos) {\r\n            fetchCatalogos()\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    isLoading ?\r\n                        <Row style={{ padding: '30px 10px' }}>\r\n                            <Col span={24} style={{ textAlign: 'center' }}>\r\n                                <Spin size='large' tip={\r\n                                    <Typography.Paragraph style={{ padding: '10px 0' }}>\r\n                                        Loading...\r\n                                    </Typography.Paragraph>\r\n                                } />\r\n                            </Col>\r\n                        </Row>\r\n                        :\r\n                        validPostulant &&\r\n                        <>\r\n                            {\r\n                                validPostulant.posEstado.catValor === 'EST_INV' ? <>\r\n                                    <Row>\r\n                                        <Col span={24} style={{ padding: '0 0 30px 0' }}>\r\n                                            <Typography.Paragraph style={{ textAlign: 'center' }}>\r\n                                                <Typography.Text className=\"mge-darkGreen\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '2em',\r\n                                                        fontWeight: 'bold'\r\n                                                    }}\r\n                                                >\r\n                                                    Welcome to My Green Enterprise\r\n                                                </Typography.Text>\r\n                                                <Typography.Text className=\"mge-green\"\r\n                                                    style={{\r\n                                                        display: 'block',\r\n                                                        fontSize: '1.5em'\r\n                                                    }}\r\n                                                >\r\n                                                    Complete the following information to active your account\r\n                                                </Typography.Text>\r\n                                            </Typography.Paragraph>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row justify='center'>\r\n                                        <Col xs={24} sm={22} md={24} lg={20} xl={18} xxl={12}>\r\n                                            <Form\r\n                                                layout={'vertical'}\r\n                                                initialValues={\r\n                                                    validPostulant\r\n                                                }\r\n                                                onFinish={registrar}\r\n                                                disabled={isRegister}\r\n                                            >\r\n                                                <Row gutter={[10, 0]}>\r\n                                                    <Col xs={24} sm={8} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='file'\r\n                                                            label='Upload your profile picture'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select your profile picture'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Row gutter={[0, 10]}>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    {\r\n                                                                        photoFile ?\r\n                                                                            <Image src={photoFile} width={128} height={128} />\r\n                                                                            :\r\n                                                                            <Image src='./../assets/photo_profile.png' width={128} height={128} />\r\n                                                                    }\r\n                                                                </Col>\r\n                                                                <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                                    <Upload\r\n                                                                        multiple={false}\r\n                                                                        {...props}\r\n                                                                    >\r\n                                                                        <Button\r\n                                                                            type='primary'\r\n                                                                            icon={<anticons.UploadOutlined />}\r\n                                                                            disabled={\r\n                                                                                fileList.length > 0\r\n                                                                            }\r\n                                                                        >Select Photo</Button>\r\n                                                                    </Upload>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={16} md={16} lg={16} xl={16} xxl={16}>\r\n                                                        <Row gutter={[15, 0]}>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='nombres'\r\n                                                                    label=\"First Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete first Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='apellidos'\r\n                                                                    label=\"Last Name\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Complete last Name',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Input />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name={['sexoId']}\r\n                                                                    label='Sex'\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select sex',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <Select\r\n                                                                        style={{\r\n                                                                            width: '100%',\r\n                                                                            display: 'inline-block'\r\n                                                                        }}\r\n                                                                        fieldNames={{\r\n                                                                            label: 'catNombre',\r\n                                                                            value: 'catId'\r\n                                                                        }}\r\n                                                                        showSearch\r\n                                                                        options={getCatalogos().generos}\r\n                                                                        optionFilterProp=\"catNombre\"\r\n                                                                    />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                                <Form.Item\r\n                                                                    name='fechanac'\r\n                                                                    label=\"Date of birth\"\r\n                                                                    rules={[\r\n                                                                        {\r\n                                                                            required: true,\r\n                                                                            message: 'Select date of birth',\r\n                                                                        },\r\n                                                                    ]}\r\n                                                                >\r\n                                                                    <DatePicker format={'YYYY-MM-DD'} style={{ width: '100%' }} disabledDate={disabledDate} />\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='documento'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>ID Number</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                This is the unique identification number issued by the country of residence.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete ID Number',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='paisId'\r\n                                                            label=\"Country\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='paisId'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisValor(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='ciudad'\r\n                                                            label=\"City\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete city',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='codigotel'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Country Code\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Select country code',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Select name='codigotel'>\r\n                                                                {\r\n                                                                    getCatalogos().paises.map(p => renderPaisCode(p))\r\n                                                                }\r\n                                                            </Select>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='celular'\r\n                                                            label={\r\n                                                                <span style={{ padding: '0 0 2px 0' }}>\r\n                                                                    Phone Number\r\n                                                                </span>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete phone number',\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={8} lg={8} xl={8} xxl={8}>\r\n                                                        <Form.Item\r\n                                                            name='lugartrabajo'\r\n                                                            label={\r\n                                                                <Space direction='horizontal'>\r\n                                                                    <>Are you currently working?</>\r\n                                                                    <Tooltip\r\n                                                                        title={\r\n                                                                            <>\r\n                                                                                Please write the complete name of the institution.\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        placement='right'\r\n                                                                    >\r\n                                                                        <anticons.InfoCircleFilled />\r\n                                                                    </Tooltip>\r\n                                                                    <Switch\r\n                                                                        onChange={(c) => { setCurrentlyWorking(c) }}\r\n                                                                    />\r\n                                                                </Space>\r\n                                                            }\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: currentlyWorking,\r\n                                                                    message: 'If yes, please write the complete name of the institution.',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input name='lugartrabajo' disabled={!currentlyWorking} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email'\r\n                                                            label=\"Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input disabled />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item\r\n                                                            name='email2'\r\n                                                            label=\"Additional Email\"\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Complete additional email',\r\n                                                                },\r\n                                                                {\r\n                                                                    type: 'email',\r\n                                                                    message: 'Additional email is not valid'\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Create your password\"\r\n                                                            name='password'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Create your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"password\" name=\"password\" onChange={e => setPassword(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}>\r\n                                                        <Form.Item label=\"Confirm your password\"\r\n                                                            name='passwordConfirm'\r\n                                                            rules={[\r\n                                                                {\r\n                                                                    required: true,\r\n                                                                    message: 'Confirm your password',\r\n                                                                },\r\n                                                            ]}\r\n                                                        >\r\n                                                            <Input.Password id=\"passwordConfirm\" name=\"passwordConfirm\" onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                    {\r\n                                                        validForm === false &&\r\n                                                        <Col xs={24} sm={12} md={12} lg={12} xl={12} xxl={12}\r\n                                                        >\r\n                                                            <PasswordChecklist\r\n                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                minLength={8}\r\n                                                                value={password}\r\n                                                                valueAgain={passwordConfirm}\r\n                                                                messages={{\r\n                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                    specialChar: \"Password has special characters.\",\r\n                                                                    number: \"Password has a number.\",\r\n                                                                    capital: \"Password has a capital letter.\",\r\n                                                                    match: \"Passwords match.\",\r\n                                                                }}\r\n                                                                onChange={(isValid) => {\r\n                                                                    console.log(isValid)\r\n                                                                    setValidForm(isValid)\r\n                                                                }}\r\n                                                                style={{\r\n                                                                    padding: '0 0 20px 0'\r\n                                                                }}\r\n                                                            />\r\n                                                        </Col>\r\n                                                    }\r\n                                                    <Col span={24} style={{ textAlign: 'center' }}>\r\n                                                        <Form.Item>\r\n                                                            <Button type='primary' htmlType='submit'\r\n                                                                loading={isLoading || isUploading}\r\n                                                                disabled={isLoading || isUploading}\r\n                                                                block>Register</Button>\r\n                                                        </Form.Item>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Form>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </>\r\n                                    :\r\n                                    <Result\r\n                                        title=\"Your account has been previously created\"\r\n                                        extra={\r\n                                            <Button type=\"primary\" key=\"console\"\r\n                                                onClick={() => {\r\n                                                    navigate.push('/login')\r\n                                                }}\r\n                                            >\r\n                                                Log in\r\n                                            </Button>\r\n                                        }\r\n                                    />\r\n                            }\r\n                        </>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React, { useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Image, Layout, Result, Alert } from 'antd'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport { getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst RecuperarPassword = () => {\r\n    const navigate = useHistory()\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [okMsg, setOkMsg] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [emailSent, setEmailSent] = useState(true)\r\n    const [form] = Form.useForm();\r\n\r\n    const recuperar = async (values) => {\r\n        setEmailSent(false)\r\n        setError(null)\r\n        setOkMsg(null)\r\n        setIsLoading(true)\r\n        const datos = { ...values }\r\n        try {\r\n            await cuentaService.recoveryPassword({ datos })\r\n            setOkMsg('Your password was sent to the indicated email. Check your inbox.')\r\n            setEmailSent(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                setError(response.statusText)\r\n            } else if (response.status === 404) {\r\n                setError(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                setError(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                {\r\n                    emailSent === true && okMsg ?\r\n                        <Result\r\n                            status='success'\r\n                            title={okMsg}\r\n                            extra={\r\n                                <Button type=\"primary\" key=\"console\"\r\n                                    onClick={() => {\r\n                                        navigate.push('/login')\r\n                                    }}\r\n                                >\r\n                                    Log in\r\n                                </Button>\r\n                            }\r\n                        />\r\n                        :\r\n                        <Row justify='center'>\r\n                            <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                                <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Recover password</span></Divider>\r\n                                <Form\r\n                                    layout={'vertical'}\r\n                                    form={form}\r\n                                    onFinish={recuperar}\r\n                                >\r\n                                    <Form.Item label=\"Email\"\r\n                                        name='email'\r\n                                        rules={[\r\n                                            {\r\n                                                type: 'email',\r\n                                                message: 'Email is not valid'\r\n                                            },\r\n                                            {\r\n                                                required: true,\r\n                                                message: 'Complete your email',\r\n                                            },\r\n                                        ]}\r\n                                    >\r\n                                        <Input id=\"email\" name=\"email\" label='Email' type='text' />\r\n                                    </Form.Item>\r\n\r\n                                    {\r\n                                        error &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={error}\r\n                                            type='warning'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    {\r\n                                        okMsg &&\r\n                                        <Alert\r\n                                            message=''\r\n                                            description={okMsg}\r\n                                            type='success'\r\n                                            showIcon\r\n                                            closable\r\n                                            banner\r\n                                        />\r\n                                    }\r\n\r\n                                    <div style={{\r\n                                        paddingTop: '20px'\r\n                                    }}>\r\n                                        <Form.Item>\r\n                                            <Button\r\n                                                type='primary'\r\n                                                htmlType='submit'\r\n                                                loading={isLoading}\r\n                                                disabled={isLoading}\r\n                                                block\r\n                                            >Recover Password</Button>\r\n                                        </Form.Item>\r\n                                    </div>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                }\r\n            </Layout>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RecuperarPassword","import React, { useEffect, useState } from \"react\"\r\nimport { useHistory, useLocation } from \"react-router-dom\"\r\nimport { Input, Form, Button, Row, Col, Divider, Layout, Image, Result } from 'antd'\r\nimport PasswordChecklist from 'react-password-checklist'\r\nimport md5 from 'md5'\r\nimport CuentaService from \"../service/CuentaService\"\r\nimport AlertWait from \"./AlertWait\"\r\nimport toast from \"react-hot-toast\"\r\nimport { getLabel, labels } from \"../utils/Internationalization\"\r\n\r\nconst cuentaService = new CuentaService()\r\n\r\nconst ResetPassword = () => {\r\n\r\n    const navigate = useHistory()\r\n    const { search } = useLocation()\r\n    const { id, uuid } = JSON.parse('{\"' + search.substring(1, search.length).replace(/&/g, '\",\"').replace(/=/g, '\":\"') + '\"}', function (key, value) { return key === \"\" ? value : decodeURIComponent(value) })\r\n    const [validate, setValidate] = useState(true)\r\n    const [isValidating, setIsValidating] = useState(false)\r\n    const [isValid, setIsValid] = useState(false)\r\n    const [isResetting, setIsResetting] = useState(false)\r\n    const [isReset, setIsReset] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const [passwordConfirm, setPasswordConfirm] = useState('')\r\n    const [okMsg, setOkMsg] = useState(null)\r\n\r\n    const reset = async (values) => {\r\n        setOkMsg(null)\r\n        setIsResetting(true)\r\n        try {\r\n            const { data } = await cuentaService.updatePassword({ datos: { usuId: id, uuid, password: md5(values.password), passwordConfirm: md5(values.passwordConfirm) } })\r\n            if (data) {\r\n                setOkMsg(<>Password has been successfully changed. <br />Please log in again.</>)\r\n                setIsReset(true)\r\n            }\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        } finally {\r\n            setIsResetting(false)\r\n        }\r\n    }\r\n\r\n    const validateRequest = async () => {\r\n        setValidate(false)\r\n        setIsValidating(true)\r\n        try {\r\n            const datos = { usuId: id, uuid }\r\n            const { data } = await cuentaService.validateResetPassword({ datos })\r\n            if (data) setIsValid(true)\r\n        } catch (error) {\r\n            const { response } = error\r\n            if (response.status === 500) {\r\n                toast.error(response.statusText)\r\n            } else if (response.status === 404) {\r\n                toast.error(getLabel(labels.resourceNotAvailable))\r\n            } else if (response.status === 409) {\r\n                setIsValid(false)\r\n            } else {\r\n                toast.error(response.data[0].messageText)\r\n            }\r\n        }\r\n        finally {\r\n            setIsValidating(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (validate) validateRequest()\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div className=\"notification\" style={{\r\n                        borderRadius: '0px',\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <Image alt='' src='./../assets/logo.png' preview={false} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Layout style={{\r\n                padding: '40px 20px',\r\n                backgroundColor: '#F9F9F9'\r\n            }}>\r\n                <div className='mgeBG' style={{ opacity: '0.3', height: '100vh', position: 'fixed', width: '100%', bottom: '0', right: '0' }}>&nbsp;</div>\r\n                <Row justify='center'>\r\n                    <Col xs={24} sm={18} md={16} lg={12} xl={8} xxl={6}>\r\n                        <Row>\r\n                            <Col span={24}>\r\n\r\n                                {\r\n                                    isValidating ?\r\n                                        <>\r\n                                            <AlertWait isLoading={isValidating} message='Please wait...' />\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                            {\r\n                                                isValid ?\r\n                                                    <>\r\n                                                        {\r\n                                                            isReset && okMsg ?\r\n                                                                <>\r\n                                                                    <Result\r\n                                                                        status='success'\r\n                                                                        title='Password Reset'\r\n                                                                        subTitle={okMsg}\r\n                                                                        extra={\r\n                                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                                onClick={() => {\r\n                                                                                    navigate.push('/login')\r\n                                                                                }}\r\n                                                                            >\r\n                                                                                Log in\r\n                                                                            </Button>\r\n                                                                        }\r\n                                                                    />\r\n                                                                </>\r\n                                                                : <>\r\n                                                                    <Divider><span className=\"mge-darkGreen\" style={{ textTransform: 'uppercase', letterSpacing: '1px' }}>Reset password</span></Divider>\r\n                                                                    <Form\r\n                                                                        layout={'vertical'}\r\n                                                                        onFinish={reset}\r\n                                                                    >\r\n                                                                        <Form.Item label=\"New Password\"\r\n                                                                            name='password'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Complete new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPassword(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item label=\"Confirm new password\"\r\n                                                                            name='passwordConfirm'\r\n                                                                            rules={[\r\n                                                                                {\r\n                                                                                    required: true,\r\n                                                                                    message: 'Confirme new password',\r\n                                                                                },\r\n                                                                            ]}\r\n                                                                        >\r\n                                                                            <Input.Password onChange={e => setPasswordConfirm(e.target.value)} />\r\n                                                                        </Form.Item>\r\n                                                                        <Form.Item>\r\n                                                                            <PasswordChecklist\r\n                                                                                rules={[\"minLength\", \"specialChar\", \"number\", \"capital\", \"match\"]}\r\n                                                                                minLength={8}\r\n                                                                                value={password}\r\n                                                                                valueAgain={passwordConfirm}\r\n                                                                                messages={{\r\n                                                                                    minLength: \"Password has more than 8 characters.\",\r\n                                                                                    specialChar: \"Password has special characters.\",\r\n                                                                                    number: \"Password has a number.\",\r\n                                                                                    capital: \"Password has a capital letter.\",\r\n                                                                                    match: \"Passwords match.\",\r\n                                                                                }}\r\n                                                                                onChange={(isValid) => { }}\r\n                                                                            />\r\n                                                                        </Form.Item>\r\n                                                                        <div style={{\r\n                                                                            paddingTop: '10px'\r\n                                                                        }}>\r\n                                                                            <Form.Item>\r\n                                                                                <Button\r\n                                                                                    type='primary'\r\n                                                                                    htmlType='submit'\r\n                                                                                    loading={isResetting}\r\n                                                                                    disabled={isResetting}\r\n                                                                                    block>\r\n                                                                                    {\r\n                                                                                        isResetting ? 'Changing Password' : 'Reset Password'\r\n                                                                                    }\r\n                                                                                </Button>\r\n                                                                            </Form.Item>\r\n                                                                        </div>\r\n                                                                    </Form>\r\n                                                                </>\r\n                                                        }\r\n                                                    </>\r\n                                                    :\r\n                                                    <Result\r\n                                                        status='404'\r\n                                                        title='Page does not exist.'\r\n                                                        subTitle='Sorry, the page you visited does not exist.'\r\n                                                        extra={\r\n                                                            <Button type=\"primary\" key=\"console\"\r\n                                                                onClick={() => {\r\n                                                                    navigate.push('/login')\r\n                                                                }}\r\n                                                            >\r\n                                                                Log in\r\n                                                            </Button>\r\n                                                        }\r\n                                                    />\r\n                                            }\r\n                                        </>\r\n                                }\r\n\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n            </Layout >\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ResetPassword","import React, { useEffect, useState } from \"react\";\r\nimport { Route, withRouter, useLocation } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Login from \"./pages/Login\";\r\nimport Signup from \"./pages/Signup\";\r\nimport RecuperarPassword from \"./pages/RecuperarPassword\";\r\nimport ResetPassword from \"./pages/ResetPassword\";\r\n\r\nexport const ctx = React.createContext();\r\n\r\nconst AppWrapper = (props) => {\r\n  let location = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [location]);\r\n\r\n  const [colorScheme, setColorScheme] = useState(\"light\");\r\n\r\n  switch (props.location.pathname) {\r\n    case \"/login\":\r\n      return (\r\n        <Route\r\n          path=\"/login\"\r\n          render={() => <Login colorScheme={colorScheme} />}\r\n        />\r\n      );\r\n    case \"/signup\":\r\n      return (\r\n        <Route\r\n          path=\"/signup\"\r\n          render={() => <Signup colorScheme={colorScheme} />}\r\n        />\r\n      );\r\n    case \"/recover\":\r\n      return (\r\n        <Route\r\n          path=\"/recover\"\r\n          render={() => <RecuperarPassword colorScheme={colorScheme} />}\r\n        />\r\n      );\r\n    case \"/reset\":\r\n      return (\r\n        <Route\r\n          path=\"/reset\"\r\n          render={() => <ResetPassword colorScheme={colorScheme} />}\r\n        />\r\n      );\r\n    default:\r\n      return <App setColorScheme={setColorScheme} />;\r\n  }\r\n};\r\n\r\nexport default withRouter(AppWrapper);\r\n","import \"react-app-polyfill/ie11\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport AppWrapper from \"./AppWrapper\";\r\nimport { Toaster } from \"react-hot-toast\";\r\n//import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <HashRouter>\r\n    <Toaster />\r\n    <AppWrapper></AppWrapper>\r\n  </HashRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\n//serviceWorker.unregister();\r\n"],"sourceRoot":""}